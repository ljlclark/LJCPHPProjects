*****
Class LJCDocDataGenLib.LJCDocDataGen

-----
Method CreateDocDataXMLString()
Calls ProcessCode()
If writeXML == true then
  Creates a .txt file spec from codeFileSpec.
  Writes the XML string to a file.

-----
Method ProcessCode(codeFileSpec])
Opens the source file.
Reads and passes each line to LineProcessed().

-----
Method LineProcessed(line)
If the line is empty, no processing is performed.
If the line is an XML Comment line then
  If the second token if "LibName:" then
    Calls ProcessLib() to save the parsed XML Comments in the Comments object
    to the DocDataFile object.
  else
    calls LJCComments.SetComment() to parse the XML Comment.
If the line is a code comment, no processing is performed.
Returns true if line was processed; otherwise false.
Return to ProcessCode()

*****
Class LJCCommentsLib.LJCComments

-----
Method SetComment(line)
If the IsContinue property is true then
  Sets CurrentTagName property to the parsed begin tag name.
  If not "param", clears the internal comments.
  Calls GetComment() to parse the comment text.
  If CurrentTagName is not null then
    Calls SaveComment() to copy comments to DocData objects.
    If line does not have end tag:
      Set IsContinue = true;
else
  If line does not have an end tag then
    Set IsContinue == false
  Call GetComment() to parse the comment text.
  Call SaveComment() to copy comments to LJCDocData objects.
Returns to LineProcessed()

-----
Method GetComment(line)
If beginTag == "<include" then
  Sets isSimpleComment to false.
  Calls LJCInclude.SetComments(line).
  Copies LJCInclude.Comments to Comments using SetComment().
  Trims trailing white space.
  Sets CurrentTagName to null to indicate that the comment is complete.

If beginTag == "<param" then
  Sets isSimpleComment to false.
  Calls LJCParamComment.GetParam() to get LJCDocDataParam object.
  Adds object to Params.

If isSimpleComment then
  If not HasCurrentEndTag() then
    Does not trim trailing white space.
  Parse the comment text.
Returns the comment text.
Returns to SetComment()

-----
Method SaveComment(comment)
Copies comment to LJCDocData objects by CurrentTagName.

*****
Class LJCIncludeLib.LJCInclude

-----
Method SetComments()
If successfull call to SetIncludeValues()
 - to parse itemTag, XMLFile and create codeFileSpec then
  Read each line of XMLFile
    Start processing when an item tag is found.
      Parse endTag.
      If isContinue is false then
        Parse CurrentTagName from begin tag.
        If line does not have an endTag then
          Set isContinue = true.
      else
        If there is an endTag then
          Set isContinue = false.
        Call GetComment() to parse the comment text.
  Returns to LJCComment.GetComment().

-----
Method GetComment()
If no begin tag then
  Set parse to beginning of the line.
If CurrentTagName == "<code>" then
  Trim trailing newline.
Parse the comment text.
Build an XML Comment.
Call LTrimXMLComment() to left trim comment.

-----
Method LTrimXMLComment()
Converts tags to spaces
If at least 6 leading spaces then
  Trim left 6 spaces.
Returns to GetComment().

*****
Class LJCParamCommentLib.LJCParamComment
