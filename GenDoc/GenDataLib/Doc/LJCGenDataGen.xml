<?xml version="1.0" encoding="utf-8" ?>
<!-- LJCGenDataGen.xml -->
<items>
	<!-- File Level -->
	<LJCGenDataGen>
		<summary>
			Provides methods to generate GenData XML files.
		</summary>
		<remarks>
			The GenData XML files	provide the	data for GenTextLib-LJCGenText to
			generate CodeDoc HTML	files.
			&lt;p&gt;
			The GenData XML is intended to display the XML Comments based on the Text
			Template that will be used.
			&lt;/p&gt;
			&lt;p&gt;
			The Text Section and Replacement names must
			match	those expected by the Template.
			&lt;/p&gt;
			&lt;p&gt;
			The number and names of sections, items and replacements depends on the GenData
			from the PHP files and the requirements of the HTML Template.
			&lt;/p&gt;
			This is the standard layout for the GenData XML files.
			&lt;pre&gt; &amp;lt;Data xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&amp;gt;
        &amp;lt;Sections&amp;gt;
          &amp;lt;Section&amp;gt;
            &amp;lt;Begin/&amp;gt;
            &amp;lt;Name&amp;gt;Main&amp;lt;/Name&amp;gt;
            &amp;lt;Items&amp;gt;
              &amp;lt;Item&amp;gt;
                &amp;lt;Replacements&amp;gt;
                  &amp;lt;Replacement&amp;gt;
                    &amp;lt;Name&amp;gt;&amp;lt;/Name&amp;gt;
                    &amp;lt;Value&amp;gt;&amp;lt;/Value&amp;gt;
                  &amp;lt;Replacement&amp;gt;
                &amp;lt;Replacements&amp;gt;
              &amp;lt;Item&amp;gt;
            &amp;lt;Items&amp;gt;
          &amp;lt;Section&amp;gt;
        &amp;lt;Sections&amp;gt;
      &amp;lt;/Data&amp;gt;&lt;/pre&gt;
		</remarks>
	</LJCGenDataGen>
	
	<!-- Public -->
  <SerializeLib>
		<summary>Creates a Lib GenData XML string and optional file.</summary>
		<param name="$docXMLString">The DocData XML string.</param>
		<param name="$codeFileSpec">The code file specification.</param>
		<param name="$writeXML">Indicates if the XML file is to be written.</param>
		<param name="$outputPath">The output path.</param>
		<code>
      include_once "LJCRoot.php";
      $prefix = RelativePrefix();
      include_once "$prefix/GenDoc/DocDataLib/LJCDocDataGenLib.php";
      include_once "$prefix/GenDoc/GenDataLib/LJCGenDataGenLib.php";

      $docDataGen = new LJCDocDataGen();
      $genDataGen = new LJCGenDataGen();

      $fileSpec = "SourceFile.php";
      $docXMLString = $this->DocDataGen->CreateDocXMLString($fileSpec);
      $genXMLString = $this->GenDataGen->CreateLibXMLString($docXMLString
        , $fileSpec);
    </code>
	</SerializeLib>
	<!-- Private -->
  <OutputLibSpec>
    <summary>Creates a Lib DocData XML output file spec.</summary>
    <param name="$codeFileSpec">The code file specification.</param>
    <param name="$outputPath">The output path.</param>
  </OutputLibSpec>
  <SerializeLibXML>
    <summary>Creates a Lib GenData XML string.</summary>
    <param name="$docFileNode">The DocData XML main node.</param>
    <param name="$fileName"></param>
  </SerializeLibXML>
  <SerializeLibClass>
		<summary>Creates a Lib Class section GenData XML string.</summary>
		<param name="$docFileNode">The DocData XML main node.</param>
	</SerializeLibClass>

	<!-- Class Methods -->
	<!-- Private -->
  <OutputClassSpec>
    <summary>Creates a Class GenData XML output file spec.</summary>
    <param name="$class">The Class object.</param>
    <param name="$outputPath">The output path.</param>
  </OutputClassSpec>
  <SerializeClass>
    <summary>Creates a Class GenData XML string and optional file.</summary>
    <param name="$class">The Class object.</param>
    <param name="$libName"></param>
    <param name="$writeXML">Indicates if the XML file is to be written.</param>
    <param name="$outputPath">The output path.</param>
  </SerializeClass>
  <SerializeClasses>
    <summary>Creates the Class GenData XML strings and optionally files.</summary>
    <param name="$docFileNode">The DocData XML main node.</param>
    <param name="$writeXML">Indicates if the XML file is to be written.</param>
    <param name="$outputPath">The output path.</param>
  </SerializeClasses>
  <SerializeClassMethod>
    <summary>Creates a Class Methods section GenData XML string.</summary>
    <param name="$class">The Class object.</param>
  </SerializeClassMethod>
  <SerializeClassXML>
		<summary>Creates a Class GenData XML string.</summary>
		<param name="$class">The Class object.</param>
		<param name="$fileName"></param>
	</SerializeClassXML>

	<!-- Method Methods -->
	<!-- Private -->
  <OutputMethodSpec>
    <summary>Creates a Method GenData XML output file spec.</summary>
    <param name="$class">The Class object.</param>
    <param name="$method">The Method object.</param>
    <param name="$outputPath">The output path.</param>
  </OutputMethodSpec>
  <SerializeMethods>
    <summary>Creates the Method GenData XML strings and optionally files.</summary>
    <param name="$method">The Method object.</param>
    <param name="$writeXML">Indicates if the XML file is to be written.</param>
    <param name="$outputPath">The output path.</param>
  </SerializeMethods>
  <SerializeMethod>
    <summary>Creates a Method GenData XML string and optional file.</summary>
    <param name="$class">The Class object.</param>
    <param name="$method">The Method object.</param>
    <param name="$writeXML">Indicates if the XML file is to be written.</param>
    <param name="$outputPath">The output path.</param>
  </SerializeMethod>
  <SerializeMethodXML>
		<summary>Creates a Method GenData XML string.</summary>
		<param name="$class">The Class object.</param>
		<param name="$fileName"></param>
	</SerializeMethodXML>

	<!-- Property Methods -->
	<!-- Private -->
	<OutputPropertySpec>
		<summary>Creates a Property GenData XML output file spec.</summary>
		<param name="$class">The Class object.</param>
		<param name="$proerty">The property object.</param>
		<param name="$outputPath">The output path.</param>
	</OutputPropertySpec>
  <SerializeProperties>
    <summary>Creates the Property GenData XML strings and optionally files.</summary>
    <param name="$property">The Property object.</param>
    <param name="$writeXML">Indicates if the XML file is to be written.</param>
    <param name="$outputPath">The output path.</param>
  </SerializeProperties>
  <SerializeProperty>
    <summary>Creates a Property GenData XML string and optional file.</summary>
    <param name="$class">The Class object.</param>
    <param name="$property">The property object.</param>
    <param name="$writeXML">Indicates if the XML file is to be written.</param>
    <param name="$outputPath">The output path.</param>
  </SerializeProperty>
  <SerializePropertyXML>
    <summary>Creates a Property GenData XML string.</summary>
    <param name="$class">The Class object.</param>
    <param name="$fileName"></param>
  </SerializePropertyXML>



</items>