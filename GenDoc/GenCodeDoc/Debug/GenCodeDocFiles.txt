LJCComments.SetComment line:
|	/// <summary>Contains Classes to represent a Collection.</summary>
|
LJCComments.SetComment comment:
|Contains Classes to represent a Collection.|
LJCComments.SetComment line:
|	/// <include path='items/LJCCollectionBase/*' file='Doc/LJCCollectionBase.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Represents a Collection of objects.
|
LJCComments.SetComment isContinue:
| Represents a Collection of objects.
|
LJCComments.SetComment line:
|/// Testing include of cr/lf.
|
LJCComments.SetComment isContinue:
| Testing include of cr/lf.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The LJCCollectionBase class provides the code that can be inherited to
|
LJCComments.SetComment isContinue:
| The LJCCollectionBase class provides the code that can be inherited to
|
LJCComments.SetComment line:
|/// create a strongly typed Collection.
|
LJCComments.SetComment isContinue:
| create a strongly typed Collection.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// It accomplishes this by implementing IteratorAggregate which provides
|
LJCComments.SetComment isContinue:
| It accomplishes this by implementing IteratorAggregate which provides
|
LJCComments.SetComment line:
|/// "foreach" functionality and Countable which provides "count" functionality.
|
LJCComments.SetComment isContinue:
| "foreach" functionality and Countable which provides "count" functionality.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// A strongly typed collection class would extend (inherit) from this base
|
LJCComments.SetComment isContinue:
| A strongly typed collection class would extend (inherit) from this base
|
LJCComments.SetComment line:
|/// class  and add an AddObject() method that would require the strongly typed
|
LJCComments.SetComment isContinue:
| class  and add an AddObject() method that would require the strongly typed
|
LJCComments.SetComment line:
|/// object collection element. This is what makes the collection strongly
|
LJCComments.SetComment isContinue:
| object collection element. This is what makes the collection strongly
|
LJCComments.SetComment line:
|/// typed.
|
LJCComments.SetComment isContinue:
| typed.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The strongly typed collection class would also provide a Get() method
|
LJCComments.SetComment isContinue:
| The strongly typed collection class would also provide a Get() method
|
LJCComments.SetComment line:
|/// that could retrieve the internal array element by key.
|
LJCComments.SetComment isContinue:
| that could retrieve the internal array element by key.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// For an example of how this works, see class: LJCDBAccessLib-LJCDbColumns.
|
LJCComments.SetComment isContinue:
| For an example of how this works, see class: LJCDBAccessLib-LJCDbColumns.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCCollectionBase|
LJCComments.SetComment line:
|		/// <include path='items/AddItem/*' file='Doc/LJCCollectionBase.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Adds an object and key value.</summary>|
LJCComments.SetComment comment:
|Adds an object and key value.|
LJCComments.SetComment line:
|///     <param name="$item">The object to be added to the collection.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The added item.</returns>|
LJCComments.SetComment comment:
|The added item.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCollectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCollectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// Add to class that extends LJCCollectionBase|
LJCComments.SetComment isContinue:
|// Add to class that extends LJCCollectionBase|
LJCComments.SetComment line:
|///// Adds an object and key value.|
LJCComments.SetComment isContinue:
|// Adds an object and key value.|
LJCComments.SetComment line:
|///public function AddObject(ObjectItem $item, $key = null)|
LJCComments.SetComment isContinue:
|public function AddObject(ObjectItem $item, $key = null)|
LJCComments.SetComment line:
|///{|
LJCComments.SetComment isContinue:
|{|
LJCComments.SetComment line:
|///  if (null == $key)|
LJCComments.SetComment isContinue:
|  if (null == $key)|
LJCComments.SetComment line:
|///  {|
LJCComments.SetComment isContinue:
|  {|
LJCComments.SetComment line:
|///    $key = $item->Name;|
LJCComments.SetComment isContinue:
|    $key = $item->Name;|
LJCComments.SetComment line:
|///  }|
LJCComments.SetComment isContinue:
|  }|
LJCComments.SetComment line:
|///  $retValue = $this->&lt;b&gt;AddItem&lt;/b&gt;($item, $key);|
LJCComments.SetComment isContinue:
|  $retValue = $this->&lt;b&gt;AddItem&lt;/b&gt;($item, $key);|
LJCComments.SetComment line:
|///  return $retValue;|
LJCComments.SetComment isContinue:
|  return $retValue;|
LJCComments.SetComment line:
|///}|
LJCComments.SetComment isContinue:
|}|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|AddItem|
LJCComments.SetComment line:
|		/// <include path='items/GetItem/*' file='Doc/LJCCollectionBase.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the item by Key value.</summary>|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The object with the matching key value.</returns>|
LJCComments.SetComment comment:
|The object with the matching key value.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCollectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCollectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// Add to class that extends LJCCollectionBase|
LJCComments.SetComment isContinue:
|// Add to class that extends LJCCollectionBase|
LJCComments.SetComment line:
|///// Get the item by Key value.|
LJCComments.SetComment isContinue:
|// Get the item by Key value.|
LJCComments.SetComment line:
|///public function Get($key)|
LJCComments.SetComment isContinue:
|public function Get($key)|
LJCComments.SetComment line:
|///{|
LJCComments.SetComment isContinue:
|{|
LJCComments.SetComment line:
|///  $retValue = $this->&lt;b&gt;GetItem&lt;/b&gt;($key, $throwError);|
LJCComments.SetComment isContinue:
|  $retValue = $this->&lt;b&gt;GetItem&lt;/b&gt;($key, $throwError);|
LJCComments.SetComment line:
|///  return $retValue;|
LJCComments.SetComment isContinue:
|  return $retValue;|
LJCComments.SetComment line:
|///}|
LJCComments.SetComment isContinue:
|}|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetItem|
LJCComments.SetComment line:
|		/// <summary>Gets an indexed array of keys.</summary>
|
LJCComments.SetComment comment:
|Gets an indexed array of keys.|
LJCComments.SetComment line:
|		/// <returns>The indexed keys array.</returns>
|
LJCComments.SetComment comment:
|The indexed keys array.|
FunctionName:
|GetKeys|
LJCComments.SetComment line:
|		/// <summary>Gets an indexed array of objects.</summary>
|
LJCComments.SetComment comment:
|Gets an indexed array of objects.|
LJCComments.SetComment line:
|		/// <returns>The indexed values array.</returns>
|
LJCComments.SetComment comment:
|The indexed values array.|
FunctionName:
|GetValues|
LJCComments.SetComment line:
|		/// <include path='items/HasKey/*' file='Doc/LJCCollectionBase.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Indicates if a key already exists.</summary>|
LJCComments.SetComment comment:
|Indicates if a key already exists.|
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>True if the key already exists, otherwise false.</returns>|
LJCComments.SetComment comment:
|True if the key already exists, otherwise false.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCollectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCollectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $collection extends LJCCollectionBase|
LJCComments.SetComment isContinue:
|// $collection extends LJCCollectionBase|
LJCComments.SetComment line:
|///$key = "KeyName";|
LJCComments.SetComment isContinue:
|$key = "KeyName";|
LJCComments.SetComment line:
|///if ($collection->HasKey($key))|
LJCComments.SetComment isContinue:
|if ($collection->HasKey($key))|
LJCComments.SetComment line:
|///{|
LJCComments.SetComment isContinue:
|{|
LJCComments.SetComment line:
|///  throw new Exception("Key: {$key} already in use.");|
LJCComments.SetComment isContinue:
|  throw new Exception("Key: {$key} already in use.");|
LJCComments.SetComment line:
|///}|
LJCComments.SetComment isContinue:
|}|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|HasKey|
LJCComments.SetComment line:
|		/// <include path='items/Remove/*' file='Doc/LJCCollectionBase.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Remove the item by Key value.</summary>|
LJCComments.SetComment comment:
|Remove the item by Key value.|
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCollectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCollectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $collection extends LJCCollectionBase|
LJCComments.SetComment isContinue:
|// $collection extends LJCCollectionBase|
LJCComments.SetComment line:
|///$collection->Remove("KeyName");|
LJCComments.SetComment isContinue:
|$collection->Remove("KeyName");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Remove|
LJCComments.SetComment line:
|		/// <summary>Allows Count(object).</summary>
|
LJCComments.SetComment comment:
|Allows Count(object).|
LJCComments.SetComment line:
|		/// <returns>The element count.</returns>
|
LJCComments.SetComment comment:
|The element count.|
FunctionName:
|count|
LJCComments.SetComment line:
|		/// <summary>Allows foreach()</summary>
|
LJCComments.SetComment comment:
|Allows foreach()|
FunctionName:
|getIterator|
LJCComments.SetComment line:
|		/// <summary>The elements array.</summary>
|
LJCComments.SetComment comment:
|The elements array.|
PropertyName:
|$Item|
LJCComments.SetComment line:
|	/// <summary>The Common PHP Class Library</summary>
|
LJCComments.SetComment comment:
|The Common PHP Class Library|
LJCComments.SetComment line:
|	/// <summary>Contains common functions.</summary>
|
LJCComments.SetComment comment:
|Contains common functions.|
ClassName:
|LJCCommon|
LJCComments.SetComment line:
|		/// <include path='items/StrPos/*' file='Doc/LJCCommon.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Gets the first index for the search value.</summary>|
LJCComments.SetComment comment:
|Gets the first index for the search value.|
LJCComments.SetComment line:
|///     <param name="$text">The text to be searched.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$find">The search value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$start">The search start index.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$exact">Indicates if a case sensitive search is performed.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The integer index value.</returns>|
LJCComments.SetComment comment:
|The integer index value.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The integer -1 is returned if the search value is not found.
|
LJCComments.SetComment isContinue:
| The integer -1 is returned if the search value is not found.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// This alternative for PHP strpos() always returns an integer. It can be
|
LJCComments.SetComment isContinue:
| This alternative for PHP strpos() always returns an integer. It can be
|
LJCComments.SetComment line:
|/// simply tested for success $index &gt;= 0 or failure $index &lt; 0.
|
LJCComments.SetComment isContinue:
| simply tested for success $index &gt;= 0 or failure $index &lt; 0.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $index = 5|
LJCComments.SetComment isContinue:
|// $index = 5|
LJCComments.SetComment line:
|///$index = LJCCommon::StrPos("This here.", "Here");|
LJCComments.SetComment isContinue:
|$index = LJCCommon::StrPos("This here.", "Here");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $index = -1|
LJCComments.SetComment isContinue:
|// $index = -1|
LJCComments.SetComment line:
|///$index = LJCCommon::StrPos("This here.", "Here", exact: true);|
LJCComments.SetComment isContinue:
|$index = LJCCommon::StrPos("This here.", "Here", exact: true);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|StrPos|
LJCComments.SetComment line:
|		/// <include path='items/StrRPos/*' file='Doc/LJCCommon.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Gets the last index for the search value.</summary>|
LJCComments.SetComment comment:
|Gets the last index for the search value.|
LJCComments.SetComment line:
|///     <param name="$text">The text to be searched.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$find">The search value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$start">The search start index.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$exact">Indicates if a case sensitive search is performed.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The integer index value.</returns>|
LJCComments.SetComment comment:
|The integer index value.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The integer -1 is returned if the search value is not found. It can be
|
LJCComments.SetComment isContinue:
| The integer -1 is returned if the search value is not found. It can be
|
LJCComments.SetComment line:
|/// simply tested for success $index &gt;= 0 or failure $index &lt; 0.
|
LJCComments.SetComment isContinue:
| simply tested for success $index &gt;= 0 or failure $index &lt; 0.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// This alternative for PHP strpos() always returns an integer.
|
LJCComments.SetComment isContinue:
| This alternative for PHP strpos() always returns an integer.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $index = 13|
LJCComments.SetComment isContinue:
|// $index = 13|
LJCComments.SetComment line:
|///$index = LJCCommon::StrRPos("This here is here.", "Here");|
LJCComments.SetComment isContinue:
|$index = LJCCommon::StrRPos("This here is here.", "Here");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $index = -1|
LJCComments.SetComment isContinue:
|// $index = -1|
LJCComments.SetComment line:
|///$index = LJCCommon::StrRPos("This here is here.", "Here", exact: true);|
LJCComments.SetComment isContinue:
|$index = LJCCommon::StrRPos("This here is here.", "Here", exact: true);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|StrRPos|
LJCComments.SetComment line:
|		/// <summary>Returns a text value as boolean.</summary>
|
LJCComments.SetComment comment:
|Returns a text value as boolean.|
FunctionName:
|GetBool|
LJCComments.SetComment line:
|		/// <include path='items/GetDebugFileName/*' file='Doc/LJCCommon.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Gets the Debug file name.</summary>|
LJCComments.SetComment comment:
|Gets the Debug file name.|
LJCComments.SetComment line:
|///     <param name="$folder">The folder name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$fileName">The file name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Debug file spec.</returns>|
LJCComments.SetComment comment:
|The Debug file spec.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// This function takes a folder name and a file name. It makes sure the
|
LJCComments.SetComment isContinue:
| This function takes a folder name and a file name. It makes sure the
|
LJCComments.SetComment line:
|/// folder exists and returns the text "folder/fileName" with the extension
|
LJCComments.SetComment isContinue:
| folder exists and returns the text "folder/fileName" with the extension
|
LJCComments.SetComment line:
|/// "txt".
|
LJCComments.SetComment isContinue:
| "txt".
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|/// require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment isContinue:
| require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// // $debugFileSpec = "Debug\SourceFile.txt"|
LJCComments.SetComment isContinue:
| // $debugFileSpec = "Debug\SourceFile.txt"|
LJCComments.SetComment line:
|/// $debugFileSpec = LJCCommon::GetDebugFileName("Debug", "SourceFile.php");|
LJCComments.SetComment isContinue:
| $debugFileSpec = LJCCommon::GetDebugFileName("Debug", "SourceFile.php");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetDebugFileName|
LJCComments.SetComment line:
|		/// <include path='items/GetDelimitedString/*' file='Doc/LJCCommon.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Gets the string between the delimiters.</summary>|
LJCComments.SetComment comment:
|Gets the string between the delimiters.|
LJCComments.SetComment line:
|///     <param name="$text">The text to be parsed.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$beginDelimiter">The beginning delimiter.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$endDelimiter">The ending delimiter.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$lTrim">Indicates if the parsed value is to be left trimmed.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$rTrim">Indicates if the parsed value is to be right trimmed.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The parsed value.</returns>|
LJCComments.SetComment comment:
|The parsed value.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Returns null if the begin delimiter is not found.
|
LJCComments.SetComment isContinue:
| Returns null if the begin delimiter is not found.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// Includes to the end of the string if the end delimiter is null
|
LJCComments.SetComment isContinue:
| Includes to the end of the string if the end delimiter is null
|
LJCComments.SetComment line:
|/// or not found.
|
LJCComments.SetComment isContinue:
| or not found.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $text = "here"|
LJCComments.SetComment isContinue:
|// $text = "here"|
LJCComments.SetComment line:
|///$text = LJCCommon::GetDelimitedString("This | here |.", "|", "|");|
LJCComments.SetComment isContinue:
|$text = LJCCommon::GetDelimitedString("This | here |.", "|", "|");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetDelimitedString|
LJCComments.SetComment line:
|		/// <include path='items/GetFileName/*' file='Doc/LJCCommon.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Gets the FileName from the file spec.</summary>|
LJCComments.SetComment comment:
|Gets the FileName from the file spec.|
LJCComments.SetComment line:
|///     <param name="$fileSpec">The file specification.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The file name.</returns>|
LJCComments.SetComment comment:
|The file name.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Parses from the last "/" to the following ".".
|
LJCComments.SetComment isContinue:
| Parses from the last "/" to the following ".".
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// Includes to the end of the string if the "." is not found.
|
LJCComments.SetComment isContinue:
| Includes to the end of the string if the "." is not found.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $text = "File"|
LJCComments.SetComment isContinue:
|// $text = "File"|
LJCComments.SetComment line:
|///$text = LJCCommon::GetFileName("../Folder/File.txt");|
LJCComments.SetComment isContinue:
|$text = LJCCommon::GetFileName("../Folder/File.txt");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetFileName|
LJCComments.SetComment line:
|		/// <include path='items/GetFileSpecPath/*' file='Doc/LJCCommon.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Gets the Path from the file spec.</summary>|
LJCComments.SetComment comment:
|Gets the Path from the file spec.|
LJCComments.SetComment line:
|///     <param name="$fileSpec">The file specification.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The file path.</returns>|
LJCComments.SetComment comment:
|The file path.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Parses to the last "/".
|
LJCComments.SetComment isContinue:
| Parses to the last "/".
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $text = "../Folder"|
LJCComments.SetComment isContinue:
|// $text = "../Folder"|
LJCComments.SetComment line:
|///$text = LJCCommon::GetFileSpecPath("../Folder/File.txt");|
LJCComments.SetComment isContinue:
|$text = LJCCommon::GetFileSpecPath("../Folder/File.txt");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetFileSpecPath|
LJCComments.SetComment line:
|		/// <include path='items/GetIndexedDebugFileName/*' file='Doc/LJCCommon.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Gets the indexed Debug file name.</summary>|
LJCComments.SetComment comment:
|Gets the indexed Debug file name.|
LJCComments.SetComment line:
|///     <param name="$folder">The folder name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$fileName">The file name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The indexed Debug file spec.</returns>|
LJCComments.SetComment comment:
|The indexed Debug file spec.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// This function takes a folder name and a file name. It makes sure the
|
LJCComments.SetComment isContinue:
| This function takes a folder name and a file name. It makes sure the
|
LJCComments.SetComment line:
|/// folder exists and returns the text "folder/fileName$index" with the
|
LJCComments.SetComment isContinue:
| folder exists and returns the text "folder/fileName$index" with the
|
LJCComments.SetComment line:
|/// extension "txt".
|
LJCComments.SetComment isContinue:
| extension "txt".
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// The variable $index in the example file name indicates a unique index
|
LJCComments.SetComment isContinue:
| The variable $index in the example file name indicates a unique index
|
LJCComments.SetComment line:
|/// value that does not already exist on disk. It begins checking with an
|
LJCComments.SetComment isContinue:
| value that does not already exist on disk. It begins checking with an
|
LJCComments.SetComment line:
|/// index value of 1.
|
LJCComments.SetComment isContinue:
| index value of 1.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $debugFileSpec = "Debug\SourceFile1.txt"|
LJCComments.SetComment isContinue:
|// $debugFileSpec = "Debug\SourceFile1.txt"|
LJCComments.SetComment line:
|///$debugFileSpec = LJCCommon::GetIndexedDebugFileName("Debug"|
LJCComments.SetComment isContinue:
|$debugFileSpec = LJCCommon::GetIndexedDebugFileName("Debug"|
LJCComments.SetComment line:
|///  , "SourceFile.php");|
LJCComments.SetComment isContinue:
|  , "SourceFile.php");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetIndexedDebugFileName|
LJCComments.SetComment line:
|		/// <summary>Get string tokens.</summary>
|
LJCComments.SetComment comment:
|Get string tokens.|
LJCComments.SetComment line:
|		/// <param name="$text">The string value.</param>
|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|		/// <param name="$splitString">The split string value.</param>
|
LJCComments.SetComment comment:
||
FunctionName:
|GetTokens|
LJCComments.SetComment line:
|		/// <summary>Creates the specified folder if it does not already exist.</summary>
|
LJCComments.SetComment comment:
|Creates the specified folder if it does not already exist.|
LJCComments.SetComment line:
|		/// <param name="$folder">The folder name.</param>
|
LJCComments.SetComment comment:
||
FunctionName:
|MkDir|
LJCComments.SetComment line:
|		/// <include path='items/Scrub/*' file='Doc/LJCCommon.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Returns a scrubbed external value.</summary>|
LJCComments.SetComment comment:
|Returns a scrubbed external value.|
LJCComments.SetComment line:
|///     <param name="$text">The text to be scrubbed.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The scrubbed value.</returns>|
LJCComments.SetComment comment:
|The scrubbed value.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Trims the text, strips slashes and converts HTML characters to HTML
|
LJCComments.SetComment isContinue:
| Trims the text, strips slashes and converts HTML characters to HTML
|
LJCComments.SetComment line:
|/// entities.
|
LJCComments.SetComment isContinue:
| entities.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $text = "&amp;amp;lt;tag&amp;amp;gt;"|
LJCComments.SetComment isContinue:
|// $text = "&amp;amp;lt;tag&amp;amp;gt;"|
LJCComments.SetComment line:
|///$text = LJCCommon::Scrub(" &amp;lt;/tag&amp;gt; ");|
LJCComments.SetComment isContinue:
|$text = LJCCommon::Scrub(" &amp;lt;/tag&amp;gt; ");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Scrub|
LJCComments.SetComment line:
|		/// <include path='items/SetSessionValue/*' file='Doc/LJCCommon.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Assigns a session value and returns the value.</summary>|
LJCComments.SetComment comment:
|Assigns a session value and returns the value.|
LJCComments.SetComment line:
|///     <param name="$name">The session value name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$value">The session value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The session value.</returns>|
LJCComments.SetComment comment:
|The session value.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCCommonLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $dbServer = "localhost"|
LJCComments.SetComment isContinue:
|// $dbServer = "localhost"|
LJCComments.SetComment line:
|///$dbServer = LJCCommon::SetSessionValue("dbServer", "localhost");|
LJCComments.SetComment isContinue:
|$dbServer = LJCCommon::SetSessionValue("dbServer", "localhost");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|SetSessionValue|
LJCComments.SetComment line:
|	/// <summary>The PDO Data Manager Library</summary>
|
LJCComments.SetComment comment:
|The PDO Data Manager Library|
LJCComments.SetComment line:
|	/// <include path='items/LJCDataManager/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Provides Standard DB Table methods.</summary>|
LJCComments.SetComment comment:
|Provides Standard DB Table methods.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The DataManager class provides a higher level of abstraction on top of the
|
LJCComments.SetComment isContinue:
| The DataManager class provides a higher level of abstraction on top of the
|
LJCComments.SetComment line:
|/// DataAccess class.
|
LJCComments.SetComment isContinue:
| DataAccess class.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// It does not require the developer to create SQL statements. Instead the
|
LJCComments.SetComment isContinue:
| It does not require the developer to create SQL statements. Instead the
|
LJCComments.SetComment line:
|/// developer can use strongly typed DataObjects, KeyColumn definitions, Join
|
LJCComments.SetComment isContinue:
| developer can use strongly typed DataObjects, KeyColumn definitions, Join
|
LJCComments.SetComment line:
|/// definitions and Included PropertyNames arrays to interact with the
|
LJCComments.SetComment isContinue:
| definitions and Included PropertyNames arrays to interact with the
|
LJCComments.SetComment line:
|/// database.
|
LJCComments.SetComment isContinue:
| database.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The DataManager retrieves the Table SchemaColumn Definitions from the
|
LJCComments.SetComment isContinue:
| The DataManager retrieves the Table SchemaColumn Definitions from the
|
LJCComments.SetComment line:
|/// database. It uses these definitions to create the SQL statements and
|
LJCComments.SetComment isContinue:
| database. It uses these definitions to create the SQL statements and
|
LJCComments.SetComment line:
|/// modifies them based on KeyColumn definitions, Join definitions and
|
LJCComments.SetComment isContinue:
| modifies them based on KeyColumn definitions, Join definitions and
|
LJCComments.SetComment line:
|/// PropertyNames arrays.
|
LJCComments.SetComment isContinue:
| PropertyNames arrays.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// The retrieved data can be mapped into strongly typed DataObjects using the
|
LJCComments.SetComment isContinue:
| The retrieved data can be mapped into strongly typed DataObjects using the
|
LJCComments.SetComment line:
|/// methods CreateDataCollection() and CreateDataObject().
|
LJCComments.SetComment isContinue:
| methods CreateDataCollection() and CreateDataObject().
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCDataManager|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes a class instance with the provided values.</summary>|
LJCComments.SetComment comment:
|Initializes a class instance with the provided values.|
LJCComments.SetComment line:
|///     <param name="$connectionValues">The DB Connection values.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$tableName">The table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$database = "DatabaseName";|
LJCComments.SetComment isContinue:
|$database = "DatabaseName";|
LJCComments.SetComment line:
|///$userID = "UserID";|
LJCComments.SetComment isContinue:
|$userID = "UserID";|
LJCComments.SetComment line:
|///$password = "Password":|
LJCComments.SetComment isContinue:
|$password = "Password":|
LJCComments.SetComment line:
|///$connectionValues = new LJCConnectionValues("localhost", $database, $userID|
LJCComments.SetComment isContinue:
|$connectionValues = new LJCConnectionValues("localhost", $database, $userID|
LJCComments.SetComment line:
|///  , $password);|
LJCComments.SetComment isContinue:
|  , $password);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment isContinue:
|$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/Add/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Adds the record for the provided values.</summary>|
LJCComments.SetComment comment:
|Adds the record for the provided values.|
LJCComments.SetComment line:
|///     <param name="$dataColumns">The data columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The count of affected records.</returns>|
LJCComments.SetComment comment:
|The count of affected records.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The Add() method uses the values from the $dataColumns collection
|
LJCComments.SetComment isContinue:
| The Add() method uses the values from the $dataColumns collection
|
LJCComments.SetComment line:
|/// parameter to insert a record into the database.
|
LJCComments.SetComment isContinue:
| parameter to insert a record into the database.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment isContinue:
|$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dataColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$dataColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$dataColumns->Add("Name", value:"NameValue");|
LJCComments.SetComment isContinue:
|$dataColumns->Add("Name", value:"NameValue");|
LJCComments.SetComment line:
|///$affectedCount = $manager->Add($dataColumns);|
LJCComments.SetComment isContinue:
|$affectedCount = $manager->Add($dataColumns);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $manager->SQL =|
LJCComments.SetComment isContinue:
|// $manager->SQL =|
LJCComments.SetComment line:
|///// insert into TableName|
LJCComments.SetComment isContinue:
|// insert into TableName|
LJCComments.SetComment line:
|/////  (|
LJCComments.SetComment isContinue:
|//  (|
LJCComments.SetComment line:
|/////   Name|
LJCComments.SetComment isContinue:
|//   Name|
LJCComments.SetComment line:
|/////  )|
LJCComments.SetComment isContinue:
|//  )|
LJCComments.SetComment line:
|/////  values|
LJCComments.SetComment isContinue:
|//  values|
LJCComments.SetComment line:
|/////  (|
LJCComments.SetComment isContinue:
|//  (|
LJCComments.SetComment line:
|/////   Name = 'NameValue'|
LJCComments.SetComment isContinue:
|//   Name = 'NameValue'|
LJCComments.SetComment line:
|/////  )|
LJCComments.SetComment isContinue:
|//  )|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Add|
LJCComments.SetComment line:
|		/// <include path='items/Delete/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Deletes the records for the provided values.</summary>|
LJCComments.SetComment comment:
|Deletes the records for the provided values.|
LJCComments.SetComment line:
|///     <param name="$keyColumns">The where clause key columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The count of affected records.</returns>|
LJCComments.SetComment comment:
|The count of affected records.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The Delete() method deletes records in the database.
|
LJCComments.SetComment isContinue:
| The Delete() method deletes records in the database.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The $keyColumns collection parameter contains the data for the where
|
LJCComments.SetComment isContinue:
| The $keyColumns collection parameter contains the data for the where
|
LJCComments.SetComment line:
|/// clause.
|
LJCComments.SetComment isContinue:
| clause.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// The $keyColumns parameter is required and must have collection elements
|
LJCComments.SetComment isContinue:
| The $keyColumns parameter is required and must have collection elements
|
LJCComments.SetComment line:
|/// or the Delete will not be executed.
|
LJCComments.SetComment isContinue:
| or the Delete will not be executed.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment isContinue:
|$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$keyColumns = new DbColumns();|
LJCComments.SetComment isContinue:
|$keyColumns = new DbColumns();|
LJCComments.SetComment line:
|///$keyColumns->Add("ID", value:1);|
LJCComments.SetComment isContinue:
|$keyColumns->Add("ID", value:1);|
LJCComments.SetComment line:
|///$affectedCount = $manager->Delete($keyColumns);|
LJCComments.SetComment isContinue:
|$affectedCount = $manager->Delete($keyColumns);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $manager->SQL =|
LJCComments.SetComment isContinue:
|// $manager->SQL =|
LJCComments.SetComment line:
|///// delete from TableName|
LJCComments.SetComment isContinue:
|// delete from TableName|
LJCComments.SetComment line:
|///// where TableName.ID = 1;|
LJCComments.SetComment isContinue:
|// where TableName.ID = 1;|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Delete|
LJCComments.SetComment line:
|		/// <include path='items/Load/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Loads the records for the provided values.</summary>|
LJCComments.SetComment comment:
|Loads the records for the provided values.|
LJCComments.SetComment line:
|///     <param name="$keyColumns">The where clause key columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$propertyNames">The included column property names.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>An array of data records.</returns>|
LJCComments.SetComment comment:
|An array of data records.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Loads records from the database.
|
LJCComments.SetComment isContinue:
| Loads records from the database.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The $keyColumns collection parameter contains the data for the where
|
LJCComments.SetComment isContinue:
| The $keyColumns collection parameter contains the data for the where
|
LJCComments.SetComment line:
|/// clause.
|
LJCComments.SetComment isContinue:
| clause.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// The optional $propertyNames array parameter contains the names of the
|
LJCComments.SetComment isContinue:
| The optional $propertyNames array parameter contains the names of the
|
LJCComments.SetComment line:
|/// properties that will be retrieved. All columns are retrieved if it is
|
LJCComments.SetComment isContinue:
| properties that will be retrieved. All columns are retrieved if it is
|
LJCComments.SetComment line:
|/// null.
|
LJCComments.SetComment isContinue:
| null.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment isContinue:
|$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$propertyNames = [];|
LJCComments.SetComment isContinue:
|$propertyNames = [];|
LJCComments.SetComment line:
|///$propertyNames[] = "ID";|
LJCComments.SetComment isContinue:
|$propertyNames[] = "ID";|
LJCComments.SetComment line:
|///$propertyNames[] = "Name";|
LJCComments.SetComment isContinue:
|$propertyNames[] = "Name";|
LJCComments.SetComment line:
|///$affectedCount = $manager->Load(null, $propertyNames);|
LJCComments.SetComment isContinue:
|$affectedCount = $manager->Load(null, $propertyNames);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $manager->SQL =|
LJCComments.SetComment isContinue:
|// $manager->SQL =|
LJCComments.SetComment line:
|///// select|
LJCComments.SetComment isContinue:
|// select|
LJCComments.SetComment line:
|/////   TableName.ID,|
LJCComments.SetComment isContinue:
|//   TableName.ID,|
LJCComments.SetComment line:
|/////   TableName.Name|
LJCComments.SetComment isContinue:
|//   TableName.Name|
LJCComments.SetComment line:
|///// from TableName;|
LJCComments.SetComment isContinue:
|// from TableName;|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Load|
LJCComments.SetComment line:
|		/// <include path='items/Retrieve/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Retrieves the record for the provided values.</summary>|
LJCComments.SetComment comment:
|Retrieves the record for the provided values.|
LJCComments.SetComment line:
|///     <param name="$keyColumns">The where clause key columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$propertyNames">The included column property names.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>An array of record columns.</returns>|
LJCComments.SetComment comment:
|An array of record columns.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Retrieves a single record from the database.
|
LJCComments.SetComment isContinue:
| Retrieves a single record from the database.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The $keyColumns collection parameter contains the data for the where
|
LJCComments.SetComment isContinue:
| The $keyColumns collection parameter contains the data for the where
|
LJCComments.SetComment line:
|/// clause.
|
LJCComments.SetComment isContinue:
| clause.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// The optional $propertyNames array parameter contains the names of the
|
LJCComments.SetComment isContinue:
| The optional $propertyNames array parameter contains the names of the
|
LJCComments.SetComment line:
|/// properties that will be retrieved. All columns are retrieved if it is
|
LJCComments.SetComment isContinue:
| properties that will be retrieved. All columns are retrieved if it is
|
LJCComments.SetComment line:
|/// null.
|
LJCComments.SetComment isContinue:
| null.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment isContinue:
|$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$keyColumns = new DbColumns();|
LJCComments.SetComment isContinue:
|$keyColumns = new DbColumns();|
LJCComments.SetComment line:
|///$keyColumns->Add("ID", value:1);|
LJCComments.SetComment isContinue:
|$keyColumns->Add("ID", value:1);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$propertyNames = [];|
LJCComments.SetComment isContinue:
|$propertyNames = [];|
LJCComments.SetComment line:
|///$propertyNames[] = "ID";|
LJCComments.SetComment isContinue:
|$propertyNames[] = "ID";|
LJCComments.SetComment line:
|///$propertyNames[] = "Name";|
LJCComments.SetComment isContinue:
|$propertyNames[] = "Name";|
LJCComments.SetComment line:
|///$row = $manager->Retrieve($keyColumns, $propertyNames);|
LJCComments.SetComment isContinue:
|$row = $manager->Retrieve($keyColumns, $propertyNames);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $manager->SQL =|
LJCComments.SetComment isContinue:
|// $manager->SQL =|
LJCComments.SetComment line:
|///// select|
LJCComments.SetComment isContinue:
|// select|
LJCComments.SetComment line:
|/////   TableName.ID,|
LJCComments.SetComment isContinue:
|//   TableName.ID,|
LJCComments.SetComment line:
|/////   TableName.Name|
LJCComments.SetComment isContinue:
|//   TableName.Name|
LJCComments.SetComment line:
|///// from TableName|
LJCComments.SetComment isContinue:
|// from TableName|
LJCComments.SetComment line:
|///// where TableName.ID = 1;|
LJCComments.SetComment isContinue:
|// where TableName.ID = 1;|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Retrieve|
LJCComments.SetComment line:
|		/// <include path='items/Update/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Updates the records for the provided values.</summary>|
LJCComments.SetComment comment:
|Updates the records for the provided values.|
LJCComments.SetComment line:
|///     <param name="$keyColumns">The where clause key columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$dataColumns">The data columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The count of affected records.</returns>|
LJCComments.SetComment comment:
|The count of affected records.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The Update() method updates records in the database using the values
|
LJCComments.SetComment isContinue:
| The Update() method updates records in the database using the values
|
LJCComments.SetComment line:
|/// from the $dataColumns collection parameter.
|
LJCComments.SetComment isContinue:
| from the $dataColumns collection parameter.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The $keyColumns collection parameter contains the data for the where
|
LJCComments.SetComment isContinue:
| The $keyColumns collection parameter contains the data for the where
|
LJCComments.SetComment line:
|/// clause.
|
LJCComments.SetComment isContinue:
| clause.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// The $keyColumns parameter is required and must have collection elements
|
LJCComments.SetComment isContinue:
| The $keyColumns parameter is required and must have collection elements
|
LJCComments.SetComment line:
|/// or the Update will not be executed.
|
LJCComments.SetComment isContinue:
| or the Update will not be executed.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment isContinue:
|$manager = new LJCDataManager($connectionValues, $tableName);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$keyColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$keyColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$keyColumns->Add("ID", value:1);|
LJCComments.SetComment isContinue:
|$keyColumns->Add("ID", value:1);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dataColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$dataColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$dataColumns->Add("Name", value:"NameValue");|
LJCComments.SetComment isContinue:
|$dataColumns->Add("Name", value:"NameValue");|
LJCComments.SetComment line:
|///$affectedCount = $manager->Update($keyColumns, $dataColumns);|
LJCComments.SetComment isContinue:
|$affectedCount = $manager->Update($keyColumns, $dataColumns);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $manager->SQL =|
LJCComments.SetComment isContinue:
|// $manager->SQL =|
LJCComments.SetComment line:
|///// update TableName|
LJCComments.SetComment isContinue:
|// update TableName|
LJCComments.SetComment line:
|/////   set Name = 'NameValue'|
LJCComments.SetComment isContinue:
|//   set Name = 'NameValue'|
LJCComments.SetComment line:
|///// where TableName.ID = 1;|
LJCComments.SetComment isContinue:
|// where TableName.ID = 1;|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Update|
LJCComments.SetComment line:
|		/// <include path='items/SQLExecute/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Executes an Add, Delete or Update SQL statement.</summary>|
LJCComments.SetComment comment:
|Executes an Add, Delete or Update SQL statement.|
LJCComments.SetComment line:
|///     <param name="$sql">The SQL statement.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The count of affected records.</returns>|
LJCComments.SetComment comment:
|The count of affected records.|
LJCComments.SetComment comment:
||
FunctionName:
|SQLExecute|
LJCComments.SetComment line:
|		/// <include path='items/SQLLoad/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Executes a Select SQL statement.</summary>|
LJCComments.SetComment comment:
|Executes a Select SQL statement.|
LJCComments.SetComment line:
|///     <param name="$sql">The SQL statement.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>An array of data records.</returns>|
LJCComments.SetComment comment:
|An array of data records.|
LJCComments.SetComment comment:
||
FunctionName:
|SQLLoad|
LJCComments.SetComment line:
|		/// <include path='items/SQLRetrieve/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Executes a Select SQL statement.</summary>|
LJCComments.SetComment comment:
|Executes a Select SQL statement.|
LJCComments.SetComment line:
|///     <param name="$sql">The SQL statement.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>An array of record columns.</returns>|
LJCComments.SetComment comment:
|An array of record columns.|
LJCComments.SetComment comment:
||
FunctionName:
|SQLRetrieve|
LJCComments.SetComment line:
|		/// <include path='items/CreateDataCollection/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Creates an array of typed Data Objects from a DB rows array.
|
LJCComments.SetComment isContinue:
| Creates an array of typed Data Objects from a DB rows array.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|///     <param name="$collection">A Collection Object to use as a template.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$dataObject">A Data Object to use as a template.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$rows">An array of data records.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>An array of Data object records or null if there are no rows.</returns>|
LJCComments.SetComment comment:
|An array of Data object records or null if there are no rows.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// This method provides Object to Relational Mapping (ORM) as it maps an
|
LJCComments.SetComment isContinue:
| This method provides Object to Relational Mapping (ORM) as it maps an
|
LJCComments.SetComment line:
|/// array  of data records into a collection of strongly  typed data objects.
|
LJCComments.SetComment isContinue:
| array  of data records into a collection of strongly  typed data objects.
|
LJCComments.SetComment line:
|/// It calls the CreateDataObject() method for each data record and adds the
|
LJCComments.SetComment isContinue:
| It calls the CreateDataObject() method for each data record and adds the
|
LJCComments.SetComment line:
|/// resulting typed object to the strongly typed collection.
|
LJCComments.SetComment isContinue:
| resulting typed object to the strongly typed collection.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The collection must be an object that extends (inherits from)
|
LJCComments.SetComment isContinue:
| The collection must be an object that extends (inherits from)
|
LJCComments.SetComment line:
|/// LJCCollectionLib.php class LJCCollectionBase and provides an AddObject
|
LJCComments.SetComment isContinue:
| LJCCollectionLib.php class LJCCollectionBase and provides an AddObject
|
LJCComments.SetComment line:
|/// method with the signature  AddObject(DataObject $item, $key = null); Where
|
LJCComments.SetComment isContinue:
| method with the signature  AddObject(DataObject $item, $key = null); Where
|
LJCComments.SetComment line:
|/// DataObject is a strongly typed Data Object. See LJCDbAccessLib.php class
|
LJCComments.SetComment isContinue:
| DataObject is a strongly typed Data Object. See LJCDbAccessLib.php class
|
LJCComments.SetComment line:
|/// LJCDbColumns and LJCDbColumn for examples.
|
LJCComments.SetComment isContinue:
| LJCDbColumns and LJCDbColumn for examples.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The AddObject() method should supply a default key value or the method can
|
LJCComments.SetComment isContinue:
| The AddObject() method should supply a default key value or the method can
|
LJCComments.SetComment line:
|/// be changed to require the programmer to enter it by removing the "= null"
|
LJCComments.SetComment isContinue:
| be changed to require the programmer to enter it by removing the "= null"
|
LJCComments.SetComment line:
|/// from the method signature.
|
LJCComments.SetComment isContinue:
| from the method signature.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// The DataObject must supply a Clone() method.
|
LJCComments.SetComment isContinue:
| The DataObject must supply a Clone() method.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$manager = new LJCDataManager($connectionValues, "TableName");|
LJCComments.SetComment isContinue:
|$manager = new LJCDataManager($connectionValues, "TableName");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///class Person|
LJCComments.SetComment isContinue:
|class Person|
LJCComments.SetComment line:
|///{|
LJCComments.SetComment isContinue:
|{|
LJCComments.SetComment line:
|///  public int $ID;|
LJCComments.SetComment isContinue:
|  public int $ID;|
LJCComments.SetComment line:
|///  public string $Name;|
LJCComments.SetComment isContinue:
|  public string $Name;|
LJCComments.SetComment line:
|///}|
LJCComments.SetComment isContinue:
|}|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$rows = $manager->Load(null);|
LJCComments.SetComment isContinue:
|$rows = $manager->Load(null);|
LJCComments.SetComment line:
|///$persons = $manager->CreateDataCollection(new Persons(), new Person()|
LJCComments.SetComment isContinue:
|$persons = $manager->CreateDataCollection(new Persons(), new Person()|
LJCComments.SetComment line:
|///  , $rows);|
LJCComments.SetComment isContinue:
|  , $rows);|
LJCComments.SetComment line:
|///foreach ($persons as $person)|
LJCComments.SetComment isContinue:
|foreach ($persons as $person)|
LJCComments.SetComment line:
|///{|
LJCComments.SetComment isContinue:
|{|
LJCComments.SetComment line:
|///  echo $person->ID;|
LJCComments.SetComment isContinue:
|  echo $person->ID;|
LJCComments.SetComment line:
|///  echo $person->Name;|
LJCComments.SetComment isContinue:
|  echo $person->Name;|
LJCComments.SetComment line:
|///}|
LJCComments.SetComment isContinue:
|}|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|CreateDataCollection|
LJCComments.SetComment line:
|		/// <include path='items/CreateDataObject/*' file='Doc/LJCDataManager.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Populates a typed Data Object with values from a DB row.</summary>|
LJCComments.SetComment comment:
|Populates a typed Data Object with values from a DB row.|
LJCComments.SetComment line:
|///     <param name="$dataObject">A Data Object to use as a template.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$row">An array of data columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>A data object record.</returns>|
LJCComments.SetComment comment:
|A data object record.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// This method provides Object to Relational Mapping (ORM) as it maps the
|
LJCComments.SetComment isContinue:
| This method provides Object to Relational Mapping (ORM) as it maps the
|
LJCComments.SetComment line:
|/// data columns to properties in the DataObject and copies the matching
|
LJCComments.SetComment isContinue:
| data columns to properties in the DataObject and copies the matching
|
LJCComments.SetComment line:
|/// values.
|
LJCComments.SetComment isContinue:
| values.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// The data column keys which are the result set column names must match
|
LJCComments.SetComment isContinue:
| The data column keys which are the result set column names must match
|
LJCComments.SetComment line:
|/// property names in the DataObject.
|
LJCComments.SetComment isContinue:
| property names in the DataObject.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$manager = new LJCDataManager($connectionValues, "TableName");|
LJCComments.SetComment isContinue:
|$manager = new LJCDataManager($connectionValues, "TableName");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///class Person|
LJCComments.SetComment isContinue:
|class Person|
LJCComments.SetComment line:
|///{|
LJCComments.SetComment isContinue:
|{|
LJCComments.SetComment line:
|///  public int $ID;|
LJCComments.SetComment isContinue:
|  public int $ID;|
LJCComments.SetComment line:
|///  public ?string $Name;|
LJCComments.SetComment isContinue:
|  public ?string $Name;|
LJCComments.SetComment line:
|///}|
LJCComments.SetComment isContinue:
|}|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$keyColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$keyColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$keyColumns->Add("ID", value: 1);|
LJCComments.SetComment isContinue:
|$keyColumns->Add("ID", value: 1);|
LJCComments.SetComment line:
|///$row = $manager->Retrieve($keyColumns);|
LJCComments.SetComment isContinue:
|$row = $manager->Retrieve($keyColumns);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dataObject = new Person();|
LJCComments.SetComment isContinue:
|$dataObject = new Person();|
LJCComments.SetComment line:
|///$person = $manager->CreateDataObject($dataObject, $row);|
LJCComments.SetComment isContinue:
|$person = $manager->CreateDataObject($dataObject, $row);|
LJCComments.SetComment line:
|///echo $person->ID;|
LJCComments.SetComment isContinue:
|echo $person->ID;|
LJCComments.SetComment line:
|///echo $person->Name;|
LJCComments.SetComment isContinue:
|echo $person->Name;|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|CreateDataObject|
LJCComments.SetComment line:
|		/// <summary>The DbAccess object.</summary>
|
LJCComments.SetComment comment:
|The DbAccess object.|
PropertyName:
|$DbAccess|
LJCComments.SetComment line:
|		/// <summary>The Join definitions.</summary>
|
LJCComments.SetComment comment:
|The Join definitions.|
PropertyName:
|$Joins|
LJCComments.SetComment line:
|		/// <summary>The OrderBy names.</summary>
|
LJCComments.SetComment comment:
|The OrderBy names.|
PropertyName:
|$OrderByNames|
LJCComments.SetComment line:
|		/// <summary>The column definitions.</summary>
|
LJCComments.SetComment comment:
|The column definitions.|
PropertyName:
|$SchemaColumns|
LJCComments.SetComment line:
|		/// <summary>The last SQL statement.</summary>
|
LJCComments.SetComment comment:
|The last SQL statement.|
PropertyName:
|$SQL|
LJCComments.SetComment line:
|		/// <summary>The table name.</summary>
|
LJCComments.SetComment comment:
|The table name.|
PropertyName:
|$TableName|
LJCComments.SetComment line:
|	/// <include path='items/LJCSQLBuilder/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Provides static functions for creating SQL statements.
|
LJCComments.SetComment isContinue:
| Provides static functions for creating SQL statements.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCSQLBuilder|
LJCComments.SetComment line:
|		/// <include path='items/CreateDelete/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates a Delete SQL statement.</summary>|
LJCComments.SetComment comment:
|Creates a Delete SQL statement.|
LJCComments.SetComment line:
|///     <param name="$tableName">The table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$keyColumns">The where clause key columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Update SQL statement.</returns>|
LJCComments.SetComment comment:
|The Update SQL statement.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$keyColumns = new DbColumns();|
LJCComments.SetComment isContinue:
|$keyColumns = new DbColumns();|
LJCComments.SetComment line:
|///$keyColumns->Add("ID", value:1);|
LJCComments.SetComment isContinue:
|$keyColumns->Add("ID", value:1);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$sql = LJCSQLBuilder::CreateDelete("TableName", $keyColumns);|
LJCComments.SetComment isContinue:
|$sql = LJCSQLBuilder::CreateDelete("TableName", $keyColumns);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $sql =|
LJCComments.SetComment isContinue:
|// $sql =|
LJCComments.SetComment line:
|///// delete from TableName|
LJCComments.SetComment isContinue:
|// delete from TableName|
LJCComments.SetComment line:
|///// where TableName.ID = 1|
LJCComments.SetComment isContinue:
|// where TableName.ID = 1|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|CreateDelete|
LJCComments.SetComment line:
|		/// <include path='items/CreateInsert/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates an Insert SQL statement.</summary>|
LJCComments.SetComment comment:
|Creates an Insert SQL statement.|
LJCComments.SetComment line:
|///     <param name="$tableName">The table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$dataColumns">The Data columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Update SQL statement.</returns>|
LJCComments.SetComment comment:
|The Update SQL statement.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dataColumns = new DbColumns();|
LJCComments.SetComment isContinue:
|$dataColumns = new DbColumns();|
LJCComments.SetComment line:
|///$dataColumns->Add("FirstName", value: "First");|
LJCComments.SetComment isContinue:
|$dataColumns->Add("FirstName", value: "First");|
LJCComments.SetComment line:
|///$dataColumns->Add("LastName", value: "Last");|
LJCComments.SetComment isContinue:
|$dataColumns->Add("LastName", value: "Last");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$sql = LJCSQLBuilder::CreateInsert("TableName", $dataColumns);|
LJCComments.SetComment isContinue:
|$sql = LJCSQLBuilder::CreateInsert("TableName", $dataColumns);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $sql =|
LJCComments.SetComment isContinue:
|// $sql =|
LJCComments.SetComment line:
|///// update TableName set|
LJCComments.SetComment isContinue:
|// update TableName set|
LJCComments.SetComment line:
|/////   FirstName = 'First',|
LJCComments.SetComment isContinue:
|//   FirstName = 'First',|
LJCComments.SetComment line:
|/////   LastName = 'Last'|
LJCComments.SetComment isContinue:
|//   LastName = 'Last'|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|CreateInsert|
LJCComments.SetComment line:
|		/// <include path='items/CreateSelect/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates a Select SQL statement.</summary>|
LJCComments.SetComment comment:
|Creates a Select SQL statement.|
LJCComments.SetComment line:
|///     <param name="$tableName">The table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$schemaColumns">The table schema definition columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$keyColumns">The where clause key columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$propertyNames">The included column property names.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$joins">The Collection of Join objects.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Select SQL statement.</returns>|
LJCComments.SetComment comment:
|The Select SQL statement.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$schemaColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$schemaColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$schemaColumns->Add("ID", null, "int");|
LJCComments.SetComment isContinue:
|$schemaColumns->Add("ID", null, "int");|
LJCComments.SetComment line:
|///$schemaColumns->Add("Name");|
LJCComments.SetComment isContinue:
|$schemaColumns->Add("Name");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$keyColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$keyColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$keyColumns->Add("ID", value:1);|
LJCComments.SetComment isContinue:
|$keyColumns->Add("ID", value:1);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///array $propertyNames = [];|
LJCComments.SetComment isContinue:
|array $propertyNames = [];|
LJCComments.SetComment line:
|///$propertyNames[] = "ID";|
LJCComments.SetComment isContinue:
|$propertyNames[] = "ID";|
LJCComments.SetComment line:
|///$propertyNames[] = "Name";|
LJCComments.SetComment isContinue:
|$propertyNames[] = "Name";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$joins = new LJCJoins();|
LJCComments.SetComment isContinue:
|$joins = new LJCJoins();|
LJCComments.SetComment line:
|///$join = $joins->Add("JoinTableName");|
LJCComments.SetComment isContinue:
|$join = $joins->Add("JoinTableName");|
LJCComments.SetComment line:
|///$join->JoinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment isContinue:
|$join->JoinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment line:
|///$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");|
LJCComments.SetComment isContinue:
|$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$sql = LJCSQLBuilder::CreateSelect("TableName", $schemaColumns|
LJCComments.SetComment isContinue:
|$sql = LJCSQLBuilder::CreateSelect("TableName", $schemaColumns|
LJCComments.SetComment line:
|///  , $keyColumns, $propertyNames, $joins);|
LJCComments.SetComment isContinue:
|  , $keyColumns, $propertyNames, $joins);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $sql =|
LJCComments.SetComment isContinue:
|// $sql =|
LJCComments.SetComment line:
|///// select|
LJCComments.SetComment isContinue:
|// select|
LJCComments.SetComment line:
|/////   TableName.ID,|
LJCComments.SetComment isContinue:
|//   TableName.ID,|
LJCComments.SetComment line:
|/////   TableName.Name|
LJCComments.SetComment isContinue:
|//   TableName.Name|
LJCComments.SetComment line:
|/////   JoinTableName.JoinColumnName as ResultName|
LJCComments.SetComment isContinue:
|//   JoinTableName.JoinColumnName as ResultName|
LJCComments.SetComment line:
|///// from TableName;|
LJCComments.SetComment isContinue:
|// from TableName;|
LJCComments.SetComment line:
|///// left join JoinTableName|
LJCComments.SetComment isContinue:
|// left join JoinTableName|
LJCComments.SetComment line:
|/////   on ((TableName.FromColumnName = JoinTableName.ToColumnName))|
LJCComments.SetComment isContinue:
|//   on ((TableName.FromColumnName = JoinTableName.ToColumnName))|
LJCComments.SetComment line:
|///// where TableName.ID = 1|
LJCComments.SetComment isContinue:
|// where TableName.ID = 1|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|CreateSelect|
LJCComments.SetComment line:
|		/// <include path='items/CreateUpdate/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates an Update SQL statement.</summary>|
LJCComments.SetComment comment:
|Creates an Update SQL statement.|
LJCComments.SetComment line:
|///     <param name="$tableName">The table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$keyColumns">The where clause key columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$dataColumns">The Data columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Update SQL statement.</returns>|
LJCComments.SetComment comment:
|The Update SQL statement.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$keyColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$keyColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$keyColumns->Add("ID", value:1);|
LJCComments.SetComment isContinue:
|$keyColumns->Add("ID", value:1);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dataColumns = new DbColumns();|
LJCComments.SetComment isContinue:
|$dataColumns = new DbColumns();|
LJCComments.SetComment line:
|///$dataColumns->Add("FirstName", value: "First");|
LJCComments.SetComment isContinue:
|$dataColumns->Add("FirstName", value: "First");|
LJCComments.SetComment line:
|///$dataColumns->Add("LastName", value: "Last");|
LJCComments.SetComment isContinue:
|$dataColumns->Add("LastName", value: "Last");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$sql = LJCSQLBuilder::CreateUpdate("TableName", $keyColumns|
LJCComments.SetComment isContinue:
|$sql = LJCSQLBuilder::CreateUpdate("TableName", $keyColumns|
LJCComments.SetComment line:
|///  , $dataColumns);|
LJCComments.SetComment isContinue:
|  , $dataColumns);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $sql =|
LJCComments.SetComment isContinue:
|// $sql =|
LJCComments.SetComment line:
|///// update TableName set|
LJCComments.SetComment isContinue:
|// update TableName set|
LJCComments.SetComment line:
|/////   FirstName = 'First',|
LJCComments.SetComment isContinue:
|//   FirstName = 'First',|
LJCComments.SetComment line:
|/////   LastName = 'Last'|
LJCComments.SetComment isContinue:
|//   LastName = 'Last'|
LJCComments.SetComment line:
|///// where TableName.ID = 1|
LJCComments.SetComment isContinue:
|// where TableName.ID = 1|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|CreateUpdate|
LJCComments.SetComment line:
|		/// <include path='items/GetJoinOns/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the JoinOn statements.</summary>|
LJCComments.SetComment comment:
|Get the JoinOn statements.|
LJCComments.SetComment line:
|///     <param name="$tableName">The request table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$join">The Join object.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$recursive">Indicates if it is a recursive call.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The JoinOn statements.</returns>|
LJCComments.SetComment comment:
|The JoinOn statements.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$joins = new LJCJoins();|
LJCComments.SetComment isContinue:
|$joins = new LJCJoins();|
LJCComments.SetComment line:
|///$join = $joins->Add("JoinTableName");|
LJCComments.SetComment isContinue:
|$join = $joins->Add("JoinTableName");|
LJCComments.SetComment line:
|///$join->JoinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment isContinue:
|$join->JoinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetJoinOns|
LJCComments.SetComment line:
|		/// <summary>Creates the join statement.</summary>
|
LJCComments.SetComment comment:
|Creates the join statement.|
LJCComments.SetComment line:
|		/// <include path='items/GetJoinStatement/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the join statement.</summary>|
LJCComments.SetComment comment:
|Creates the join statement.|
LJCComments.SetComment line:
|///     <param name="$tableName">The request table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$joins">The Collection of Join objects.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Join clause.</returns>|
LJCComments.SetComment comment:
|The Join clause.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$joins = new LJCJoins();|
LJCComments.SetComment isContinue:
|$joins = new LJCJoins();|
LJCComments.SetComment line:
|///$join = $joins->Add("JoinTableName");|
LJCComments.SetComment isContinue:
|$join = $joins->Add("JoinTableName");|
LJCComments.SetComment line:
|///$join->JoinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment isContinue:
|$join->JoinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment line:
|///$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");|
LJCComments.SetComment isContinue:
|$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$schemaColumns = $dataManager->SchemaColumns;|
LJCComments.SetComment isContinue:
|$schemaColumns = $dataManager->SchemaColumns;|
LJCComments.SetComment line:
|///$sql = "select\r\n";|
LJCComments.SetComment isContinue:
|$sql = "select\r\n";|
LJCComments.SetComment line:
|///$sql .= LJCSQLBuilder::SQLColumns($tableName, $schemaColumns|
LJCComments.SetComment isContinue:
|$sql .= LJCSQLBuilder::SQLColumns($tableName, $schemaColumns|
LJCComments.SetComment line:
|///  , joins: $joins);|
LJCComments.SetComment isContinue:
|  , joins: $joins);|
LJCComments.SetComment line:
|///$sql .= "from $tableName \r\n";|
LJCComments.SetComment isContinue:
|$sql .= "from $tableName \r\n";|
LJCComments.SetComment line:
|///$sql .= LJCSQLBuilder::GetJoinStatement($tableName, $joins);|
LJCComments.SetComment isContinue:
|$sql .= LJCSQLBuilder::GetJoinStatement($tableName, $joins);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetJoinStatement|
LJCComments.SetComment line:
|		/// <include path='items/GetJoinTableString/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the full join table string.</summary>|
LJCComments.SetComment comment:
|Get the full join table string.|
LJCComments.SetComment line:
|///     <param name="$join">The Join object.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Join table string.</returns>|
LJCComments.SetComment comment:
|The Join table string.|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|		/// <include path='items/GetOrderBy/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates an OrderBy clause.</summary>|
LJCComments.SetComment comment:
|Creates an OrderBy clause.|
LJCComments.SetComment line:
|///     <param name="$orderByNames">The OrderBy names array.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The OrderBy clause.</returns>|
LJCComments.SetComment comment:
|The OrderBy clause.|
LJCComments.SetComment comment:
||
FunctionName:
|GetOrderBy|
LJCComments.SetComment line:
|		/// <include path='items/SQLColumns/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the columns for a Select SQL statement.</summary>|
LJCComments.SetComment comment:
|Creates the columns for a Select SQL statement.|
LJCComments.SetComment line:
|///     <param name="$tableName">The request Table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$sqlColumns">The included columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$includeParens">Includes the statement parenthesis.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$joins">The Join definitions.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Select columns.</returns>|
LJCComments.SetComment comment:
|The Select columns.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$joins = new LJCJoins();|
LJCComments.SetComment isContinue:
|$joins = new LJCJoins();|
LJCComments.SetComment line:
|///$join = $joins->Add("JoinTableName");|
LJCComments.SetComment isContinue:
|$join = $joins->Add("JoinTableName");|
LJCComments.SetComment line:
|///$join->JoinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment isContinue:
|$join->JoinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment line:
|///$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");|
LJCComments.SetComment isContinue:
|$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$dbColumns = new DbColumns();|
LJCComments.SetComment isContinue:
|$dbColumns = new DbColumns();|
LJCComments.SetComment line:
|///$dbColumns->Add("ID", dataTypeName: "int");|
LJCComments.SetComment isContinue:
|$dbColumns->Add("ID", dataTypeName: "int");|
LJCComments.SetComment line:
|///$dbColumns->Add("Name");|
LJCComments.SetComment isContinue:
|$dbColumns->Add("Name");|
LJCComments.SetComment line:
|///$columns = LJCSQLBuilder::SQLColumns($tableName, $dbColumns, $joins);|
LJCComments.SetComment isContinue:
|$columns = LJCSQLBuilder::SQLColumns($tableName, $dbColumns, $joins);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $columns =|
LJCComments.SetComment isContinue:
|// $columns =|
LJCComments.SetComment line:
|/////  TableName.ID,|
LJCComments.SetComment isContinue:
|//  TableName.ID,|
LJCComments.SetComment line:
|/////  TableName.Name,|
LJCComments.SetComment isContinue:
|//  TableName.Name,|
LJCComments.SetComment line:
|/////  JoinTableName.JoinColumnName as ResultName|
LJCComments.SetComment isContinue:
|//  JoinTableName.JoinColumnName as ResultName|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|SQLColumns|
LJCComments.SetComment line:
|		/// <include path='items/SQLJoinColumns/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the Join columns for a Select SQL statement.</summary>|
LJCComments.SetComment comment:
|Creates the Join columns for a Select SQL statement.|
LJCComments.SetComment line:
|///     <param name="$joins">The Join definitions.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Join columns.</returns>|
LJCComments.SetComment comment:
|The Join columns.|
LJCComments.SetComment comment:
||
FunctionName:
|SQLJoinColumns|
LJCComments.SetComment line:
|		/// <include path='items/SQLValueColumns/*' file='Doc/LJCSQLBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the value columns for an Update SQL statement.</summary>|
LJCComments.SetComment comment:
|Creates the value columns for an Update SQL statement.|
LJCComments.SetComment line:
|///     <param name="$dataColumns">The Data columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$isUpdate">Indicates if the values are for an Update.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$includeParens">Includes the statement parenthesis.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Add and Update value columns.</returns>|
LJCComments.SetComment comment:
|The Add and Update value columns.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDataManagerLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dbColumns = new DbColumns();|
LJCComments.SetComment isContinue:
|$dbColumns = new DbColumns();|
LJCComments.SetComment line:
|///$dbColumns->Add("FirstName", value: "First");|
LJCComments.SetComment isContinue:
|$dbColumns->Add("FirstName", value: "First");|
LJCComments.SetComment line:
|///$dbColumns->Add("LastName", value: "Last");|
LJCComments.SetComment isContinue:
|$dbColumns->Add("LastName", value: "Last");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// For an Update "set" statement.|
LJCComments.SetComment isContinue:
|// For an Update "set" statement.|
LJCComments.SetComment line:
|///$columns = $LJCSQLBuilder::SQLValueColumns($dbColumns, true);|
LJCComments.SetComment isContinue:
|$columns = $LJCSQLBuilder::SQLValueColumns($dbColumns, true);|
LJCComments.SetComment line:
|///// $columns =|
LJCComments.SetComment isContinue:
|// $columns =|
LJCComments.SetComment line:
|/////  FirstName = 'First',|
LJCComments.SetComment isContinue:
|//  FirstName = 'First',|
LJCComments.SetComment line:
|/////  LastName = 'Last'|
LJCComments.SetComment isContinue:
|//  LastName = 'Last'|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// For an Insert "values" statement.|
LJCComments.SetComment isContinue:
|// For an Insert "values" statement.|
LJCComments.SetComment line:
|///$columns = LJCSQLBuilder::SQLValueColumns($dbColumns, false, true);|
LJCComments.SetComment isContinue:
|$columns = LJCSQLBuilder::SQLValueColumns($dbColumns, false, true);|
LJCComments.SetComment line:
|///// $columns =|
LJCComments.SetComment isContinue:
|// $columns =|
LJCComments.SetComment line:
|/////  (|
LJCComments.SetComment isContinue:
|//  (|
LJCComments.SetComment line:
|/////   'First',|
LJCComments.SetComment isContinue:
|//   'First',|
LJCComments.SetComment line:
|/////   'Last'|
LJCComments.SetComment isContinue:
|//   'Last'|
LJCComments.SetComment line:
|/////  )|
LJCComments.SetComment isContinue:
|//  )|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|SQLValueColumns|
LJCComments.SetComment line:
|	/// <summary>The PDO Data Access Library</summary>
|
LJCComments.SetComment comment:
|The PDO Data Access Library|
LJCComments.SetComment line:
|	/// <summary>Contains the Connection values.</summary>
|
LJCComments.SetComment comment:
|Contains the Connection values.|
ClassName:
|LJCConnectionValues|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCConnectionValues.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes a class instance with the provided values.</summary>|
LJCComments.SetComment comment:
|Initializes a class instance with the provided values.|
LJCComments.SetComment line:
|///     <param name="$dbServer">The DB Server name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$dbName">The Database name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$userID">The user name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$password">The user Password.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$database = "DatabaseName";|
LJCComments.SetComment isContinue:
|$database = "DatabaseName";|
LJCComments.SetComment line:
|///$userID = "UserID";|
LJCComments.SetComment isContinue:
|$userID = "UserID";|
LJCComments.SetComment line:
|///$password = "Password":|
LJCComments.SetComment isContinue:
|$password = "Password":|
LJCComments.SetComment line:
|///$connectionValues = new LJCConnectionValues("localhost", $database, $userID|
LJCComments.SetComment isContinue:
|$connectionValues = new LJCConnectionValues("localhost", $database, $userID|
LJCComments.SetComment line:
|///  , $password);|
LJCComments.SetComment isContinue:
|  , $password);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>The Database name.</summary>
|
LJCComments.SetComment comment:
|The Database name.|
PropertyName:
|$DbName|
LJCComments.SetComment line:
|		/// <summary>The DB Server name.</summary>
|
LJCComments.SetComment comment:
|The DB Server name.|
PropertyName:
|$DbServer|
LJCComments.SetComment line:
|		/// <summary>The user Password.</summary>
|
LJCComments.SetComment comment:
|The user Password.|
PropertyName:
|$Password|
LJCComments.SetComment line:
|		/// <summary>The User ID.</summary>
|
LJCComments.SetComment comment:
|The User ID.|
PropertyName:
|$UserID|
LJCComments.SetComment line:
|	/// <include path='items/LJCDbAccess/*' file='Doc/LJCDbAccess.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Provides standard PDO Data Access.</summary>|
LJCComments.SetComment comment:
|Provides standard PDO Data Access.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The Data Access class encapsulates the repetitive code required to
|
LJCComments.SetComment isContinue:
| The Data Access class encapsulates the repetitive code required to
|
LJCComments.SetComment line:
|/// perform common database functions using PDO. This reduces the amount of
|
LJCComments.SetComment isContinue:
| perform common database functions using PDO. This reduces the amount of
|
LJCComments.SetComment line:
|/// application code required to access this functionality and provides a
|
LJCComments.SetComment isContinue:
| application code required to access this functionality and provides a
|
LJCComments.SetComment line:
|/// standard location for implementing common best practices.
|
LJCComments.SetComment isContinue:
| standard location for implementing common best practices.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCDbAccess|
LJCComments.SetComment line:
|		/// <include path='items/GetValue/*' file='Doc/LJCDbAccess.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Returns a data value if the element exists, otherwise returns null.</summary>|
LJCComments.SetComment isContinue:
| Returns a data value if the element exists, otherwise returns null.|
LJCComments.SetComment line:
|///     <param name="$row">The data row columns.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$columnName">The column name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The data value.</returns>|
LJCComments.SetComment comment:
|The data value.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Returns null if the element does not exist.
|
LJCComments.SetComment isContinue:
| Returns null if the element does not exist.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment isContinue:
|$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$sql = "select ID, Name from $tableName where ID = 1";|
LJCComments.SetComment isContinue:
|$sql = "select ID, Name from $tableName where ID = 1";|
LJCComments.SetComment line:
|///$row = $dbAccess->Retrieve($sql);|
LJCComments.SetComment isContinue:
|$row = $dbAccess->Retrieve($sql);|
LJCComments.SetComment line:
|///$id = LJCDbAccess::GetValue($row, "ID");|
LJCComments.SetComment isContinue:
|$id = LJCDbAccess::GetValue($row, "ID");|
LJCComments.SetComment line:
|///$name = LJCDbAccess::GetValue($row, "Name");|
LJCComments.SetComment isContinue:
|$name = LJCDbAccess::GetValue($row, "Name");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetValue|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCDbAccess.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes a class instance.</summary>|
LJCComments.SetComment comment:
|Initializes a class instance.|
LJCComments.SetComment line:
|///     <param name="$connectionValues">The Connection values.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$database = "DatabaseName";|
LJCComments.SetComment isContinue:
|$database = "DatabaseName";|
LJCComments.SetComment line:
|///$userID = "UserID";|
LJCComments.SetComment isContinue:
|$userID = "UserID";|
LJCComments.SetComment line:
|///$password = "Password":|
LJCComments.SetComment isContinue:
|$password = "Password":|
LJCComments.SetComment line:
|///$connectionValues = new LJCConnectionValues("localhost", $database, $userID|
LJCComments.SetComment isContinue:
|$connectionValues = new LJCConnectionValues("localhost", $database, $userID|
LJCComments.SetComment line:
|///  , $password);|
LJCComments.SetComment isContinue:
|  , $password);|
LJCComments.SetComment line:
|///$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment isContinue:
|$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/Execute/*' file='Doc/LJCDbAccess.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Executes a non-query sql statement.</summary>|
LJCComments.SetComment comment:
|Executes a non-query sql statement.|
LJCComments.SetComment line:
|///     <param name="$sql">The SQL statement.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The count of affected records.</returns>|
LJCComments.SetComment comment:
|The count of affected records.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment isContinue:
|$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$sql = "delete from $tableName where ID = 1";|
LJCComments.SetComment isContinue:
|$sql = "delete from $tableName where ID = 1";|
LJCComments.SetComment line:
|///$affectedCount = $dbAccess->Execute($sql);|
LJCComments.SetComment isContinue:
|$affectedCount = $dbAccess->Execute($sql);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Execute|
LJCComments.SetComment line:
|		/// <include path='items/Load/*' file='Doc/LJCDbAccess.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Loads the records for the provided SQL statement.</summary>|
LJCComments.SetComment comment:
|Loads the records for the provided SQL statement.|
LJCComments.SetComment line:
|///     <param name="$sql">The SQL statement.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>An array of data records.</returns>|
LJCComments.SetComment comment:
|An array of data records.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment isContinue:
|$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$sql = "select * from $tableName";|
LJCComments.SetComment isContinue:
|$sql = "select * from $tableName";|
LJCComments.SetComment line:
|///$rows = $dbAccess->Load($sql);|
LJCComments.SetComment isContinue:
|$rows = $dbAccess->Load($sql);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Load|
LJCComments.SetComment line:
|		/// <include path='items/Retrieve/*' file='Doc/LJCDbAccess.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Retrieves a record for the provided SQL statement.</summary>|
LJCComments.SetComment comment:
|Retrieves a record for the provided SQL statement.|
LJCComments.SetComment line:
|///     <param name="$sql">The SQL statement.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>An array of record columns.</returns>|
LJCComments.SetComment comment:
|An array of record columns.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment isContinue:
|$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$sql = "select * from $tableName where ID = 1";|
LJCComments.SetComment isContinue:
|$sql = "select * from $tableName where ID = 1";|
LJCComments.SetComment line:
|///$row = $dbAccess->Retrieve($sql);|
LJCComments.SetComment isContinue:
|$row = $dbAccess->Retrieve($sql);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Retrieve|
LJCComments.SetComment line:
|		/// <include path='items/GetConnection/*' file='Doc/LJCDbAccess.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the PDO connection.</summary>|
LJCComments.SetComment comment:
|Creates the PDO connection.|
LJCComments.SetComment line:
|/// <returns>The PDO connection object.</returns>|
LJCComments.SetComment comment:
|The PDO connection object.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment isContinue:
|$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$connection = $dbAccess->GetConnection();|
LJCComments.SetComment isContinue:
|$connection = $dbAccess->GetConnection();|
LJCComments.SetComment line:
|///if ($connection != null)|
LJCComments.SetComment isContinue:
|if ($connection != null)|
LJCComments.SetComment line:
|///{|
LJCComments.SetComment isContinue:
|{|
LJCComments.SetComment line:
|///  // Use connection to perform low level data access.|
LJCComments.SetComment isContinue:
|  // Use connection to perform low level data access.|
LJCComments.SetComment line:
|///}|
LJCComments.SetComment isContinue:
|}|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetConnection|
LJCComments.SetComment line:
|		/// <include path='items/LoadTableSchema/*' file='Doc/LJCDbAccess.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Returns the Table Schema DbColumns collection.</summary>|
LJCComments.SetComment comment:
|Returns the Table Schema DbColumns collection.|
LJCComments.SetComment line:
|///     <param name="$dbName">The Database name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$tableName">The Table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>A DbColumns collection of column definitions.</returns>|
LJCComments.SetComment comment:
|A DbColumns collection of column definitions.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment isContinue:
|$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$dbColumns = $dbAccess->LoadTableSchema($database, $tableName);|
LJCComments.SetComment isContinue:
|$dbColumns = $dbAccess->LoadTableSchema($database, $tableName);|
LJCComments.SetComment line:
|///if (count($dbColumns) > 0)|
LJCComments.SetComment isContinue:
|if (count($dbColumns) > 0)|
LJCComments.SetComment line:
|///{|
LJCComments.SetComment isContinue:
|{|
LJCComments.SetComment line:
|///  // Use DbColumns data definitions.|
LJCComments.SetComment isContinue:
|  // Use DbColumns data definitions.|
LJCComments.SetComment line:
|///}|
LJCComments.SetComment isContinue:
|}|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|LoadTableSchema|
LJCComments.SetComment line:
|		/// <include path='items/SetConnectionValues/*' file='Doc/LJCDbAccess.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Sets the $ConnectionValues property.</summary>|
LJCComments.SetComment comment:
|Sets the $ConnectionValues property.|
LJCComments.SetComment line:
|///     <param name="$dbServer">The DB Server name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$dbName">The Database name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$userID">The user name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$password">The user Password.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// See constructor for how to create $connectionValues.|
LJCComments.SetComment isContinue:
|// See constructor for how to create $connectionValues.|
LJCComments.SetComment line:
|///$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment isContinue:
|$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// Change some of the object properties.|
LJCComments.SetComment isContinue:
|// Change some of the object properties.|
LJCComments.SetComment line:
|///$tableName = "NewTableName";|
LJCComments.SetComment isContinue:
|$tableName = "NewTableName";|
LJCComments.SetComment line:
|///$dbAccess->SetConnectionValues($database, $tableName);|
LJCComments.SetComment isContinue:
|$dbAccess->SetConnectionValues($database, $tableName);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|SetConnectionValues|
LJCComments.SetComment line:
|		/// <summary>The Database Connection values.</summary>
|
LJCComments.SetComment comment:
|The Database Connection values.|
PropertyName:
|$ConnectionValues|
LJCComments.SetComment line:
|	/// <include path='items/LJCDbColumn/*' file='Doc/LJCDbColumn.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Represents a DB Column definition.</summary>|
LJCComments.SetComment comment:
|Represents a DB Column definition.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The LJCDbColumn object is used extensively throughout the LJC PHP files,
|
LJCComments.SetComment isContinue:
| The LJCDbColumn object is used extensively throughout the LJC PHP files,
|
LJCComments.SetComment line:
|/// utilities and applications; wherever data elements need to be  dynamically
|
LJCComments.SetComment isContinue:
| utilities and applications; wherever data elements need to be  dynamically
|
LJCComments.SetComment line:
|/// defined or manipulated. It is commonly used to define  database table
|
LJCComments.SetComment isContinue:
| defined or manipulated. It is commonly used to define  database table
|
LJCComments.SetComment line:
|/// columns.
|
LJCComments.SetComment isContinue:
| columns.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The LJCDbColumn object is often used to facilitate moving data between a
|
LJCComments.SetComment isContinue:
| The LJCDbColumn object is often used to facilitate moving data between a
|
LJCComments.SetComment line:
|/// database table column and a data object.
|
LJCComments.SetComment isContinue:
| database table column and a data object.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// A Data Object is an instance of a class that contains properties for each
|
LJCComments.SetComment isContinue:
| A Data Object is an instance of a class that contains properties for each
|
LJCComments.SetComment line:
|/// data element in a data source row. It is a strongly typed, object
|
LJCComments.SetComment isContinue:
| data element in a data source row. It is a strongly typed, object
|
LJCComments.SetComment line:
|/// oriented representation of the data source row for use in code. It may
|
LJCComments.SetComment isContinue:
| oriented representation of the data source row for use in code. It may
|
LJCComments.SetComment line:
|/// contain common methods to assist with cloning and other Data Object
|
LJCComments.SetComment isContinue:
| contain common methods to assist with cloning and other Data Object
|
LJCComments.SetComment line:
|/// functions.
|
LJCComments.SetComment isContinue:
| functions.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCDbColumn|
LJCComments.SetComment line:
|		/// <include path='items/GetDataType/*' file='Doc/LJCDbColumn.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Coverts MySQL type names to PHP type names.</summary>|
LJCComments.SetComment comment:
|Coverts MySQL type names to PHP type names.|
LJCComments.SetComment line:
|///     <param name="$mySQLTypeName">The MySQL data type name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The PHP data type name.</returns>|
LJCComments.SetComment comment:
|The PHP data type name.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dbColumn = new LJCDbColumn("ID", dadtaTypeName: "int");|
LJCComments.SetComment isContinue:
|$dbColumn = new LJCDbColumn("ID", dadtaTypeName: "int");|
LJCComments.SetComment line:
|///$phpType = $dbColumn->GetDataType("bit");|
LJCComments.SetComment isContinue:
|$phpType = $dbColumn->GetDataType("bit");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetDataType|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCDbColumn.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes a class instance.</summary>|
LJCComments.SetComment comment:
|Initializes a class instance.|
LJCComments.SetComment line:
|///     <param name="$columnName">The Column name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$propertyName">The Property name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$dataTypeName">The DataType name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$value">The Column value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dbColumn = new LJCDbColumn("Name");|
LJCComments.SetComment isContinue:
|$dbColumn = new LJCDbColumn("Name");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>Creates an object clone.</summary>
|
LJCComments.SetComment comment:
|Creates an object clone.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>Indicates if the Column allows nulls.</summary>
|
LJCComments.SetComment comment:
|Indicates if the Column allows nulls.|
PropertyName:
|$AllowDbNull|
LJCComments.SetComment line:
|		/// <summary>The AutoIncrement flag.</summary>
|
LJCComments.SetComment comment:
|The AutoIncrement flag.|
PropertyName:
|$AutoIncrement|
LJCComments.SetComment line:
|		/// <summary>The Column name.</summary>
|
LJCComments.SetComment comment:
|The Column name.|
PropertyName:
|$ColumnName|
LJCComments.SetComment line:
|		/// <summary>The DataType name.</summary>
|
LJCComments.SetComment comment:
|The DataType name.|
PropertyName:
|$DataTypeName|
LJCComments.SetComment line:
|		/// <summary>The Default value.</summary>
|
LJCComments.SetComment comment:
|The Default value.|
PropertyName:
|$DefaultValue|
LJCComments.SetComment line:
|		/// <summary>The MaxLength value.</summary>
|
LJCComments.SetComment comment:
|The MaxLength value.|
PropertyName:
|$MaxLength|
LJCComments.SetComment line:
|		/// <summary>The MySQL Type name.</summary>
|
LJCComments.SetComment comment:
|The MySQL Type name.|
PropertyName:
|$MySQLTypeName|
LJCComments.SetComment line:
|		/// <summary>The Property name.</summary>
|
LJCComments.SetComment comment:
|The Property name.|
PropertyName:
|$PropertyName|
LJCComments.SetComment line:
|		/// <summary>The RenameAs value.</summary>
|
LJCComments.SetComment comment:
|The RenameAs value.|
PropertyName:
|$RenameAs|
LJCComments.SetComment line:
|		/// <summary>The Column value.</summary>
|
LJCComments.SetComment comment:
|The Column value.|
PropertyName:
|$Value|
LJCComments.SetComment line:
|		/// <summary>The Where clause boolean operator.</summary>
|
LJCComments.SetComment comment:
|The Where clause boolean operator.|
PropertyName:
|$WhereBoolOperator|
LJCComments.SetComment line:
|		/// <summary>The Where clause comparison operator.</summary>
|
LJCComments.SetComment comment:
|The Where clause comparison operator.|
PropertyName:
|$WhereCompareOperator|
LJCComments.SetComment line:
|	/// <include path='items/LJCDbColumns/*' file='Doc/LJCDbColumns.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Represents a typed Collection of LJCDbColumn objects.</summary>|
LJCComments.SetComment comment:
|Represents a typed Collection of LJCDbColumn objects.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// It extends (inherits) from class LJCCollectionLib-LJCCollectionBase which
|
LJCComments.SetComment isContinue:
| It extends (inherits) from class LJCCollectionLib-LJCCollectionBase which
|
LJCComments.SetComment line:
|/// provides the "foreach" and "count" functionality.
|
LJCComments.SetComment isContinue:
| provides the "foreach" and "count" functionality.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// It includes an AddObject() method that requires the strongly typed
|
LJCComments.SetComment isContinue:
| It includes an AddObject() method that requires the strongly typed
|
LJCComments.SetComment line:
|/// LJCDbColumn object collection element. This is what makes the collection
|
LJCComments.SetComment isContinue:
| LJCDbColumn object collection element. This is what makes the collection
|
LJCComments.SetComment line:
|/// strongly typed.
|
LJCComments.SetComment isContinue:
| strongly typed.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// The Get() method retrieves the internal array element by key.
|
LJCComments.SetComment isContinue:
| The Get() method retrieves the internal array element by key.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCDbColumns|
LJCComments.SetComment line:
|		/// <include path='items/Add/*' file='Doc/LJCDbColumns.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates an object and adds it to the collection.</summary>|
LJCComments.SetComment comment:
|Creates an object and adds it to the collection.|
LJCComments.SetComment line:
|///     <param name="$columnName">The Column name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$propertyName">The Property name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$dataTypeName">The DataType name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$value">The Column value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$key">The collection array key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dbColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$dbColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$dbColumns->Add("ID", dataTypeName: "int");|
LJCComments.SetComment isContinue:
|$dbColumns->Add("ID", dataTypeName: "int");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Add|
LJCComments.SetComment line:
|		/// <include path='items/AddObject/*' file='Doc/LJCDbColumns.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Adds an object and key value.</summary>|
LJCComments.SetComment comment:
|Adds an object and key value.|
LJCComments.SetComment line:
|///     <param name="$item">The DbColumn definition.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$key">The collection array key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dbColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$dbColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$dbColumn = new LJCDbColumn("Name");|
LJCComments.SetComment isContinue:
|$dbColumn = new LJCDbColumn("Name");|
LJCComments.SetComment line:
|///$dbColumns->AddObject($dbColumn);|
LJCComments.SetComment isContinue:
|$dbColumns->AddObject($dbColumn);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|AddObject|
LJCComments.SetComment line:
|		/// <summary>Creates an object clone.</summary>
|
LJCComments.SetComment comment:
|Creates an object clone.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <include path='items/Get/*' file='Doc/LJCDbColumns.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the item by Key value.</summary>|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|///     <param name="$key">The collection array key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The collection item.</returns>|
LJCComments.SetComment comment:
|The collection item.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dbColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$dbColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$dbColumns->Add("Name");|
LJCComments.SetComment isContinue:
|$dbColumns->Add("Name");|
LJCComments.SetComment line:
|///$dbColumn = $dbColumns->Get("Name");|
LJCComments.SetComment isContinue:
|$dbColumn = $dbColumns->Get("Name");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Get|
LJCComments.SetComment line:
|		/// <include path='items/GetColumns/*' file='Doc/LJCDbColumns.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Get the column definitions that match the property names.
|
LJCComments.SetComment isContinue:
| Get the column definitions that match the property names.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|///     <param name="$propertyNames">The collection of property names.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The definitions for the specified properties.</returns>|
LJCComments.SetComment comment:
|The definitions for the specified properties.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dbColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$dbColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$dbColumns->Add"FirstName");|
LJCComments.SetComment isContinue:
|$dbColumns->Add"FirstName");|
LJCComments.SetComment line:
|///$dbColumns->Add("MiddleName");|
LJCComments.SetComment isContinue:
|$dbColumns->Add("MiddleName");|
LJCComments.SetComment line:
|///$dbColumns->Add("LastName");|
LJCComments.SetComment isContinue:
|$dbColumns->Add("LastName");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$propertyNames = [];|
LJCComments.SetComment isContinue:
|$propertyNames = [];|
LJCComments.SetComment line:
|///$propertyNames[] = "FirstName";|
LJCComments.SetComment isContinue:
|$propertyNames[] = "FirstName";|
LJCComments.SetComment line:
|///$propertyNames[] = "LastName";|
LJCComments.SetComment isContinue:
|$propertyNames[] = "LastName";|
LJCComments.SetComment line:
|///$specificColumns = $dbColumns->GetColumns($propertyNames);|
LJCComments.SetComment isContinue:
|$specificColumns = $dbColumns->GetColumns($propertyNames);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|GetColumns|
LJCComments.SetComment line:
|		/// <include path='items/MapNames/*' file='Doc/LJCDbColumns.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Sets the PropertyName, RenameAs and Caption values for a column.
|
LJCComments.SetComment isContinue:
| Sets the PropertyName, RenameAs and Caption values for a column.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|///     <param name="$columnName">The Column name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$propertyName">The Property name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$renameAs">The RenameAs name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$caption">The Caption value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment comment:
||
FunctionName:
|MapNames|
LJCComments.SetComment line:
|		/// <include path='items/SetWhereOperators/*' file='Doc/LJCDbColumns.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Sets the Where Clause operators.</summary>|
LJCComments.SetComment comment:
|Sets the Where Clause operators.|
LJCComments.SetComment line:
|///     <param name="$key">The collection array key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$compareOperator">The comparison operator.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$boolOperator">The boolean operator.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dbColumns = new LJCDbColumns();|
LJCComments.SetComment isContinue:
|$dbColumns = new LJCDbColumns();|
LJCComments.SetComment line:
|///$dbColumns->Add("Name", value: "%C%");|
LJCComments.SetComment isContinue:
|$dbColumns->Add("Name", value: "%C%");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $compareOperator - Any valid comparison operator; defaults to "=".|
LJCComments.SetComment isContinue:
|// $compareOperator - Any valid comparison operator; defaults to "=".|
LJCComments.SetComment line:
|///// $boolOperator - "and" or "or"; defaults to "and".|
LJCComments.SetComment isContinue:
|// $boolOperator - "and" or "or"; defaults to "and".|
LJCComments.SetComment line:
|///$dbColumns->SetWhereOperators("Name", "like", "or");|
LJCComments.SetComment isContinue:
|$dbColumns->SetWhereOperators("Name", "like", "or");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|SetWhereOperators|
LJCComments.SetComment line:
|	/// <summary>Represents a SQL Join.</summary>
|
LJCComments.SetComment comment:
|Represents a SQL Join.|
ClassName:
|LJCJoin|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCJoin.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes a class instance.</summary>|
LJCComments.SetComment comment:
|Initializes a class instance.|
LJCComments.SetComment line:
|///     <param name="$tableName">The Join table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$tableAlias">The Join table alias.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>Creates an object clone.</summary>
|
LJCComments.SetComment comment:
|Creates an object clone.|
FunctionName:
|Clone|
PropertyName:
|$Columns|
LJCComments.SetComment line:
|		/// <summary>The JoinOn definintions.</summary>
|
LJCComments.SetComment comment:
|The JoinOn definintions.|
PropertyName:
|$JoinOns|
LJCComments.SetComment line:
|		/// <summary>The Join type.</summary>
|
LJCComments.SetComment comment:
|The Join type.|
PropertyName:
|$JoinType|
LJCComments.SetComment line:
|		/// <summary>The Schema name.</summary>
|
LJCComments.SetComment comment:
|The Schema name.|
PropertyName:
|$SchemaName|
LJCComments.SetComment line:
|		/// <summary>The table alias.</summary>
|
LJCComments.SetComment comment:
|The table alias.|
PropertyName:
|$TableAlias|
LJCComments.SetComment line:
|		/// <summary>The table name.</summary>
|
LJCComments.SetComment comment:
|The table name.|
PropertyName:
|$TableName|
LJCComments.SetComment line:
|	/// <summary>Represents a collection of LJCJoin objects.</summary>
|
LJCComments.SetComment comment:
|Represents a collection of LJCJoin objects.|
ClassName:
|LJCJoins|
LJCComments.SetComment line:
|		/// <summary>Creates an object and adds it to the collection.</summary>
|
LJCComments.SetComment comment:
|Creates an object and adds it to the collection.|
LJCComments.SetComment line:
|		/// <include path='items/Add/*' file='Doc/LJCJoins.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates an object and adds it to the collection.</summary>|
LJCComments.SetComment comment:
|Creates an object and adds it to the collection.|
LJCComments.SetComment line:
|///     <param name="$tableName">The Join table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$tableAlias">The Join table alias.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$key">The optional key value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment isContinue:
| $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|/// require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
| require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $joins = new LJCJoins();|
LJCComments.SetComment isContinue:
| $joins = new LJCJoins();|
LJCComments.SetComment line:
|/// $joins->Add("TableName", "alias");|
LJCComments.SetComment isContinue:
| $joins->Add("TableName", "alias");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Add|
LJCComments.SetComment line:
|		/// <summary>Adds an object and key value.</summary>
|
LJCComments.SetComment comment:
|Adds an object and key value.|
LJCComments.SetComment line:
|		/// <include path='items/AddObject/*' file='Doc/LJCJoins.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Adds an object and key value.</summary>|
LJCComments.SetComment comment:
|Adds an object and key value.|
LJCComments.SetComment line:
|///     <param name="$item">The item to add to the collection.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$key">The optional key value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment isContinue:
| $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|/// require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
| require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $joins = new LJCJoins();|
LJCComments.SetComment isContinue:
| $joins = new LJCJoins();|
LJCComments.SetComment line:
|/// $join = new LJCJoin("TableName");|
LJCComments.SetComment isContinue:
| $join = new LJCJoin("TableName");|
LJCComments.SetComment line:
|/// $joins->AddObject($join);|
LJCComments.SetComment isContinue:
| $joins->AddObject($join);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|AddObject|
LJCComments.SetComment line:
|		/// <summary>Creates an object clone.</summary>
|
LJCComments.SetComment comment:
|Creates an object clone.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>Get the item by Key value.</summary>
|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|		/// <include path='items/Get/*' file='Doc/LJCJoins.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the item by Key value.</summary>|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|///     <param name="$key">The key value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$throwError">The optional throw error flag.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment isContinue:
| $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|/// require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
| require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $joins = new LJCJoins();|
LJCComments.SetComment isContinue:
| $joins = new LJCJoins();|
LJCComments.SetComment line:
|/// $joins->Add("TableName");|
LJCComments.SetComment isContinue:
| $joins->Add("TableName");|
LJCComments.SetComment line:
|/// $join = $joins->Get("TableName");|
LJCComments.SetComment isContinue:
| $join = $joins->Get("TableName");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Get|
LJCComments.SetComment line:
|	/// <summary>Represents a SQL JoinOn.</summary>
|
LJCComments.SetComment comment:
|Represents a SQL JoinOn.|
ClassName:
|LJCJoinOn|
LJCComments.SetComment line:
|		/// <summary>Initializes a class instance.</summary>
|
LJCComments.SetComment comment:
|Initializes a class instance.|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCJoinOn.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes a class instance.</summary>|
LJCComments.SetComment comment:
|Initializes a class instance.|
LJCComments.SetComment line:
|///     <param name="$fromColumnName">The 'from' column name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$toColumnName">The 'to' column name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>Creates an object clone.</summary>
|
LJCComments.SetComment comment:
|Creates an object clone.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>The Boolean Operator value.</summary>
|
LJCComments.SetComment comment:
|The Boolean Operator value.|
PropertyName:
|$BooleanOperator|
LJCComments.SetComment line:
|		/// <summary>The 'From' column name.</summary>
|
LJCComments.SetComment comment:
|The 'From' column name.|
PropertyName:
|$FromColumnName|
LJCComments.SetComment line:
|		/// <summary>The Join On Operator.</summary>
|
LJCComments.SetComment comment:
|The Join On Operator.|
PropertyName:
|$JoinOnOperator|
LJCComments.SetComment line:
|		/// <summary>The contained JoinOns.</summary>
|
LJCComments.SetComment comment:
|The contained JoinOns.|
PropertyName:
|$JoinOns|
LJCComments.SetComment line:
|		/// <summary>The 'To' column name.</summary>
|
LJCComments.SetComment comment:
|The 'To' column name.|
PropertyName:
|$ToColumnName|
LJCComments.SetComment line:
|	/// <summary>Represents a collection of LJCJoin objects.</summary>
|
LJCComments.SetComment comment:
|Represents a collection of LJCJoin objects.|
ClassName:
|LJCJoinOns|
LJCComments.SetComment line:
|		/// <include path='items/Add/*' file='Doc/LJCJoinOns.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates an object and adds it to the collection.</summary>|
LJCComments.SetComment comment:
|Creates an object and adds it to the collection.|
LJCComments.SetComment line:
|///     <param name="$fromColumnName">The 'from' column name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$toColumnName">The 'to' column name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$key">The optional key value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment isContinue:
| $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|/// require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
| require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $joinOns = new LJCJoinOns();|
LJCComments.SetComment isContinue:
| $joinOns = new LJCJoinOns();|
LJCComments.SetComment line:
|/// $joinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment isContinue:
| $joinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Add|
LJCComments.SetComment line:
|		/// <include path='items/AddObject/*' file='Doc/LJCJoinOns.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Adds an object and key value.</summary>|
LJCComments.SetComment comment:
|Adds an object and key value.|
LJCComments.SetComment line:
|///     <param name="$item">The item to add to the collection.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$key">The optional key value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment isContinue:
| $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|/// require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
| require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $joinOns = new LJCJoinOns();|
LJCComments.SetComment isContinue:
| $joinOns = new LJCJoinOns();|
LJCComments.SetComment line:
|/// $joinOn = new LJCJoinOn("FromColumnName", "ToColumnName");|
LJCComments.SetComment isContinue:
| $joinOn = new LJCJoinOn("FromColumnName", "ToColumnName");|
LJCComments.SetComment line:
|/// $joinOns->AddObject($joinOn);|
LJCComments.SetComment isContinue:
| $joinOns->AddObject($joinOn);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|AddObject|
LJCComments.SetComment line:
|		/// <summary>Creates an object clone.</summary>
|
LJCComments.SetComment comment:
|Creates an object clone.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>Get the item by Key value.</summary>
|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|		/// <include path='items/Get/*' file='Doc/LJCJoinOns.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the item by Key value.</summary>|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|///     <param name="$key">The key value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$throwError">The optional throw error flag.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment isContinue:
| $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|/// require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
| require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $joinOns = new LJCJoins();|
LJCComments.SetComment isContinue:
| $joinOns = new LJCJoins();|
LJCComments.SetComment line:
|/// $joinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment isContinue:
| $joinOns->Add("FromColumnName", "ToColumnName");|
LJCComments.SetComment line:
|/// $joinOn = $joinOns->Get("FromColumnName");|
LJCComments.SetComment isContinue:
| $joinOn = $joinOns->Get("FromColumnName");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Get|
LJCComments.SetComment line:
|	/// <summary>The Common Text Output Class Library</summary>
|
LJCComments.SetComment comment:
|The Common Text Output Class Library|
LJCComments.SetComment line:
|	/// <summary>Represents a built string value.</summary>
|
LJCComments.SetComment comment:
|Represents a built string value.|
ClassName:
|LJCStringBuilder|
LJCComments.SetComment line:
|		/// <summary>Initializes a class instance.</summary>
|
LJCComments.SetComment comment:
|Initializes a class instance.|
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/Append/*' file='Doc/LJCStringBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Appends text with indents.</summary>|
LJCComments.SetComment comment:
|Appends text with indents.|
LJCComments.SetComment line:
|///     <param name="$text">The text value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$indent">The number of tabs to add to the line beginning.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$addBreak">Adds an HTML break before the cr/lf.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$builder = new StringBuilder();|
LJCComments.SetComment isContinue:
|$builder = new StringBuilder();|
LJCComments.SetComment line:
|///$builder->Append("First ");|
LJCComments.SetComment isContinue:
|$builder->Append("First ");|
LJCComments.SetComment line:
|///$builder->Append("Name");|
LJCComments.SetComment isContinue:
|$builder->Append("Name");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $text = "First Name"|
LJCComments.SetComment isContinue:
|// $text = "First Name"|
LJCComments.SetComment line:
|///$text = $builder->ToString();|
LJCComments.SetComment isContinue:
|$text = $builder->ToString();|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Append|
LJCComments.SetComment line:
|		/// <include path='items/AppendLine/*' file='Doc/LJCStringBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Appends a text line with indents.</summary>|
LJCComments.SetComment comment:
|Appends a text line with indents.|
LJCComments.SetComment line:
|///     <param name="$text">The text value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$indent">The number of tabs to add to the line beginning.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$addBreak">Adds an HTML break before the cr/lf.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$builder = new StringBuilder();|
LJCComments.SetComment isContinue:
|$builder = new StringBuilder();|
LJCComments.SetComment line:
|///$builder->AppendLine("First");|
LJCComments.SetComment isContinue:
|$builder->AppendLine("First");|
LJCComments.SetComment line:
|///$builder->AppendLine("Second", 1);|
LJCComments.SetComment isContinue:
|$builder->AppendLine("Second", 1);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $text =|
LJCComments.SetComment isContinue:
|// $text =|
LJCComments.SetComment line:
|///// First|
LJCComments.SetComment isContinue:
|// First|
LJCComments.SetComment line:
|/////   Second|
LJCComments.SetComment isContinue:
|//   Second|
LJCComments.SetComment line:
|///$text = $builder->ToString();|
LJCComments.SetComment isContinue:
|$text = $builder->ToString();|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|AppendLine|
LJCComments.SetComment line:
|		/// <include path='items/AppendTags/*' file='Doc/LJCStringBuilder.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Appends a text line with begin tag, end tag and indents.</summary>|
LJCComments.SetComment comment:
|Appends a text line with begin tag, end tag and indents.|
LJCComments.SetComment line:
|///     <param name="$tag">The tag value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$text">The text value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$indent">The number of tabs to add to the line beginning.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$addBreak">Adds an HTML break before the cr/lf.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$builder = new StringBuilder();|
LJCComments.SetComment isContinue:
|$builder = new StringBuilder();|
LJCComments.SetComment line:
|///$builder->AppendTags("First", "FirstValue", 0, true);|
LJCComments.SetComment isContinue:
|$builder->AppendTags("First", "FirstValue", 0, true);|
LJCComments.SetComment line:
|///$builder->AppendTags("Second", "SecondValue", 1, true);|
LJCComments.SetComment isContinue:
|$builder->AppendTags("Second", "SecondValue", 1, true);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $text =|
LJCComments.SetComment isContinue:
|// $text =|
LJCComments.SetComment line:
|///// &amp;lt;First&amp;gt;FirstValue&amp;lt;/First&amp;gt;&amp;lt;br /&amp;gt;|
LJCComments.SetComment isContinue:
|// &amp;lt;First&amp;gt;FirstValue&amp;lt;/First&amp;gt;&amp;lt;br /&amp;gt;|
LJCComments.SetComment line:
|/////   &amp;lt;Second&amp;gt;SecondValue&amp;lt;/Second&amp;gt;&amp;lt;br /&amp;gt;|
LJCComments.SetComment isContinue:
|//   &amp;lt;Second&amp;gt;SecondValue&amp;lt;/Second&amp;gt;&amp;lt;br /&amp;gt;|
LJCComments.SetComment line:
|///$text = $builder->ToString();|
LJCComments.SetComment isContinue:
|$text = $builder->ToString();|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|AppendTags|
LJCComments.SetComment line:
|		/// <summary>Gets the current builder string length.</summary>
|
LJCComments.SetComment comment:
|Gets the current builder string length.|
FunctionName:
|Length|
LJCComments.SetComment line:
|		/// <summary>Gets the built string.</summary>
|
LJCComments.SetComment comment:
|Gets the built string.|
FunctionName:
|ToString|
LJCComments.SetComment line:
|	/// <summary>The HTML table column definition.</summary> 
|
LJCComments.SetComment comment:
|The HTML table column definition.|
ClassName:
|LJCHTMLTableColumn|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCHTMLTableColumn.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes an object instance.</summary>|
LJCComments.SetComment comment:
|Initializes an object instance.|
LJCComments.SetComment line:
|///     <param name="$columnName">The column name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$headingName">The heading name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$style">The style value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$width">The column width.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>The Column name.</summary> 
|
LJCComments.SetComment comment:
|The Column name.|
PropertyName:
|$ColumnName|
LJCComments.SetComment line:
|		/// <summary>The Column Heading name.</summary> 
|
LJCComments.SetComment comment:
|The Column Heading name.|
PropertyName:
|$HeadingName|
LJCComments.SetComment line:
|		/// <summary>The Style value.</summary> 
|
LJCComments.SetComment comment:
|The Style value.|
PropertyName:
|$Style|
LJCComments.SetComment line:
|		/// <summary>The Column width.</summary> 
|
LJCComments.SetComment comment:
|The Column width.|
PropertyName:
|$Width|
LJCComments.SetComment line:
|	/// <summary>Contains HTML output methods.</summary> 
|
LJCComments.SetComment comment:
|Contains HTML output methods.|
ClassName:
|LJCHTMLWriter|
LJCComments.SetComment line:
|		/// <include path='items/WriteHeader/*' file='Doc/LJCHTMLWriter.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Writes an HTML table header row.</summary>|
LJCComments.SetComment comment:
|Writes an HTML table header row.|
LJCComments.SetComment line:
|///     <param name="$columns">The column definitions.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$width">The column width.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment comment:
||
FunctionName:
|WriteHeader|
LJCComments.SetComment line:
|		/// <include path='items/WriteRow/*' file='Doc/LJCHTMLWriter.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Writes an HTML table data row.</summary>|
LJCComments.SetComment comment:
|Writes an HTML table data row.|
LJCComments.SetComment line:
|///     <param name="$dataObject">The data object.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$columns">The column definitions.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment comment:
||
FunctionName:
|WriteRow|
LJCComments.SetComment line:
|	/// <include path='items/LJCWriter/*' file='Doc/LJCWriter.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Contains console and file output methods.</summary>|
LJCComments.SetComment comment:
|Contains console and file output methods.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The Write() and WriteLine() static functions are used to write to stdout.
|
LJCComments.SetComment isContinue:
| The Write() and WriteLine() static functions are used to write to stdout.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// The FWrite() and FWriteLine() methods that write to the file stream
|
LJCComments.SetComment isContinue:
| The FWrite() and FWriteLine() methods that write to the file stream
|
LJCComments.SetComment line:
|/// passed to the LJCWriter constructor.
|
LJCComments.SetComment isContinue:
| passed to the LJCWriter constructor.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCWriter|
LJCComments.SetComment line:
|		/// <include path='items/Write/*' file='Doc/LJCWriter.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Writes text with indents.</summary>|
LJCComments.SetComment comment:
|Writes text with indents.|
LJCComments.SetComment line:
|///     <param name="$text">The text value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$indentCount">The number of tabs to add to the line beginning.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$addBreak">Adds an HTML break before the cr/lf.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The text is sent to stdout using the echo php function.
|
LJCComments.SetComment isContinue:
| The text is sent to stdout using the echo php function.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// It is often used for Debug output.
|
LJCComments.SetComment isContinue:
| It is often used for Debug output.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///  require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment isContinue:
|  require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///  $text = "This value";|
LJCComments.SetComment isContinue:
|  $text = "This value";|
LJCComments.SetComment line:
|///  LJCWriter::Write("SomeMethod() text: $text");|
LJCComments.SetComment isContinue:
|  LJCWriter::Write("SomeMethod() text: $text");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Write|
LJCComments.SetComment line:
|		/// <include path='items/WriteFile/*' file='Doc/LJCWriter.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Writes a text file.</summary>|
LJCComments.SetComment comment:
|Writes a text file.|
LJCComments.SetComment line:
|///     <param name="$text">The text value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$fileSpec">The file specification.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///  require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment isContinue:
|  require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///  $text = "This is some text.";|
LJCComments.SetComment isContinue:
|  $text = "This is some text.";|
LJCComments.SetComment line:
|///  LJCWriter::WriteFile($text, "Output.txt");|
LJCComments.SetComment isContinue:
|  LJCWriter::WriteFile($text, "Output.txt");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|WriteFile|
LJCComments.SetComment line:
|		/// <include path='items/WriteLine/*' file='Doc/LJCWriter.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Writes a text line with indents.</summary>|
LJCComments.SetComment comment:
|Writes a text line with indents.|
LJCComments.SetComment line:
|///     <param name="$text">The text value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$indentCount">The number of tabs to add to the line beginning.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$addBreak">Adds an HTML break before the cr/lf.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The text is sent to stdout using the echo php function.
|
LJCComments.SetComment isContinue:
| The text is sent to stdout using the echo php function.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// It is often used for Debug output.
|
LJCComments.SetComment isContinue:
| It is often used for Debug output.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///  require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment isContinue:
|  require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///  $text = "This value";|
LJCComments.SetComment isContinue:
|  $text = "This value";|
LJCComments.SetComment line:
|///  LJCWriter::WriteLine("SomeMethod() text: $text");|
LJCComments.SetComment isContinue:
|  LJCWriter::WriteLine("SomeMethod() text: $text");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|WriteLine|
LJCComments.SetComment line:
|		/// <summary>Initializes an object instance.</summary>
|
LJCComments.SetComment comment:
|Initializes an object instance.|
LJCComments.SetComment line:
|		/// <param name="$stream">The stream object.</param>
|
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/FWrite/*' file='Doc/LJCWriter.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Writes file text with indents.</summary>|
LJCComments.SetComment comment:
|Writes file text with indents.|
LJCComments.SetComment line:
|///     <param name="$text">The text value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$indentCount">The number of tabs to add to the line beginning.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///  require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment isContinue:
|  require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///  $stream = fopen($fileName, "w");|
LJCComments.SetComment isContinue:
|  $stream = fopen($fileName, "w");|
LJCComments.SetComment line:
|///  $writer = new LJCWriter($stream);|
LJCComments.SetComment isContinue:
|  $writer = new LJCWriter($stream);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///  $writer->FWrite("This is some text.");|
LJCComments.SetComment isContinue:
|  $writer->FWrite("This is some text.");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|FWrite|
LJCComments.SetComment line:
|		/// <include path='items/FWriteLine/*' file='Doc/LJCWriter.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Writes a file text line with indents.</summary>|
LJCComments.SetComment comment:
|Writes a file text line with indents.|
LJCComments.SetComment line:
|///     <param name="$text">The text value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$indentCount">The number of tabs to add to the line beginning.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///  require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment isContinue:
|  require_once "$webCommonPath/LJCTextLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///  $stream = fopen($fileName, "w");|
LJCComments.SetComment isContinue:
|  $stream = fopen($fileName, "w");|
LJCComments.SetComment line:
|///  $writer = new LJCWriter($stream);|
LJCComments.SetComment isContinue:
|  $writer = new LJCWriter($stream);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///  $writer->FWriteLine("This is some text.");|
LJCComments.SetComment isContinue:
|  $writer->FWriteLine("This is some text.");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|FWriteLine|
LJCComments.SetComment line:
|	/// <include path='items/LJCGenTextLib/*' file='Doc/LJCGenTextLib.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The utility to generate text from a template and custom data.
|
LJCComments.SetComment isContinue:
| The utility to generate text from a template and custom data.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|	/// <summary>The GenText text generator class.</summary>
|
LJCComments.SetComment comment:
|The GenText text generator class.|
LJCComments.SetComment line:
|	/// <remarks>Main Function: ProcessTemplate()</remarks>
|
LJCComments.SetComment comment:
|Main Function: ProcessTemplate()|
ClassName:
|LJCGenText|
LJCComments.SetComment line:
|		/// <summary>Initializes an object instance.</summary>
|
LJCComments.SetComment comment:
|Initializes an object instance.|
LJCComments.SetComment line:
|		/// <param name="$debugFileSuffix">The data file specification.</param>
|
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/ProcessTemplate/*' file='Doc/LJCGenText.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Processes the Template and Data to produce the output string.</summary>|
LJCComments.SetComment comment:
|Processes the Template and Data to produce the output string.|
LJCComments.SetComment line:
|///     <param name="$templateFileSpec">The template file.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$sections">The data sections.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $sections is an LJCSections object.|
LJCComments.SetComment isContinue:
|// $sections is an LJCSections object.|
LJCComments.SetComment line:
|///$sections = LJCSections::Deserialize("Sections.xml");|
LJCComments.SetComment isContinue:
|$sections = LJCSections::Deserialize("Sections.xml");|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$genText = new LJCGenText();|
LJCComments.SetComment isContinue:
|$genText = new LJCGenText();|
LJCComments.SetComment line:
|///$templateFileSpec = "GenDataLib\Templates\ClassTemplate.html";|
LJCComments.SetComment isContinue:
|$templateFileSpec = "GenDataLib\Templates\ClassTemplate.html";|
LJCComments.SetComment line:
|///$outputString = $genText->ProcessTemplate($templateFileSpec, $sections);|
LJCComments.SetComment isContinue:
|$outputString = $genText->ProcessTemplate($templateFileSpec, $sections);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|ProcessTemplate|
LJCComments.SetComment line:
|	/// <include path='items/LJCGenTextSectionLib/*' file='Doc/LJCGenTextSectionLib.xml'/>
|
LJCComments.SetComment line:
|/// <summary>The GenText Section Library</summary>|
LJCComments.SetComment comment:
|The GenText Section Library|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains the GenData classes used in the text generation process. These
|
LJCComments.SetComment isContinue:
| Contains the GenData classes used in the text generation process. These
|
LJCComments.SetComment line:
|/// classes are also used to Serialize and Deserialize the GenData XML that
|
LJCComments.SetComment isContinue:
| classes are also used to Serialize and Deserialize the GenData XML that
|
LJCComments.SetComment line:
|/// defines the text Sections, Items and Replacement values.
|
LJCComments.SetComment isContinue:
| defines the text Sections, Items and Replacement values.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// GenData is the XML data format for the data that is merged with a text
|
LJCComments.SetComment isContinue:
| GenData is the XML data format for the data that is merged with a text
|
LJCComments.SetComment line:
|/// template file  to generate a customized output file.
|
LJCComments.SetComment isContinue:
| template file  to generate a customized output file.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// See: &lt;a href="LJCSections/LJCSectionsDeserialize.html"&gt;LJCSections Deserialize()&lt;/a&gt; method
|
LJCComments.SetComment isContinue:
| See: &lt;a href="LJCSections/LJCSectionsDeserialize.html"&gt;LJCSections Deserialize()&lt;/a&gt; method
|
LJCComments.SetComment line:
|/// for the layout of the GenData XML.
|
LJCComments.SetComment isContinue:
| for the layout of the GenData XML.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|	/// <include path='items/LJCDirective/*' file='Doc/LJCDirective.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Represents a template Directive.</summary>|
LJCComments.SetComment comment:
|Represents a template Directive.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Template Directives are include in a valid comment line for whatever
|
LJCComments.SetComment isContinue:
| Template Directives are include in a valid comment line for whatever
|
LJCComments.SetComment line:
|/// text type or language is being generated. A line which contains a
|
LJCComments.SetComment isContinue:
| text type or language is being generated. A line which contains a
|
LJCComments.SetComment line:
|/// Directive will not appear in the generated text.
|
LJCComments.SetComment isContinue:
| Directive will not appear in the generated text.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The valid Directives are:
|
LJCComments.SetComment isContinue:
| The valid Directives are:
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// &amp;lt;!-- #SectionBegin Name --&gt;
|
LJCComments.SetComment isContinue:
| &amp;lt;!-- #SectionBegin Name --&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// Indicates the beginning of a Section.  The Directive includes the Section
|
LJCComments.SetComment isContinue:
| Indicates the beginning of a Section.  The Directive includes the Section
|
LJCComments.SetComment line:
|/// name. The Section name is used in the  XMLData to indicate to which Section
|
LJCComments.SetComment isContinue:
| name. The Section name is used in the  XMLData to indicate to which Section
|
LJCComments.SetComment line:
|/// the Items and Replacements apply.
|
LJCComments.SetComment isContinue:
| the Items and Replacements apply.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// &amp;lt;!-- #SectionEnd Name --&gt;
|
LJCComments.SetComment isContinue:
| &amp;lt;!-- #SectionEnd Name --&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// Indicates the end of a Section. The  section name is optional and simply
|
LJCComments.SetComment isContinue:
| Indicates the end of a Section. The  section name is optional and simply
|
LJCComments.SetComment line:
|/// helps to identify what section is  ending.
|
LJCComments.SetComment isContinue:
| helps to identify what section is  ending.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// &amp;lt;!-- #Value _ReplacementValue_ --&gt;
|
LJCComments.SetComment isContinue:
| &amp;lt;!-- #Value _ReplacementValue_ --&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// A value Directive is currently informational only.  It identifies a
|
LJCComments.SetComment isContinue:
| A value Directive is currently informational only.  It identifies a
|
LJCComments.SetComment line:
|/// Replacement value that appears in Items within that  Section.
|
LJCComments.SetComment isContinue:
| Replacement value that appears in Items within that  Section.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// &amp;lt;!-- #IfBegin _ReplacementValue_ ComparisonValue --&gt;
|
LJCComments.SetComment isContinue:
| &amp;lt;!-- #IfBegin _ReplacementValue_ ComparisonValue --&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// This Directive indicates the beginning of conditional text. If the
|
LJCComments.SetComment isContinue:
| This Directive indicates the beginning of conditional text. If the
|
LJCComments.SetComment line:
|/// _ReplacementValue_ is  equal to the ComparisonValue, then the next text
|
LJCComments.SetComment isContinue:
| _ReplacementValue_ is  equal to the ComparisonValue, then the next text
|
LJCComments.SetComment line:
|/// lines are generated up to  the #IfElse or #IfEnd directive.
|
LJCComments.SetComment isContinue:
| lines are generated up to  the #IfElse or #IfEnd directive.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// The ComparisonValue can be "NotNull". The #IfBegin will be true if the
|
LJCComments.SetComment isContinue:
| The ComparisonValue can be "NotNull". The #IfBegin will be true if the
|
LJCComments.SetComment line:
|/// _ReplacementValue_ is not null.
|
LJCComments.SetComment isContinue:
| _ReplacementValue_ is not null.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// &amp;lt;!-- #IfElse --&gt;
|
LJCComments.SetComment isContinue:
| &amp;lt;!-- #IfElse --&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// The next text lines are generated  up to the #IfEnd Directive if the
|
LJCComments.SetComment isContinue:
| The next text lines are generated  up to the #IfEnd Directive if the
|
LJCComments.SetComment line:
|/// #IfBegin Directive was false.
|
LJCComments.SetComment isContinue:
| #IfBegin Directive was false.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// &amp;lt;!-- #IfEnd _ReplacementValue_ comparisonValue --&gt;
|
LJCComments.SetComment isContinue:
| &amp;lt;!-- #IfEnd _ReplacementValue_ comparisonValue --&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// The end of the #IfBegin text. The _ReplacementValue_ and ComparisonValue
|
LJCComments.SetComment isContinue:
| The end of the #IfBegin text. The _ReplacementValue_ and ComparisonValue
|
LJCComments.SetComment line:
|/// are optional and help to identify which #IfBegin is ending.
|
LJCComments.SetComment isContinue:
| are optional and help to identify which #IfBegin is ending.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCDirective|
LJCComments.SetComment line:
|		/// <include path='items/Find/*' file='Doc/LJCDirective.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Find any Directives in a line.</summary>|
LJCComments.SetComment comment:
|Find any Directives in a line.|
LJCComments.SetComment line:
|///     <param name="$line">The text line.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Directive object or null.</returns>|
LJCComments.SetComment comment:
|The Directive object or null.|
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment isContinue:
| $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|/// require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
| require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $line = "  // #SectionBegin Class|
LJCComments.SetComment isContinue:
| $line = "  // #SectionBegin Class|
LJCComments.SetComment line:
|/// $directive = LJCDirective::Find($line);|
LJCComments.SetComment isContinue:
| $directive = LJCDirective::Find($line);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Find|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCDirective.xml'/>
|
LJCComments.SetComment line:
|/// <summary> Initializes an object instance.</summary>|
LJCComments.SetComment comment:
| Initializes an object instance.|
LJCComments.SetComment line:
|///     <param name="$type">The Directive Type.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$name">The Directive name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment isContinue:
| $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|/// require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
| require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $directive = new LJCDirective("SectionBegin", "Class");|
LJCComments.SetComment isContinue:
| $directive = new LJCDirective("SectionBegin", "Class");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>The Directive Name.</summary>
|
LJCComments.SetComment comment:
|The Directive Name.|
PropertyName:
|$Name|
LJCComments.SetComment line:
|		/// <summary>The Directive Type.</summary>
|
LJCComments.SetComment comment:
|The Directive Type.|
PropertyName:
|$Type|
LJCComments.SetComment line:
|		/// <summary>The compare value.</summary>
|
LJCComments.SetComment comment:
|The compare value.|
PropertyName:
|$Value|
LJCComments.SetComment line:
|	/// <include path='items/LJCSection/*' file='Doc/LJCSection.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Represents a template Section.</summary>|
LJCComments.SetComment comment:
|Represents a template Section.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// A Section identifies a section of text for which there can be one or more
|
LJCComments.SetComment isContinue:
| A Section identifies a section of text for which there can be one or more
|
LJCComments.SetComment line:
|/// items.
|
LJCComments.SetComment isContinue:
| items.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The text within the Section will be generated once for each Item identified
|
LJCComments.SetComment isContinue:
| The text within the Section will be generated once for each Item identified
|
LJCComments.SetComment line:
|/// in the XMLData file. The Replacements for the current Item are applied to
|
LJCComments.SetComment isContinue:
| in the XMLData file. The Replacements for the current Item are applied to
|
LJCComments.SetComment line:
|/// the text.
|
LJCComments.SetComment isContinue:
| the text.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// A Section can appear within another Section but must not cross Section
|
LJCComments.SetComment isContinue:
| A Section can appear within another Section but must not cross Section
|
LJCComments.SetComment line:
|/// borders. The active Replacements will be for the current Item and the
|
LJCComments.SetComment isContinue:
| borders. The active Replacements will be for the current Item and the
|
LJCComments.SetComment line:
|/// parent tree current Items. That is for all current Items in which the
|
LJCComments.SetComment isContinue:
| parent tree current Items. That is for all current Items in which the
|
LJCComments.SetComment line:
|/// current section is enclosed.
|
LJCComments.SetComment isContinue:
| current section is enclosed.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCSection|
LJCComments.SetComment line:
|		/// <summary>Initializes an object instance.</summary>
|
LJCComments.SetComment comment:
|Initializes an object instance.|
LJCComments.SetComment line:
|		/// <param name="$name">The Section name.</param>.
|
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>Creates a copy of the current object.</summary>
|
LJCComments.SetComment comment:
|Creates a copy of the current object.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>The Section begin stream offset.</summary>
|
LJCComments.SetComment comment:
|The Section begin stream offset.|
PropertyName:
|$Begin|
LJCComments.SetComment line:
|		/// <summary>The Current Item object.</summary>
|
LJCComments.SetComment comment:
|The Current Item object.|
PropertyName:
|$CurrentItem|
LJCComments.SetComment line:
|		/// <summary>The Section Items.</summary>
|
LJCComments.SetComment comment:
|The Section Items.|
PropertyName:
|$Items|
LJCComments.SetComment line:
|		/// <summary>The Section name.</summary>
|
LJCComments.SetComment comment:
|The Section name.|
PropertyName:
|$Name|
LJCComments.SetComment line:
|	/// <include path='items/LJCSections/*' file='Doc/LJCSections.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Represents a collection of Section objects.</summary>|
LJCComments.SetComment comment:
|Represents a collection of Section objects.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The LJCSections is the top level class for the GenData object tree.
|
LJCComments.SetComment isContinue:
| The LJCSections is the top level class for the GenData object tree.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// GenData is the XML data format for the data that is merged with a text
|
LJCComments.SetComment isContinue:
| GenData is the XML data format for the data that is merged with a text
|
LJCComments.SetComment line:
|/// template file  to generate a customized output file.
|
LJCComments.SetComment isContinue:
| template file  to generate a customized output file.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;pre&gt;
|
LJCComments.SetComment isContinue:
| &lt;pre&gt;
|
LJCComments.SetComment line:
|///   LJCSections&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|   LJCSections&lt;br /&gt;
|
LJCComments.SetComment line:
|///     LJCSection&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|     LJCSection&lt;br /&gt;
|
LJCComments.SetComment line:
|///       LJCItems&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       LJCItems&lt;br /&gt;
|
LJCComments.SetComment line:
|///         LJCItem&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|         LJCItem&lt;br /&gt;
|
LJCComments.SetComment line:
|///           LJCReplacements&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           LJCReplacements&lt;br /&gt;
|
LJCComments.SetComment line:
|///             LJCReplacement
|
LJCComments.SetComment isContinue:
|             LJCReplacement
|
LJCComments.SetComment line:
|/// &lt;/pre&gt;
|
LJCComments.SetComment isContinue:
| &lt;/pre&gt;
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCSections|
LJCComments.SetComment line:
|		/// <include path='items/CreateColumnData/*' file='Doc/LJCSections.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the data from a table definition.</summary>|
LJCComments.SetComment comment:
|Creates the data from a table definition.|
LJCComments.SetComment line:
|///     <param name="$dbColumns">The table columns definition.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$tableName">The Table name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$className">The Class name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The sections array.</returns>|
LJCComments.SetComment comment:
|The sections array.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCDBAccessLib.php";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment isContinue:
|$dbAccess = new LJCDbAccess($connectionValues);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$tableName = "TableName";|
LJCComments.SetComment isContinue:
|$tableName = "TableName";|
LJCComments.SetComment line:
|///$dbColumns = $dbAccess->LoadTableSchema($database, $tableName);|
LJCComments.SetComment isContinue:
|$dbColumns = $dbAccess->LoadTableSchema($database, $tableName);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $sections is an LJCSections object.|
LJCComments.SetComment isContinue:
|// $sections is an LJCSections object.|
LJCComments.SetComment line:
|///$sections = LJCSections::CreateColumnData($dbColumns, $tableName|
LJCComments.SetComment isContinue:
|$sections = LJCSections::CreateColumnData($dbColumns, $tableName|
LJCComments.SetComment line:
|/// , "ClassName");|
LJCComments.SetComment isContinue:
| , "ClassName");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|CreateColumnData|
LJCComments.SetComment line:
|		/// <include path='items/AddReplacement/*' file='Doc/LJCSections.xml'/>
|
LJCComments.SetComment line:
|/// <summary> Adds a Replacement to an Item.</summary>|
LJCComments.SetComment comment:
| Adds a Replacement to an Item.|
LJCComments.SetComment line:
|///     <param name="$item">The Item object.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$name">The Replacement name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$value">The Replacement value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$sections = new LJCSections();|
LJCComments.SetComment isContinue:
|$sections = new LJCSections();|
LJCComments.SetComment line:
|///$section = new LJCSection("SectionName");|
LJCComments.SetComment isContinue:
|$section = new LJCSection("SectionName");|
LJCComments.SetComment line:
|///$sections->Add($section, $section->Name);|
LJCComments.SetComment isContinue:
|$sections->Add($section, $section->Name);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$item = new LJCItem("ItemName");|
LJCComments.SetComment isContinue:
|$item = new LJCItem("ItemName");|
LJCComments.SetComment line:
|///$section->Items[] = $item;|
LJCComments.SetComment isContinue:
|$section->Items[] = $item;|
LJCComments.SetComment line:
|///$sections::AddReplacement($item, "_ClassName_", "ClassName");|
LJCComments.SetComment isContinue:
|$sections::AddReplacement($item, "_ClassName_", "ClassName");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|AddReplacement|
LJCComments.SetComment line:
|		/// <include path='items/Deserialize/*' file='Doc/LJCSections.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Deserializes the data from a Sections XML file.</summary>|
LJCComments.SetComment comment:
|Deserializes the data from a Sections XML file.|
LJCComments.SetComment line:
|///     <param name="$xmlFileSpec">The source XML file specification.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Sections object.</returns>|
LJCComments.SetComment comment:
|The Sections object.|
LJCComments.SetComment line:
|/// <code>&amp;lt;Data xmlns:xsd='http://www.w3.org/2001/XMLSchema'|
LJCComments.SetComment comment:
|&amp;lt;Data xmlns:xsd='http://www.w3.org/2001/XMLSchema'|
LJCComments.SetComment line:
|/// xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'&amp;gt;|
LJCComments.SetComment isContinue:
| xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'&amp;gt;|
LJCComments.SetComment line:
|///  &amp;lt;Sections&amp;gt;|
LJCComments.SetComment isContinue:
|  &amp;lt;Sections&amp;gt;|
LJCComments.SetComment line:
|///    &amp;lt;Section&amp;gt;|
LJCComments.SetComment isContinue:
|    &amp;lt;Section&amp;gt;|
LJCComments.SetComment line:
|///      &amp;lt;Begin/&amp;gt;|
LJCComments.SetComment isContinue:
|      &amp;lt;Begin/&amp;gt;|
LJCComments.SetComment line:
|///      &amp;lt;Name&amp;gt;Main&amp;lt;/Name&amp;gt;|
LJCComments.SetComment isContinue:
|      &amp;lt;Name&amp;gt;Main&amp;lt;/Name&amp;gt;|
LJCComments.SetComment line:
|///      &amp;lt;Items&amp;gt;|
LJCComments.SetComment isContinue:
|      &amp;lt;Items&amp;gt;|
LJCComments.SetComment line:
|///        &amp;lt;Item&amp;gt;|
LJCComments.SetComment isContinue:
|        &amp;lt;Item&amp;gt;|
LJCComments.SetComment line:
|///          &amp;lt;Replacements&amp;gt;|
LJCComments.SetComment isContinue:
|          &amp;lt;Replacements&amp;gt;|
LJCComments.SetComment line:
|///            &amp;lt;Replacement&amp;gt;|
LJCComments.SetComment isContinue:
|            &amp;lt;Replacement&amp;gt;|
LJCComments.SetComment line:
|///              &amp;lt;Name&amp;gt;_FileSummary_&amp;lt;/Name&amp;gt;|
LJCComments.SetComment isContinue:
|              &amp;lt;Name&amp;gt;_FileSummary_&amp;lt;/Name&amp;gt;|
LJCComments.SetComment line:
|///              &amp;lt;Value&amp;gt;This is the file summary text.&amp;lt;/Value&amp;gt;|
LJCComments.SetComment isContinue:
|              &amp;lt;Value&amp;gt;This is the file summary text.&amp;lt;/Value&amp;gt;|
LJCComments.SetComment line:
|///            &amp;lt;/Replacement&amp;gt;|
LJCComments.SetComment isContinue:
|            &amp;lt;/Replacement&amp;gt;|
LJCComments.SetComment line:
|///            &amp;lt;Replacement&amp;gt;|
LJCComments.SetComment isContinue:
|            &amp;lt;Replacement&amp;gt;|
LJCComments.SetComment line:
|///              &amp;lt;Name&amp;gt;_FileName_&amp;lt;/Name&amp;gt;|
LJCComments.SetComment isContinue:
|              &amp;lt;Name&amp;gt;_FileName_&amp;lt;/Name&amp;gt;|
LJCComments.SetComment line:
|///              &amp;lt;Value&amp;gt;LJCLib&amp;lt;/Value&amp;gt;|
LJCComments.SetComment isContinue:
|              &amp;lt;Value&amp;gt;LJCLib&amp;lt;/Value&amp;gt;|
LJCComments.SetComment line:
|///            &amp;lt;/Replacement&amp;gt;|
LJCComments.SetComment isContinue:
|            &amp;lt;/Replacement&amp;gt;|
LJCComments.SetComment line:
|///          &amp;lt;/Replacements&amp;gt;|
LJCComments.SetComment isContinue:
|          &amp;lt;/Replacements&amp;gt;|
LJCComments.SetComment line:
|///        &amp;lt;/Item&amp;gt;|
LJCComments.SetComment isContinue:
|        &amp;lt;/Item&amp;gt;|
LJCComments.SetComment line:
|///      &amp;lt;/Items&amp;gt;|
LJCComments.SetComment isContinue:
|      &amp;lt;/Items&amp;gt;|
LJCComments.SetComment line:
|///    &amp;lt;/Section&amp;gt;|
LJCComments.SetComment isContinue:
|    &amp;lt;/Section&amp;gt;|
LJCComments.SetComment line:
|///  &amp;lt;/Sections&amp;gt;|
LJCComments.SetComment isContinue:
|  &amp;lt;/Sections&amp;gt;|
LJCComments.SetComment line:
|///&amp;lt;/Data&amp;gt;|
LJCComments.SetComment isContinue:
|&amp;lt;/Data&amp;gt;|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment isContinue:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///// $sections is an LJCSections object.|
LJCComments.SetComment isContinue:
|// $sections is an LJCSections object.|
LJCComments.SetComment line:
|///$sections = LJCSections::Deserialize("Sections.xml");|
LJCComments.SetComment isContinue:
|$sections = LJCSections::Deserialize("Sections.xml");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Deserialize|
LJCComments.SetComment line:
|		/// <include path='items/DeserializeString/*' file='Doc/LJCSections.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Deserializes the data from a Sections XML string.</summary>|
LJCComments.SetComment comment:
|Deserializes the data from a Sections XML string.|
LJCComments.SetComment line:
|///     <param name="$xmlString">The XMLDoc node.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Sections object.</returns>|
LJCComments.SetComment comment:
|The Sections object.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$sections = LJCSections::DeserializeString($xmlstring);|
LJCComments.SetComment isContinue:
|$sections = LJCSections::DeserializeString($xmlstring);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|DeserializeString|
LJCComments.SetComment line:
|		/// <include path='items/CreateSections/*' file='Doc/LJCSections.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the Section data from an XMLDoc node.</summary>|
LJCComments.SetComment comment:
|Creates the Section data from an XMLDoc node.|
LJCComments.SetComment line:
|///     <param name="$xmlElement">The root Element.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The sections array.</returns>|
LJCComments.SetComment comment:
|The sections array.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$xmlElement = simplexml_load_file("Sections.xml");|
LJCComments.SetComment isContinue:
|$xmlElement = simplexml_load_file("Sections.xml");|
LJCComments.SetComment line:
|///$sections = LJCSections::CreateSections($xmlElement);|
LJCComments.SetComment isContinue:
|$sections = LJCSections::CreateSections($xmlElement);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|CreateSections|
LJCComments.SetComment line:
|		/// <include path='items/Serialize/*' file='Doc/LJCSections.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Serializes the data to an XML file.</summary>|
LJCComments.SetComment comment:
|Serializes the data to an XML file.|
LJCComments.SetComment line:
|///     <param name="$xmlFile">The target XML file.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$sections">The sections array.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$rootName">The XML root name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///LJCSections::Serialize("Sections.xml", $sections);|
LJCComments.SetComment isContinue:
|LJCSections::Serialize("Sections.xml", $sections);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Serialize|
LJCComments.SetComment line:
|		/// <include path='items/Add/*' file='Doc/LJCSections.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Adds an object and key value.</summary>|
LJCComments.SetComment comment:
|Adds an object and key value.|
LJCComments.SetComment line:
|///     <param name="$item">The object to be added to the collection.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The added item.</returns>|
LJCComments.SetComment comment:
|The added item.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$sections = new LJCSections();|
LJCComments.SetComment isContinue:
|$sections = new LJCSections();|
LJCComments.SetComment line:
|///$section = new LJCSection("SectionName");|
LJCComments.SetComment isContinue:
|$section = new LJCSection("SectionName");|
LJCComments.SetComment line:
|///$sections->Add($section, $section->Name);|
LJCComments.SetComment isContinue:
|$sections->Add($section, $section->Name);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Add|
LJCComments.SetComment line:
|		/// <summary>Creates an object clone.</summary>
|
LJCComments.SetComment comment:
|Creates an object clone.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <include path='items/Get/*' file='Doc/LJCSections.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the item by Key value.</summary>|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The object with the matching key value.</returns>|
LJCComments.SetComment comment:
|The object with the matching key value.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$sections = new LJCSections();|
LJCComments.SetComment isContinue:
|$sections = new LJCSections();|
LJCComments.SetComment line:
|///$section = new LJCSection("SectionName");|
LJCComments.SetComment isContinue:
|$section = new LJCSection("SectionName");|
LJCComments.SetComment line:
|///$sections->Add($section, $section->Name);|
LJCComments.SetComment isContinue:
|$sections->Add($section, $section->Name);|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$section = LJCSections->Get("SectionName");|
LJCComments.SetComment isContinue:
|$section = LJCSections->Get("SectionName");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Get|
LJCComments.SetComment line:
|		/// <summary>Gets an indexed array of keys.</summary>
|
LJCComments.SetComment comment:
|Gets an indexed array of keys.|
LJCComments.SetComment line:
|		/// <returns>The indexed keys array.</returns>
|
LJCComments.SetComment comment:
|The indexed keys array.|
FunctionName:
|GetKeys|
LJCComments.SetComment line:
|		/// <summary>Gets an indexed array of objects.</summary>
|
LJCComments.SetComment comment:
|Gets an indexed array of objects.|
LJCComments.SetComment line:
|		/// <returns>The indexed values array.</returns>
|
LJCComments.SetComment comment:
|The indexed values array.|
FunctionName:
|GetValues|
LJCComments.SetComment line:
|		/// <include path='items/HasKey/*' file='Doc/LJCSections.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Indicates if a key already exists.</summary>|
LJCComments.SetComment comment:
|Indicates if a key already exists.|
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>True if the key already exists, otherwise false.</returns>|
LJCComments.SetComment comment:
|True if the key already exists, otherwise false.|
LJCComments.SetComment line:
|/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment comment:
|$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";|
LJCComments.SetComment line:
|///require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment isContinue:
|require_once "$webCommonPath/LJCGenTextSectionLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|///$sections = new LJCSections();|
LJCComments.SetComment isContinue:
|$sections = new LJCSections();|
LJCComments.SetComment line:
|///$key = "SectionName";|
LJCComments.SetComment isContinue:
|$key = "SectionName";|
LJCComments.SetComment line:
|///if ($sections->HasKey($key))|
LJCComments.SetComment isContinue:
|if ($sections->HasKey($key))|
LJCComments.SetComment line:
|///{|
LJCComments.SetComment isContinue:
|{|
LJCComments.SetComment line:
|///  throw new Exception("Key: {$key} already in use.");|
LJCComments.SetComment isContinue:
|  throw new Exception("Key: {$key} already in use.");|
LJCComments.SetComment line:
|///}|
LJCComments.SetComment isContinue:
|}|
LJCComments.SetComment line:
|///else|
LJCComments.SetComment isContinue:
|else|
LJCComments.SetComment line:
|///{|
LJCComments.SetComment isContinue:
|{|
LJCComments.SetComment line:
|///  $section = new LJCSection($key);|
LJCComments.SetComment isContinue:
|  $section = new LJCSection($key);|
LJCComments.SetComment line:
|///}|
LJCComments.SetComment isContinue:
|}|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|HasKey|
LJCComments.SetComment line:
|		/// <summary>Remove the item by Key value.</summary>
|
LJCComments.SetComment comment:
|Remove the item by Key value.|
LJCComments.SetComment line:
|		/// <param name="$key">The element key.</param>
|
LJCComments.SetComment comment:
||
FunctionName:
|Remove|
LJCComments.SetComment line:
|		/// <summary>Allows foreach()</summary>
|
LJCComments.SetComment comment:
|Allows foreach()|
FunctionName:
|getIterator|
LJCComments.SetComment line:
|		/// <summary>Allows Count(object).</summary>
|
LJCComments.SetComment comment:
|Allows Count(object).|
FunctionName:
|count|
LJCComments.SetComment line:
|	/// <summary>Represents a Section Item.</summary>
|
LJCComments.SetComment comment:
|Represents a Section Item.|
ClassName:
|LJCItem|
LJCComments.SetComment line:
|		/// <summary>Initializes an object instance.</summary>
|
LJCComments.SetComment comment:
|Initializes an object instance.|
LJCComments.SetComment line:
|		/// <param name="$name">The Item name.</param>
|
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>Creates a copy of the current object.</summary>
|
LJCComments.SetComment comment:
|Creates a copy of the current object.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>The Item name.</summary>
|
LJCComments.SetComment comment:
|The Item name.|
PropertyName:
|$Name|
LJCComments.SetComment line:
|		/// <summary>The Item replacements.</summary>
|
LJCComments.SetComment comment:
|The Item replacements.|
PropertyName:
|$Replacements|
LJCComments.SetComment line:
|		/// <summary>The XML Root Name value.</summary>
|
LJCComments.SetComment comment:
|The XML Root Name value.|
PropertyName:
|$RootNam|
LJCComments.SetComment line:
|	/// <summary>Represents Item Replacements.</summary>
|
LJCComments.SetComment comment:
|Represents Item Replacements.|
ClassName:
|LJCReplacement|
LJCComments.SetComment line:
|		/// <param name="$name">The Replacement name.</param>
|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|		/// <param name="$value">The Replacement value.</param>
|
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>Creates a copy of the current object.</summary>
|
LJCComments.SetComment comment:
|Creates a copy of the current object.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>The Replacement name.</summary>
|
LJCComments.SetComment comment:
|The Replacement name.|
PropertyName:
|$Name|
LJCComments.SetComment line:
|		/// <summary>The Replacement value.</summary>
|
LJCComments.SetComment comment:
|The Replacement value.|
PropertyName:
|$Value|
LJCComments.SetComment line:
|		/// <summary>The XML Root Name value.</summary>
|
LJCComments.SetComment comment:
|The XML Root Name value.|
PropertyName:
|$RootNam|
LJCComments.SetComment line:
|	/// <include path='items/LJCCommentsLib/*' file='Doc/LJCCommentsLib.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains Classes to parse code XML comments.
|
LJCComments.SetComment isContinue:
| Contains Classes to parse code XML comments.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Holds the XML Comments for the next generation point. A generation point
|
LJCComments.SetComment isContinue:
| Holds the XML Comments for the next generation point. A generation point
|
LJCComments.SetComment line:
|/// is the start of a File, Class, Method or Property.
|
LJCComments.SetComment isContinue:
| is the start of a File, Class, Method or Property.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|	/// <include path='items/LJCComments/*' file='Doc/LJCComments.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Provides methods to parse code XML comment values.</summary>|
LJCComments.SetComment comment:
|Provides methods to parse code XML comment values.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Parses the code XML comments and holds them until the next generation
|
LJCComments.SetComment isContinue:
| Parses the code XML comments and holds them until the next generation
|
LJCComments.SetComment line:
|/// point. A generation point is the start of a File, Class, Method or
|
LJCComments.SetComment isContinue:
| point. A generation point is the start of a File, Class, Method or
|
LJCComments.SetComment line:
|/// Property.
|
LJCComments.SetComment isContinue:
| Property.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCComments|
LJCComments.SetComment line:
|		/// <summary>Initializes an object instance.</summary>
|
LJCComments.SetComment comment:
|Initializes an object instance.|
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>Clears the XML comments.</summary>
|
LJCComments.SetComment comment:
|Clears the XML comments.|
FunctionName:
|ClearComments|
LJCComments.SetComment line:
|		/// <include path='items/SetComment/*' file='Doc/LJCComments.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Sets the XML comment value.</summary>|
LJCComments.SetComment comment:
|Sets the XML comment value.|
LJCComments.SetComment line:
|///     <param name="$line">The code line.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$codeFileSpec">The code file spec.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// require_once "LJCCommentsLib.php";|
LJCComments.SetComment isContinue:
| require_once "LJCCommentsLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $line = "/// &amp;lt;summary&amp;gt;A summary comment.&amp;lt;/summary&amp;gt;";|
LJCComments.SetComment isContinue:
| $line = "/// &amp;lt;summary&amp;gt;A summary comment.&amp;lt;/summary&amp;gt;";|
LJCComments.SetComment line:
|/// $comments = new LJCComments();|
LJCComments.SetComment isContinue:
| $comments = new LJCComments();|
LJCComments.SetComment line:
|/// $comments->SetComment($line, "SourceFile.php");|
LJCComments.SetComment isContinue:
| $comments->SetComment($line, "SourceFile.php");|
LJCComments.SetComment line:
|/// $summary = $comments->Summary;|
LJCComments.SetComment isContinue:
| $summary = $comments->Summary;|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|SetComment|
LJCComments.SetComment line:
|		/// <summary>The example Code.</summary>
|
LJCComments.SetComment comment:
|The example Code.|
PropertyName:
|$Code|
LJCComments.SetComment line:
|		/// <summary>The current tag name.</summary>
|
LJCComments.SetComment comment:
|The current tag name.|
PropertyName:
|$CurrentTagName|
LJCComments.SetComment line:
|		/// <summary>The Param comments.</summary>
|
LJCComments.SetComment comment:
|The Param comments.|
PropertyName:
|$Params|
LJCComments.SetComment line:
|		/// <summary>The Remark comment.</summary>
|
LJCComments.SetComment comment:
|The Remark comment.|
PropertyName:
|$Remarks|
LJCComments.SetComment line:
|		/// <summary>The Returns comment.</summary>
|
LJCComments.SetComment comment:
|The Returns comment.|
PropertyName:
|$Returns|
LJCComments.SetComment line:
|		/// <summary>The Summary comment.</summary>
|
LJCComments.SetComment comment:
|The Summary comment.|
PropertyName:
|$Summary|
LJCComments.SetComment line:
|		/// <summary>The Code File base (Library) name.</summary>
|
LJCComments.SetComment comment:
|The Code File base (Library) name.|
PropertyName:
|$LibName|
LJCComments.SetComment line:
|	/// <include path='items/LJCDocDataGenLib/*' file='Doc/LJCDocDataGenLib.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains Classes to create DocData from a PHP source file.
|
LJCComments.SetComment isContinue:
| Contains Classes to create DocData from a PHP source file.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains classes for these functions:&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| Contains classes for these functions:&lt;br /&gt;
|
LJCComments.SetComment line:
|/// - Extract XML Comments from a PHP File&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| - Extract XML Comments from a PHP File&lt;br /&gt;
|
LJCComments.SetComment line:
|/// - Extract XML Comments from Include XML files
|
LJCComments.SetComment isContinue:
| - Extract XML Comments from Include XML files
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|	/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|	///		Provides methods to generate DocData XML files from a code file.
|
LJCComments.SetComment isContinue:
|		Provides methods to generate DocData XML files from a code file.
|
LJCComments.SetComment line:
|	/// </summary>
|
LJCComments.SetComment isContinue:
||
ClassName:
|LJCDocDataGen|
LJCComments.SetComment line:
|		/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|		///		Initializes a class instance.
|
LJCComments.SetComment isContinue:
|		Initializes a class instance.
|
LJCComments.SetComment line:
|		///		And More.
|
LJCComments.SetComment isContinue:
|		And More.
|
LJCComments.SetComment line:
|		/// </summary>
|
LJCComments.SetComment isContinue:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/CreateDocXMLString/*' file='Doc/LJCDocDataGen.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates and optionally writes the DocData XML.</summary>|
LJCComments.SetComment comment:
|Creates and optionally writes the DocData XML.|
LJCComments.SetComment line:
|///     <param name="$codeFileSpec">The code file specification.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$writeXML">Indicates if the XML file is to be written.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$outputPath">The output path.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The DocData XML string.</returns>|
LJCComments.SetComment comment:
|The DocData XML string.|
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// require_once "LJCDocDataGenLib.php";|
LJCComments.SetComment isContinue:
| require_once "LJCDocDataGenLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $docDataGen = new LJCDocDataGen();|
LJCComments.SetComment isContinue:
| $docDataGen = new LJCDocDataGen();|
LJCComments.SetComment line:
|/// $xmlString = $docDataGen->CreateDocXMLString("SourceFile.php");|
LJCComments.SetComment isContinue:
| $xmlString = $docDataGen->CreateDocXMLString("SourceFile.php");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|CreateDocDataXMLString|
LJCComments.SetComment line:
|		/// <include path='items/ProcessCode/*' file='Doc/LJCDocDataGen.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Generates the Doc data for the file.</summary>|
LJCComments.SetComment comment:
|Generates the Doc data for the file.|
LJCComments.SetComment line:
|///     <param name="$codeFileSpec">The code file spec.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The DocData XML string.</returns>|
LJCComments.SetComment comment:
|The DocData XML string.|
LJCComments.SetComment comment:
||
FunctionName:
|ProcessCode|
LJCComments.SetComment line:
|	/// <include path='items/LJCDocDataLib/*' file='Doc/LJCDocDataLib.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains classes to represent and generate DocData XML.
|
LJCComments.SetComment isContinue:
| Contains classes to represent and generate DocData XML.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// DocData XML data is generated from the PHP source files.
|
LJCComments.SetComment isContinue:
| DocData XML data is generated from the PHP source files.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// Contains classes for these functions:&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| Contains classes for these functions:&lt;br /&gt;
|
LJCComments.SetComment line:
|/// - Represent a DocData Object Tree&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| - Represent a DocData Object Tree&lt;br /&gt;
|
LJCComments.SetComment line:
|/// - Serialize and Deserialize DocData XML
|
LJCComments.SetComment isContinue:
| - Serialize and Deserialize DocData XML
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;pre&gt;DocData Object Graph:&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;pre&gt;DocData Object Graph:&lt;br /&gt;
|
LJCComments.SetComment line:
|/// LJCDocDataFile&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| LJCDocDataFile&lt;br /&gt;
|
LJCComments.SetComment line:
|///   Classes - LJCDocDataClasses&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|   Classes - LJCDocDataClasses&lt;br /&gt;
|
LJCComments.SetComment line:
|///     LJCDocDataClass&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|     LJCDocDataClass&lt;br /&gt;
|
LJCComments.SetComment line:
|///       Methods - LJCDocDataMethods&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       Methods - LJCDocDataMethods&lt;br /&gt;
|
LJCComments.SetComment line:
|///         LJCDocDataMethod&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|         LJCDocDataMethod&lt;br /&gt;
|
LJCComments.SetComment line:
|///           Params - LJCDocDataParams&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           Params - LJCDocDataParams&lt;br /&gt;
|
LJCComments.SetComment line:
|///             LJCDocDataParam&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|             LJCDocDataParam&lt;br /&gt;
|
LJCComments.SetComment line:
|///       Properties - LJCDocDataProperties&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       Properties - LJCDocDataProperties&lt;br /&gt;
|
LJCComments.SetComment line:
|///         LJCDocDataProperty&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|         LJCDocDataProperty&lt;br /&gt;
|
LJCComments.SetComment line:
|///   Functions - LJCDocDataMethods&lt;/pre&gt;
|
LJCComments.SetComment isContinue:
|   Functions - LJCDocDataMethods&lt;/pre&gt;
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|	/// <summary>Represents a DocData Class.</summary>
|
LJCComments.SetComment comment:
|Represents a DocData Class.|
ClassName:
|LJCDocDataClass|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCDocDataClass.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes a class instance.</summary>|
LJCComments.SetComment comment:
|Initializes a class instance.|
LJCComments.SetComment line:
|///     <param name="$name">The Name value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$summary">The Summary value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/Clone/*' file='Doc/LJCDocDataClass.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates a Clone of the current object.</summary>|
LJCComments.SetComment comment:
|Creates a Clone of the current object.|
LJCComments.SetComment line:
|/// <returns>The cloned object.</returns>|
LJCComments.SetComment comment:
|The cloned object.|
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// require_once "LJCDocDataLib.php";|
LJCComments.SetComment isContinue:
| require_once "LJCDocDataLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $docDataClass = new LJCDocDataClass("ClassName", "Summary Text");|
LJCComments.SetComment isContinue:
| $docDataClass = new LJCDocDataClass("ClassName", "Summary Text");|
LJCComments.SetComment line:
|/// $newDocDataClass = $docDataClass->Clone();|
LJCComments.SetComment isContinue:
| $newDocDataClass = $docDataClass->Clone();|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>The Code value.</summary>
|
LJCComments.SetComment comment:
|The Code value.|
PropertyName:
|$Code|
LJCComments.SetComment line:
|		/// <summary>The Method array.</summary>
|
LJCComments.SetComment comment:
|The Method array.|
PropertyName:
|$Methods|
LJCComments.SetComment line:
|		/// <summary>The Name value.</summary>
|
LJCComments.SetComment comment:
|The Name value.|
PropertyName:
|$Name|
LJCComments.SetComment line:
|		/// <summary>The Property array.</summary>
|
LJCComments.SetComment comment:
|The Property array.|
PropertyName:
|$Properties|
LJCComments.SetComment line:
|		/// <summary>The Remarks value.</summary>
|
LJCComments.SetComment comment:
|The Remarks value.|
PropertyName:
|$Remarks|
LJCComments.SetComment line:
|		/// <summary>The Summary value.</summary>
|
LJCComments.SetComment comment:
|The Summary value.|
PropertyName:
|$Summary|
LJCComments.SetComment line:
|	/// <summary>Represents a collection of objects.</summary>
|
LJCComments.SetComment comment:
|Represents a collection of objects.|
ClassName:
|LJCDocDataClasses|
LJCComments.SetComment line:
|		/// <include path='items/AddObject/*' file='../../CommonDoc/PHPCollection.xml'/>
|
LJCComments.SetComment comment:
||
FunctionName:
|AddObject|
LJCComments.SetComment line:
|		/// <summary>Creates an object clone.</summary>
|
LJCComments.SetComment comment:
|Creates an object clone.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <include path='items/Get/*' file='../../CommonDoc/PHPCollection.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the item by Key value.</summary>|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The object with the matching key value.</returns>|
LJCComments.SetComment comment:
|The object with the matching key value.|
LJCComments.SetComment comment:
||
FunctionName:
|Get|
LJCComments.SetComment line:
|	/// <include path='items/LJCDocDataFile/*' file='Doc/LJCDocDataFile.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Represents DocData Lib File XML Comments.
|
LJCComments.SetComment isContinue:
| Represents DocData Lib File XML Comments.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The DocData XML is intended to contain the XML Comments based on the PHP
|
LJCComments.SetComment isContinue:
| The DocData XML is intended to contain the XML Comments based on the PHP
|
LJCComments.SetComment line:
|/// file structure of Classes, Methods and Properties.
|
LJCComments.SetComment isContinue:
| file structure of Classes, Methods and Properties.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;pre&gt; &amp;lt;LJCDocDataFile&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;pre&gt; &amp;lt;LJCDocDataFile&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///   &amp;lt;Name/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|   &amp;lt;Name/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///   &amp;lt;Summary/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|   &amp;lt;Summary/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///   &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|   &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///   &amp;lt;Classes&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|   &amp;lt;Classes&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///     &amp;lt;Class&gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|     &amp;lt;Class&gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;Name/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;Name/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;Summary/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;Summary/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;Methods&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;Methods&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///         &amp;lt;Method&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|         &amp;lt;Method&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Name/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Name/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Summary/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Summary/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Params&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Params&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///             &amp;lt;Param&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|             &amp;lt;Param&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///               &amp;lt;Name/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|               &amp;lt;Name/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///               &amp;lt;Summary/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|               &amp;lt;Summary/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///             &amp;lt;/Param&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|             &amp;lt;/Param&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;/Params&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;/Params&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Returns/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Returns/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Syntax/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Syntax/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Code/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Code/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///         &amp;lt;/Method&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|         &amp;lt;/Method&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;/Methods&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;/Methods&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;Properties&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;Properties&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///         &amp;lt;Property&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|         &amp;lt;Property&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Name/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Name/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Summary/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Summary/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Syntax/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Syntax/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///         &amp;lt;/Property&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|         &amp;lt;/Property&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;/Properties&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;/Properties&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///     &amp;lt;/Class&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|     &amp;lt;/Class&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///   &amp;lt;/Classes&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|   &amp;lt;/Classes&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|/// &amp;lt;/LJCDocDataFile&amp;gt;&lt;/pre&gt;
|
LJCComments.SetComment isContinue:
| &amp;lt;/LJCDocDataFile&amp;gt;&lt;/pre&gt;
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCDocDataFile|
LJCComments.SetComment line:
|		/// <include path='items/Deserialize/*' file='Doc/LJCDocDataFile.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Deserializes the data from an LJCDocDataFile XML file.</summary>|
LJCComments.SetComment comment:
|Deserializes the data from an LJCDocDataFile XML file.|
LJCComments.SetComment line:
|///     <param name="$xmlFileSpec">The source XML file specification.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The LJCDocDataFile object.</returns>|
LJCComments.SetComment comment:
|The LJCDocDataFile object.|
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// require_once "LJCDocDataLib.php";|
LJCComments.SetComment isContinue:
| require_once "LJCDocDataLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");|
LJCComments.SetComment isContinue:
| $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Deserialize|
LJCComments.SetComment line:
|		/// <include path='items/DeserializeString/*' file='Doc/LJCDocDataFile.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Deserializes the data from an LJCDocDataFile XML string.</summary>|
LJCComments.SetComment comment:
|Deserializes the data from an LJCDocDataFile XML string.|
LJCComments.SetComment line:
|///     <param name="$xmlString">The XML string.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The LJCDocDataFile object.</returns>|
LJCComments.SetComment comment:
|The LJCDocDataFile object.|
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// require_once "LJCDocDataLib.php";|
LJCComments.SetComment isContinue:
| require_once "LJCDocDataLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $xmlString = readfile("DocData.xml");|
LJCComments.SetComment isContinue:
| $xmlString = readfile("DocData.xml");|
LJCComments.SetComment line:
|/// $docDataFile = LJCDocDataFile::DeserializeString($xmlString);|
LJCComments.SetComment isContinue:
| $docDataFile = LJCDocDataFile::DeserializeString($xmlString);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|DeserializeString|
LJCComments.SetComment line:
|		/// <include path='items/GetProperties/*' file='Doc/LJCDocDataFile.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Deserialize Properties from the Class node.</summary>|
LJCComments.SetComment comment:
|Deserialize Properties from the Class node.|
LJCComments.SetComment line:
|///     <param name="$classNode"></param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The LJCDocDataProperties object.</returns>|
LJCComments.SetComment comment:
|The LJCDocDataProperties object.|
LJCComments.SetComment comment:
||
FunctionName:
|GetProperties|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCDocDataFile.xml'/>
|
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/Clone/*' file='../../CommonDoc/PHPDataClass.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates a Clone of the current object.</summary>|
LJCComments.SetComment comment:
|Creates a Clone of the current object.|
LJCComments.SetComment line:
|/// <returns>The cloned object.</returns>|
LJCComments.SetComment comment:
|The cloned object.|
LJCComments.SetComment comment:
||
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <include path='items/Serialize/*' file='Doc/LJCDocDataFile.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Writes the serialized XML.</summary>|
LJCComments.SetComment comment:
|Writes the serialized XML.|
LJCComments.SetComment line:
|///     <param name="$xmlFileSpec">The source XML file specification.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// require_once "LJCDocDataLib.php";|
LJCComments.SetComment isContinue:
| require_once "LJCDocDataLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");|
LJCComments.SetComment isContinue:
| $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");|
LJCComments.SetComment line:
|/// $docDataFile->Serialize("NewDocData.xml");|
LJCComments.SetComment isContinue:
| $docDataFile->Serialize("NewDocData.xml");|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|Serialize|
LJCComments.SetComment line:
|		/// <include path='items/SerializeToString/*' file='Doc/LJCDocDataFile.xml'/>
|
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// require_once "LJCDocDataLib.php";|
LJCComments.SetComment isContinue:
| require_once "LJCDocDataLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");|
LJCComments.SetComment isContinue:
| $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");|
LJCComments.SetComment line:
|/// $xmlString = $docDataFile->SerializeToString();|
LJCComments.SetComment isContinue:
| $xmlString = $docDataFile->SerializeToString();|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|SerializeToString|
LJCComments.SetComment line:
|		/// <summary>The Class collection.</summary>
|
LJCComments.SetComment comment:
|The Class collection.|
PropertyName:
|$Classes|
LJCComments.SetComment line:
|		/// <summary>The Function array.</summary>
|
LJCComments.SetComment comment:
|The Function array.|
PropertyName:
|$Functions|
LJCComments.SetComment line:
|		/// <summary>The Name value.</summary>
|
LJCComments.SetComment comment:
|The Name value.|
PropertyName:
|$Name|
LJCComments.SetComment line:
|		/// <summary>The Name value.</summary>
|
LJCComments.SetComment comment:
|The Name value.|
PropertyName:
|$Remarks|
LJCComments.SetComment line:
|		/// <summary>The Summary value.</summary>
|
LJCComments.SetComment comment:
|The Summary value.|
PropertyName:
|$Summary|
LJCComments.SetComment line:
|	/// <summary>Represents a DocData Function.</summary>
|
LJCComments.SetComment comment:
|Represents a DocData Function.|
ClassName:
|LJCDocDataMethod|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCDocDataMethod.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes a class instance.</summary>|
LJCComments.SetComment comment:
|Initializes a class instance.|
LJCComments.SetComment line:
|///     <param name="$name">The Name value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$summary">The Summary value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$returns">The Returns value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/Clone/*' file='../../CommonDoc/PHPDataClass.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates a Clone of the current object.</summary>|
LJCComments.SetComment comment:
|Creates a Clone of the current object.|
LJCComments.SetComment line:
|/// <returns>The cloned object.</returns>|
LJCComments.SetComment comment:
|The cloned object.|
LJCComments.SetComment comment:
||
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>The Code value.</summary>
|
LJCComments.SetComment comment:
|The Code value.|
PropertyName:
|$Code|
LJCComments.SetComment line:
|		/// <summary>The Name value.</summary>
|
LJCComments.SetComment comment:
|The Name value.|
PropertyName:
|$Name|
LJCComments.SetComment line:
|		/// <summary>The Param array.</summary>
|
LJCComments.SetComment comment:
|The Param array.|
PropertyName:
|$Params|
LJCComments.SetComment line:
|		/// <summary>The Remarks value.</summary>
|
LJCComments.SetComment comment:
|The Remarks value.|
PropertyName:
|$Remarks|
LJCComments.SetComment line:
|		/// <summary>The Returns value.</summary>
|
LJCComments.SetComment comment:
|The Returns value.|
PropertyName:
|$Returns|
LJCComments.SetComment line:
|		/// <summary>The Summary value.</summary>
|
LJCComments.SetComment comment:
|The Summary value.|
PropertyName:
|$Summary|
LJCComments.SetComment line:
|		/// <summary>The Syntax value.</summary>
|
LJCComments.SetComment comment:
|The Syntax value.|
PropertyName:
|$Syntax|
LJCComments.SetComment line:
|	/// <summary>Represents a collection of objects.</summary>
|
LJCComments.SetComment comment:
|Represents a collection of objects.|
ClassName:
|LJCDocDataMethods|
LJCComments.SetComment line:
|		/// <include path='items/AddObject/*' file='../../CommonDoc/PHPCollection.xml'/>
|
LJCComments.SetComment comment:
||
FunctionName:
|AddObject|
LJCComments.SetComment line:
|		/// <summary>Creates an object clone.</summary>
|
LJCComments.SetComment comment:
|Creates an object clone.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <include path='items/Get/*' file='../../CommonDoc/PHPCollection.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the item by Key value.</summary>|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The object with the matching key value.</returns>|
LJCComments.SetComment comment:
|The object with the matching key value.|
LJCComments.SetComment comment:
||
FunctionName:
|Get|
LJCComments.SetComment line:
|	/// <summary>Represents a DocData Parameter.</summary>
|
LJCComments.SetComment comment:
|Represents a DocData Parameter.|
ClassName:
|LJCDocDataParam|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCDocDataClass.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes a class instance.</summary>|
LJCComments.SetComment comment:
|Initializes a class instance.|
LJCComments.SetComment line:
|///     <param name="$name">The Name value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$summary">The Summary value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/Clone/*' file='../../CommonDoc/PHPDataClass.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates a Clone of the current object.</summary>|
LJCComments.SetComment comment:
|Creates a Clone of the current object.|
LJCComments.SetComment line:
|/// <returns>The cloned object.</returns>|
LJCComments.SetComment comment:
|The cloned object.|
LJCComments.SetComment comment:
||
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>The Name value.</summary>
|
LJCComments.SetComment comment:
|The Name value.|
PropertyName:
|$Name|
LJCComments.SetComment line:
|		/// <summary>The Summary value.</summary>
|
LJCComments.SetComment comment:
|The Summary value.|
PropertyName:
|$Summary|
LJCComments.SetComment line:
|	/// <summary>Represents a collection of objects.</summary>
|
LJCComments.SetComment comment:
|Represents a collection of objects.|
ClassName:
|LJCDocDataParams|
LJCComments.SetComment line:
|		/// <include path='items/AddObject/*' file='../../CommonDoc/PHPCollection.xml'/>
|
LJCComments.SetComment comment:
||
FunctionName:
|AddObject|
LJCComments.SetComment line:
|		/// <summary>Creates an object clone.</summary>
|
LJCComments.SetComment comment:
|Creates an object clone.|
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <include path='items/Get/*' file='../../CommonDoc/PHPCollection.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the item by Key value.</summary>|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The object with the matching key value.</returns>|
LJCComments.SetComment comment:
|The object with the matching key value.|
LJCComments.SetComment comment:
||
FunctionName:
|Get|
LJCComments.SetComment line:
|	/// <summary>Represents a DocData Property.</summary>
|
LJCComments.SetComment comment:
|Represents a DocData Property.|
ClassName:
|LJCDocDataProperty|
LJCComments.SetComment line:
|		/// <include path='items/construct/*' file='Doc/LJCDocDataProperty.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Initializes a class instance.</summary>|
LJCComments.SetComment comment:
|Initializes a class instance.|
LJCComments.SetComment line:
|///     <param name="$name">The Name value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$summary">The Summary value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$returns">The Returns value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment comment:
||
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/Clone/*' file='../../CommonDoc/PHPDataClass.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates a Clone of the current object.</summary>|
LJCComments.SetComment comment:
|Creates a Clone of the current object.|
LJCComments.SetComment line:
|/// <returns>The cloned object.</returns>|
LJCComments.SetComment comment:
|The cloned object.|
LJCComments.SetComment comment:
||
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <summary>The Name value.</summary>
|
LJCComments.SetComment comment:
|The Name value.|
PropertyName:
|$Name|
LJCComments.SetComment line:
|		/// <summary>The Remarks value.</summary>
|
LJCComments.SetComment comment:
|The Remarks value.|
PropertyName:
|$Remarks|
LJCComments.SetComment line:
|		/// <summary>The Returns value.</summary>
|
LJCComments.SetComment comment:
|The Returns value.|
PropertyName:
|$Returns|
LJCComments.SetComment line:
|		/// <summary>The Summary value.</summary>
|
LJCComments.SetComment comment:
|The Summary value.|
PropertyName:
|$Summary|
LJCComments.SetComment line:
|		/// <summary>The Syntax value.</summary>
|
LJCComments.SetComment comment:
|The Syntax value.|
PropertyName:
|$Syntax|
LJCComments.SetComment line:
|	/// <summary>Represents a collection of objects.</summary>
|
LJCComments.SetComment comment:
|Represents a collection of objects.|
ClassName:
|LJCDocDataProperties|
LJCComments.SetComment line:
|		/// <include path='items/AddObject/*' file='../../CommonDoc/PHPCollection.xml'/>
|
LJCComments.SetComment comment:
||
FunctionName:
|AddObject|
LJCComments.SetComment line:
|		/// <include path='items/Clone/*' file='../../CommonDoc/PHPCollection.xml'/>
|
LJCComments.SetComment comment:
||
FunctionName:
|Clone|
LJCComments.SetComment line:
|		/// <include path='items/Get/*' file='../../CommonDoc/PHPCollection.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Get the item by Key value.</summary>|
LJCComments.SetComment comment:
|Get the item by Key value.|
LJCComments.SetComment line:
|///     <param name="$key">The element key.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The object with the matching key value.</returns>|
LJCComments.SetComment comment:
|The object with the matching key value.|
LJCComments.SetComment comment:
||
FunctionName:
|Get|
LJCComments.SetComment line:
|	/// <include path='items/LJCIncludeLib/*' file='Doc/LJCIncludeLib.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains Classes to retrieve XML Comments from include XML files.
|
LJCComments.SetComment isContinue:
| Contains Classes to retrieve XML Comments from include XML files.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|	/// <include path='items/LJCInclude/*' file='Doc/LJCInclude.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Handles Include file XML comment values.</summary>|
LJCComments.SetComment comment:
|Handles Include file XML comment values.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Parses the include XML Comments from a referenced Include XML
|
LJCComments.SetComment isContinue:
| Parses the include XML Comments from a referenced Include XML
|
LJCComments.SetComment line:
|/// documentation file.
|
LJCComments.SetComment isContinue:
| documentation file.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// After the  XML Comments are parsed  for that
|
LJCComments.SetComment isContinue:
| After the  XML Comments are parsed  for that
|
LJCComments.SetComment line:
|/// generation point, they are copied to the LJCComments object.
|
LJCComments.SetComment isContinue:
| generation point, they are copied to the LJCComments object.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCInclude|
LJCComments.SetComment line:
|		/// <summary>Initializes an object instance.</summary>
|
LJCComments.SetComment comment:
|Initializes an object instance.|
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/SetComments/*' file='Doc/LJCInclude.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Sets the comments from the specified include file.</summary>|
LJCComments.SetComment comment:
|Sets the comments from the specified include file.|
LJCComments.SetComment line:
|///     <param name="$line">The code line.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$codeFileSpec">The Code File spec.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// require_once "LJCIncludeLib.php";|
LJCComments.SetComment isContinue:
| require_once "LJCIncludeLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $includeFile = new LJCInclude();|
LJCComments.SetComment isContinue:
| $includeFile = new LJCInclude();|
LJCComments.SetComment line:
|/// $line = "/// &amp;lt;include path='items/SetComment/*' file='Doc/LJCComments.xml'/&amp;gt;"|
LJCComments.SetComment isContinue:
| $line = "/// &amp;lt;include path='items/SetComment/*' file='Doc/LJCComments.xml'/&amp;gt;"|
LJCComments.SetComment line:
|/// $includeFile->SetComments($line, "SourceFile.php");|
LJCComments.SetComment isContinue:
| $includeFile->SetComments($line, "SourceFile.php");|
LJCComments.SetComment line:
|/// foreach ($includeFile->Comments as $comment)|
LJCComments.SetComment isContinue:
| foreach ($includeFile->Comments as $comment)|
LJCComments.SetComment line:
|/// {|
LJCComments.SetComment isContinue:
| {|
LJCComments.SetComment line:
|///   // Process each XML comment.|
LJCComments.SetComment isContinue:
|   // Process each XML comment.|
LJCComments.SetComment line:
|///   // This code is included in the LJCComments->SetComment() method.|
LJCComments.SetComment isContinue:
|   // This code is included in the LJCComments->SetComment() method.|
LJCComments.SetComment line:
|/// }|
LJCComments.SetComment isContinue:
| }|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|SetComments|
LJCComments.SetComment line:
|		/// <summary>The Incude comments.</summary>
|
LJCComments.SetComment comment:
|The Incude comments.|
PropertyName:
|$Comments|
LJCComments.SetComment line:
|		/// <summary>The Code File base (Library) name.</summary>
|
LJCComments.SetComment comment:
|The Code File base (Library) name.|
PropertyName:
|$LibName|
LJCComments.SetComment line:
|		/// <summary>The Include file spec.</summary>
|
LJCComments.SetComment comment:
|The Include file spec.|
PropertyName:
|$XMLFile|
LJCComments.SetComment line:
|	/// <include path='items/LJCParamCommentLib/*' file='Doc/LJCParamCommentLib.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains Classes to manage param XML Comments.
|
LJCComments.SetComment isContinue:
| Contains Classes to manage param XML Comments.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|	/// <summary>Handles param comments.</summary>
|
LJCComments.SetComment comment:
|Handles param comments.|
ClassName:
|LJCParamComment|
LJCComments.SetComment line:
|		/// <summary>Creates a Param object from a param XML comment.</summary>
|
LJCComments.SetComment comment:
|Creates a Param object from a param XML comment.|
LJCComments.SetComment line:
|		/// <param name="$paramLine">The param line.</param>
|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|		/// <returns>The Param object.</returns>
|
LJCComments.SetComment comment:
|The Param object.|
FunctionName:
|GetParam|
ClassName:
|GenCodeDoc|
LJCComments.SetComment line:
|		/// <summary>Initializes an object instance.</summary>
|
LJCComments.SetComment comment:
|Initializes an object instance.|
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <summary>Creates CodeDoc pages from source file list.</summary>
|
LJCComments.SetComment comment:
|Creates CodeDoc pages from source file list.|
FunctionName:
|CreateFromList|
LJCComments.SetComment line:
|		/// <summary>Create the HTML files.</summary>
|
LJCComments.SetComment comment:
|Create the HTML files.|
LJCComments.SetComment line:
|		/// <param name="$fileSpecLine">The source file spec.</param>
|
LJCComments.SetComment comment:
||
FunctionName:
|CreateFilePages|
LJCComments.SetComment line:
|	/// <include path='items/LJCGenDataGenLib/*' file='Doc/LJCGenDataGenLib.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains classes to create GenData from DocData.
|
LJCComments.SetComment isContinue:
| Contains classes to create GenData from DocData.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains classes for these functions:&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| Contains classes for these functions:&lt;br /&gt;
|
LJCComments.SetComment line:
|/// - Create GenData XML from DocData XML&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| - Create GenData XML from DocData XML&lt;br /&gt;
|
LJCComments.SetComment line:
|/// - Serialize GenData XML&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| - Serialize GenData XML&lt;br /&gt;
|
LJCComments.SetComment line:
|/// - Create CodeDoc HTML Files
|
LJCComments.SetComment isContinue:
| - Create CodeDoc HTML Files
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// Uses the LJCGenTextLib class GenTextLib to create the CodeDoc HTML files
|
LJCComments.SetComment isContinue:
| Uses the LJCGenTextLib class GenTextLib to create the CodeDoc HTML files
|
LJCComments.SetComment line:
|/// by combining the GenData and an HTML Text Template.&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| by combining the GenData and an HTML Text Template.&lt;br /&gt;
|
LJCComments.SetComment line:
|/// In this implementation there is a GenData XML file created for each PHP
|
LJCComments.SetComment isContinue:
| In this implementation there is a GenData XML file created for each PHP
|
LJCComments.SetComment line:
|/// file,  Class, Method/Function and Property.
|
LJCComments.SetComment isContinue:
| file,  Class, Method/Function and Property.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// An HTML page is generated for each GenData XML file and the corresponding HTML
|
LJCComments.SetComment isContinue:
| An HTML page is generated for each GenData XML file and the corresponding HTML
|
LJCComments.SetComment line:
|/// Text Template.&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| Text Template.&lt;br /&gt;
|
LJCComments.SetComment line:
|/// The templates are in the Templates subfolder.
|
LJCComments.SetComment isContinue:
| The templates are in the Templates subfolder.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// PHP File - LibTemplate.html&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| PHP File - LibTemplate.html&lt;br /&gt;
|
LJCComments.SetComment line:
|/// Class - ClassTemplate.html&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| Class - ClassTemplate.html&lt;br /&gt;
|
LJCComments.SetComment line:
|/// Method - FunctionTemplate.html&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| Method - FunctionTemplate.html&lt;br /&gt;
|
LJCComments.SetComment line:
|/// Property - PropertyTemplate.html
|
LJCComments.SetComment isContinue:
| Property - PropertyTemplate.html
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The PHP HTML files are output to the folder specified in the LJCGenDataGen
|
LJCComments.SetComment isContinue:
| The PHP HTML files are output to the folder specified in the LJCGenDataGen
|
LJCComments.SetComment line:
|/// constructor.
|
LJCComments.SetComment isContinue:
| constructor.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// A subfolder is created for each class. This folder contains the Class HTML,
|
LJCComments.SetComment isContinue:
| A subfolder is created for each class. This folder contains the Class HTML,
|
LJCComments.SetComment line:
|/// Methods HTML and Properties HTML files.&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| Methods HTML and Properties HTML files.&lt;br /&gt;
|
LJCComments.SetComment line:
|/// The Methods and Properties HTML names  are prefixed with the Class name to
|
LJCComments.SetComment isContinue:
| The Methods and Properties HTML names  are prefixed with the Class name to
|
LJCComments.SetComment line:
|/// prevent overwriting items with the same  name.
|
LJCComments.SetComment isContinue:
| prevent overwriting items with the same  name.
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// &lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;br /&gt;
|
LJCComments.SetComment line:
|/// See: &lt;a href="LJCGenTextSectionLib.html"&gt;Gen Sections&lt;/a&gt; for
|
LJCComments.SetComment isContinue:
| See: &lt;a href="LJCGenTextSectionLib.html"&gt;Gen Sections&lt;/a&gt; for
|
LJCComments.SetComment line:
|/// more information about GenData XML.
|
LJCComments.SetComment isContinue:
| more information about GenData XML.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|	/// <include path='items/LJCGenDataGen/*' file='Doc/LJCGenDataGen.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Provides methods to generate GenData XML files.
|
LJCComments.SetComment isContinue:
| Provides methods to generate GenData XML files.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// The GenData XML files  provide the  data for GenTextLib-LJCGenText to
|
LJCComments.SetComment isContinue:
| The GenData XML files  provide the  data for GenTextLib-LJCGenText to
|
LJCComments.SetComment line:
|/// generate CodeDoc HTML  files.
|
LJCComments.SetComment isContinue:
| generate CodeDoc HTML  files.
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The GenData XML is intended to display the XML Comments based on the Text
|
LJCComments.SetComment isContinue:
| The GenData XML is intended to display the XML Comments based on the Text
|
LJCComments.SetComment line:
|/// Template that will be used.
|
LJCComments.SetComment isContinue:
| Template that will be used.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The Text Section and Replacement names must
|
LJCComments.SetComment isContinue:
| The Text Section and Replacement names must
|
LJCComments.SetComment line:
|/// match  those expected by the Template.
|
LJCComments.SetComment isContinue:
| match  those expected by the Template.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// &lt;p&gt;
|
LJCComments.SetComment isContinue:
| &lt;p&gt;
|
LJCComments.SetComment line:
|/// The number and names of sections, items and replacements depends on the GenData
|
LJCComments.SetComment isContinue:
| The number and names of sections, items and replacements depends on the GenData
|
LJCComments.SetComment line:
|/// from the PHP files and the requirements of the HTML Template.
|
LJCComments.SetComment isContinue:
| from the PHP files and the requirements of the HTML Template.
|
LJCComments.SetComment line:
|/// &lt;/p&gt;
|
LJCComments.SetComment isContinue:
| &lt;/p&gt;
|
LJCComments.SetComment line:
|/// This is the standard layout for the GenData XML files.
|
LJCComments.SetComment isContinue:
| This is the standard layout for the GenData XML files.
|
LJCComments.SetComment line:
|/// &lt;pre&gt; &amp;lt;Data xmlns:xsd="http://www.w3.org/2001/XMLSchema"&lt;br /&gt;
|
LJCComments.SetComment isContinue:
| &lt;pre&gt; &amp;lt;Data xmlns:xsd="http://www.w3.org/2001/XMLSchema"&lt;br /&gt;
|
LJCComments.SetComment line:
|///  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///   &amp;lt;Sections&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|   &amp;lt;Sections&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///     &amp;lt;Section&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|     &amp;lt;Section&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;Begin/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;Begin/&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;Name&amp;gt;Main&amp;lt;/Name&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;Name&amp;gt;Main&amp;lt;/Name&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;Items&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;Items&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///         &amp;lt;Item&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|         &amp;lt;Item&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Replacements&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Replacements&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///             &amp;lt;Replacement&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|             &amp;lt;Replacement&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///               &amp;lt;Name&amp;gt;&amp;lt;/Name&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|               &amp;lt;Name&amp;gt;&amp;lt;/Name&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///               &amp;lt;Value&amp;gt;&amp;lt;/Value&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|               &amp;lt;Value&amp;gt;&amp;lt;/Value&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///             &amp;lt;Replacement&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|             &amp;lt;Replacement&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///           &amp;lt;Replacements&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|           &amp;lt;Replacements&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///         &amp;lt;Item&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|         &amp;lt;Item&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///       &amp;lt;Items&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|       &amp;lt;Items&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///     &amp;lt;Section&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|     &amp;lt;Section&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|///   &amp;lt;Sections&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment isContinue:
|   &amp;lt;Sections&amp;gt;&lt;br /&gt;
|
LJCComments.SetComment line:
|/// &amp;lt;/Data&amp;gt;&lt;/pre&gt;
|
LJCComments.SetComment isContinue:
| &amp;lt;/Data&amp;gt;&lt;/pre&gt;
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCGenDataGen|
LJCComments.SetComment line:
|		/// <summary>Initializes an object instance.</summary>
|
LJCComments.SetComment comment:
|Initializes an object instance.|
FunctionName:
|construct|
LJCComments.SetComment line:
|		/// <include path='items/CreateLibXMLString/*' file='Doc/LJCGenDataGen.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates a Lib GenData XML string and optional file.</summary>|
LJCComments.SetComment comment:
|Creates a Lib GenData XML string and optional file.|
LJCComments.SetComment line:
|///     <param name="$docXMLString">The DocData XML string.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$codeFileSpec">The code file specification.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$writeXML">Indicates if the XML file is to be written.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$outputPath">The output path.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <code>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// $devPath = "c:/Users/Les/Documents/Visual Studio 2022/LJCPHPProjects";|
LJCComments.SetComment isContinue:
| $devPath = "c:/Users/Les/Documents/Visual Studio 2022/LJCPHPProjects";|
LJCComments.SetComment line:
|/// require_once "$devPath/GenDoc/GenDataLib/LJCGenDataGenLib.php";|
LJCComments.SetComment isContinue:
| require_once "$devPath/GenDoc/GenDataLib/LJCGenDataGenLib.php";|
LJCComments.SetComment line:
|/// require_once "$devPath/GenDoc/GenDataLib/LJCGenDataGenLib.php";|
LJCComments.SetComment isContinue:
| require_once "$devPath/GenDoc/GenDataLib/LJCGenDataGenLib.php";|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $docDataGen = new LJCDocDataGen();|
LJCComments.SetComment isContinue:
| $docDataGen = new LJCDocDataGen();|
LJCComments.SetComment line:
|/// $genDataGen = new LJCGenDAtaGen();|
LJCComments.SetComment isContinue:
| $genDataGen = new LJCGenDAtaGen();|
LJCComments.SetComment line:
|/// |
LJCComments.SetComment isContinue:
| |
LJCComments.SetComment line:
|/// $fileSpec = "SourceFile.php";|
LJCComments.SetComment isContinue:
| $fileSpec = "SourceFile.php";|
LJCComments.SetComment line:
|/// $docXMLString = $this->DocDataGen->CreateDocXMLString($fileSpec);|
LJCComments.SetComment isContinue:
| $docXMLString = $this->DocDataGen->CreateDocXMLString($fileSpec);|
LJCComments.SetComment line:
|/// $genXMLString = $this->GenDataGen->CreateLibXMLString($docXMLString|
LJCComments.SetComment isContinue:
| $genXMLString = $this->GenDataGen->CreateLibXMLString($docXMLString|
LJCComments.SetComment line:
|///   , $fileSpec);|
LJCComments.SetComment isContinue:
|   , $fileSpec);|
LJCComments.SetComment line:
|/// </code>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
FunctionName:
|CreateLibXMLString|
LJCComments.SetComment line:
|		/// <summary>Creates a Method Params section GenData XML string.</summary>
|
LJCComments.SetComment comment:
|Creates a Method Params section GenData XML string.|
LJCComments.SetComment line:
|		/// <param name="$method">The Method object.</param>
|
LJCComments.SetComment comment:
||
FunctionName:
|CreateMethodParamString|
PropertyName:
|$HTMLPath|
LJCComments.SetComment line:
|	/// <include path='items/LJCGenDataXMLLib/*' file='Doc/LJCGenDataXMLLib.xml'/>
|
LJCComments.SetComment line:
|/// <summary>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains Classes to generate supporting GenData XML text.
|
LJCComments.SetComment isContinue:
| Contains Classes to generate supporting GenData XML text.
|
LJCComments.SetComment line:
|/// </summary>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|	/// <include path='items/LJCGenDataXML/*' file='Doc/LJCGenDataXML.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Provides methods for creating GenData XML text.</summary>|
LJCComments.SetComment comment:
|Provides methods for creating GenData XML text.|
LJCComments.SetComment line:
|/// <remarks>
|
LJCComments.SetComment comment:
|
|
LJCComments.SetComment line:
|/// Contains static methods for  generating supporting GenData XML text.
|
LJCComments.SetComment isContinue:
| Contains static methods for  generating supporting GenData XML text.
|
LJCComments.SetComment line:
|/// </remarks>|
LJCComments.SetComment isContinue:
||
LJCComments.SetComment comment:
||
ClassName:
|LJCGenDataXML|
LJCComments.SetComment line:
|		/// <include path='items/ItemBegin/*' file='Doc/LJCGenDataXML.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the Item begin string.</summary>|
LJCComments.SetComment comment:
|Creates the Item begin string.|
LJCComments.SetComment line:
|///     <param name="$name">The Item name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$indent">The indent count.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Item Begin XML string.</returns>|
LJCComments.SetComment comment:
|The Item Begin XML string.|
LJCComments.SetComment comment:
||
FunctionName:
|ItemBegin|
LJCComments.SetComment line:
|		/// <include path='items/ItemEnd/*' file='Doc/LJCGenDataXML.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the Item end string.</summary>|
LJCComments.SetComment comment:
|Creates the Item end string.|
LJCComments.SetComment line:
|///     <param name="$indent">The indent count.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Item End XML string.</returns>|
LJCComments.SetComment comment:
|The Item End XML string.|
LJCComments.SetComment comment:
||
FunctionName:
|ItemEnd|
LJCComments.SetComment line:
|		/// <include path='items/Replacement/*' file='Doc/LJCGenDataXML.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the Replacement string.</summary>|
LJCComments.SetComment comment:
|Creates the Replacement string.|
LJCComments.SetComment line:
|///     <param name="$name">The Replacement name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$value">The Replacement value.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$indent">The indent count.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Replacement XML string.</returns>|
LJCComments.SetComment comment:
|The Replacement XML string.|
LJCComments.SetComment comment:
||
FunctionName:
|Replacement|
LJCComments.SetComment line:
|		/// <include path='items/SectionBegin/*' file='Doc/LJCGenDataXML.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the Section begin string.</summary>|
LJCComments.SetComment comment:
|Creates the Section begin string.|
LJCComments.SetComment line:
|///     <param name="$name">The Section name.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|///     <param name="$indent">The indent count.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Section Begin XML string.</returns>|
LJCComments.SetComment comment:
|The Section Begin XML string.|
LJCComments.SetComment comment:
||
FunctionName:
|SectionBegin|
LJCComments.SetComment line:
|		/// <include path='items/SectionEnd/*' file='Doc/LJCGenDataXML.xml'/>
|
LJCComments.SetComment line:
|/// <summary>Creates the Section end string.</summary>|
LJCComments.SetComment comment:
|Creates the Section end string.|
LJCComments.SetComment line:
|///     <param name="$indent">The indent count.</param>|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|/// <returns>The Section End XML string.</returns>|
LJCComments.SetComment comment:
|The Section End XML string.|
LJCComments.SetComment comment:
||
FunctionName:
|SectionEnd|
LJCComments.SetComment line:
|		/// <param name="$fileName">The file name.</param>
|
LJCComments.SetComment comment:
||
LJCComments.SetComment line:
|		/// <returns>The head XML string.</returns>
|
LJCComments.SetComment comment:
|The head XML string.|
FunctionName:
|XMLHead|
