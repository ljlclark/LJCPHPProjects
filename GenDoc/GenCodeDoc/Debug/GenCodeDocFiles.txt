LJCComments.SetComment comment:
Contains Classes to represent a Collection.
LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Represents a Collection of objects.
LJCComments.SetComment isContinue:
 Represents a Collection of objects.
LJCComments.GetComment include:
/// Testing include of cr/lf.
LJCComments.SetComment isContinue:
 Testing include of cr/lf.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The LJCCollectionBase class provides the code that can be inherited to
LJCComments.SetComment isContinue:
 The LJCCollectionBase class provides the code that can be inherited to
LJCComments.GetComment include:
/// create a strongly typed Collection.
LJCComments.SetComment isContinue:
 create a strongly typed Collection.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// It accomplishes this by implementing IteratorAggregate which provides
LJCComments.SetComment isContinue:
 It accomplishes this by implementing IteratorAggregate which provides
LJCComments.GetComment include:
/// "foreach" functionality and Countable which provides "count" functionality.
LJCComments.SetComment isContinue:
 "foreach" functionality and Countable which provides "count" functionality.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// A strongly typed collection class would extend (inherit) from this base
LJCComments.SetComment isContinue:
 A strongly typed collection class would extend (inherit) from this base
LJCComments.GetComment include:
/// class  and add an AddObject() method that would require the strongly typed
LJCComments.SetComment isContinue:
 class  and add an AddObject() method that would require the strongly typed
LJCComments.GetComment include:
/// object collection element. This is what makes the collection strongly
LJCComments.SetComment isContinue:
 object collection element. This is what makes the collection strongly
LJCComments.GetComment include:
/// typed.
LJCComments.SetComment isContinue:
 typed.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The strongly typed collection class would also provide a Get() method
LJCComments.SetComment isContinue:
 The strongly typed collection class would also provide a Get() method
LJCComments.GetComment include:
/// that could retrieve the internal array element by key.
LJCComments.SetComment isContinue:
 that could retrieve the internal array element by key.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// For an example of how this works, see class: LJCDBAccessLib-LJCDbColumns.
LJCComments.SetComment isContinue:
 For an example of how this works, see class: LJCDBAccessLib-LJCDbColumns.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Adds an object and key value.</summary>
LJCComments.SetComment comment:
Adds an object and key value.
LJCComments.GetComment include:
///     <param name="$item">The object to be added to the collection.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The added item.</returns>
LJCComments.SetComment comment:
The added item.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCollectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCollectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// Add to class that extends LJCCollectionBase
LJCComments.SetComment isContinue:
// Add to class that extends LJCCollectionBase
LJCComments.GetComment include:
///// Adds an object and key value.
LJCComments.SetComment isContinue:
// Adds an object and key value.
LJCComments.GetComment include:
///public function AddObject(ObjectItem $item, $key = null)
LJCComments.SetComment isContinue:
public function AddObject(ObjectItem $item, $key = null)
LJCComments.GetComment include:
///{
LJCComments.SetComment isContinue:
{
LJCComments.GetComment include:
///  if (null == $key)
LJCComments.SetComment isContinue:
  if (null == $key)
LJCComments.GetComment include:
///  {
LJCComments.SetComment isContinue:
  {
LJCComments.GetComment include:
///    $key = $item->Name;
LJCComments.SetComment isContinue:
    $key = $item->Name;
LJCComments.GetComment include:
///  }
LJCComments.SetComment isContinue:
  }
LJCComments.GetComment include:
///  $retValue = $this->&lt;b&gt;AddItem&lt;/b&gt;($item, $key);
LJCComments.SetComment isContinue:
  $retValue = $this->&lt;b&gt;AddItem&lt;/b&gt;($item, $key);
LJCComments.GetComment include:
///  return $retValue;
LJCComments.SetComment isContinue:
  return $retValue;
LJCComments.GetComment include:
///}
LJCComments.SetComment isContinue:
}
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Get the item by Key value.</summary>
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The object with the matching key value.</returns>
LJCComments.SetComment comment:
The object with the matching key value.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCollectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCollectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// Add to class that extends LJCCollectionBase
LJCComments.SetComment isContinue:
// Add to class that extends LJCCollectionBase
LJCComments.GetComment include:
///// Get the item by Key value.
LJCComments.SetComment isContinue:
// Get the item by Key value.
LJCComments.GetComment include:
///public function Get($key)
LJCComments.SetComment isContinue:
public function Get($key)
LJCComments.GetComment include:
///{
LJCComments.SetComment isContinue:
{
LJCComments.GetComment include:
///  $retValue = $this->&lt;b&gt;GetItem&lt;/b&gt;($key, $throwError);
LJCComments.SetComment isContinue:
  $retValue = $this->&lt;b&gt;GetItem&lt;/b&gt;($key, $throwError);
LJCComments.GetComment include:
///  return $retValue;
LJCComments.SetComment isContinue:
  return $retValue;
LJCComments.GetComment include:
///}
LJCComments.SetComment isContinue:
}
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Gets an indexed array of keys.
LJCComments.SetComment comment:
The indexed keys array.
LJCComments.SetComment comment:
Gets an indexed array of objects.
LJCComments.SetComment comment:
The indexed values array.
LJCComments.GetComment include:
/// <summary>Indicates if a key already exists.</summary>
LJCComments.SetComment comment:
Indicates if a key already exists.
LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>True if the key already exists, otherwise false.</returns>
LJCComments.SetComment comment:
True if the key already exists, otherwise false.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCollectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCollectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $collection extends LJCCollectionBase
LJCComments.SetComment isContinue:
// $collection extends LJCCollectionBase
LJCComments.GetComment include:
///$key = "KeyName";
LJCComments.SetComment isContinue:
$key = "KeyName";
LJCComments.GetComment include:
///if ($collection->HasKey($key))
LJCComments.SetComment isContinue:
if ($collection->HasKey($key))
LJCComments.GetComment include:
///{
LJCComments.SetComment isContinue:
{
LJCComments.GetComment include:
///  throw new Exception("Key: {$key} already in use.");
LJCComments.SetComment isContinue:
  throw new Exception("Key: {$key} already in use.");
LJCComments.GetComment include:
///}
LJCComments.SetComment isContinue:
}
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Remove the item by Key value.</summary>
LJCComments.SetComment comment:
Remove the item by Key value.
LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCollectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCollectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $collection extends LJCCollectionBase
LJCComments.SetComment isContinue:
// $collection extends LJCCollectionBase
LJCComments.GetComment include:
///$collection->Remove("KeyName");
LJCComments.SetComment isContinue:
$collection->Remove("KeyName");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Allows Count(object).
LJCComments.SetComment comment:
The element count.
LJCComments.SetComment comment:
Allows foreach()
LJCComments.SetComment comment:
The elements array.
LJCComments.SetComment comment:
The Common PHP Class Library
LJCComments.SetComment comment:
Contains common functions.
LJCComments.GetComment include:
/// <summary>Gets the first index for the search value.</summary>
LJCComments.SetComment comment:
Gets the first index for the search value.
LJCComments.GetComment include:
///     <param name="$text">The text to be searched.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$find">The search value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$start">The search start index.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$exact">Indicates if a case sensitive search is performed.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The integer index value.</returns>
LJCComments.SetComment comment:
The integer index value.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The integer -1 is returned if the search value is not found.
LJCComments.SetComment isContinue:
 The integer -1 is returned if the search value is not found.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// This alternative for PHP strpos() always returns an integer. It can be
LJCComments.SetComment isContinue:
 This alternative for PHP strpos() always returns an integer. It can be
LJCComments.GetComment include:
/// simply tested for success $index &gt;= 0 or failure $index &lt; 0.
LJCComments.SetComment isContinue:
 simply tested for success $index &gt;= 0 or failure $index &lt; 0.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $index = 5
LJCComments.SetComment isContinue:
// $index = 5
LJCComments.GetComment include:
///$index = LJCCommon::StrPos("This here.", "Here");
LJCComments.SetComment isContinue:
$index = LJCCommon::StrPos("This here.", "Here");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $index = -1
LJCComments.SetComment isContinue:
// $index = -1
LJCComments.GetComment include:
///$index = LJCCommon::StrPos("This here.", "Here", exact: true);
LJCComments.SetComment isContinue:
$index = LJCCommon::StrPos("This here.", "Here", exact: true);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Gets the last index for the search value.</summary>
LJCComments.SetComment comment:
Gets the last index for the search value.
LJCComments.GetComment include:
///     <param name="$text">The text to be searched.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$find">The search value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$start">The search start index.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$exact">Indicates if a case sensitive search is performed.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The integer index value.</returns>
LJCComments.SetComment comment:
The integer index value.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The integer -1 is returned if the search value is not found. It can be
LJCComments.SetComment isContinue:
 The integer -1 is returned if the search value is not found. It can be
LJCComments.GetComment include:
/// simply tested for success $index &gt;= 0 or failure $index &lt; 0.
LJCComments.SetComment isContinue:
 simply tested for success $index &gt;= 0 or failure $index &lt; 0.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// This alternative for PHP strpos() always returns an integer.
LJCComments.SetComment isContinue:
 This alternative for PHP strpos() always returns an integer.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $index = 13
LJCComments.SetComment isContinue:
// $index = 13
LJCComments.GetComment include:
///$index = LJCCommon::StrRPos("This here is here.", "Here");
LJCComments.SetComment isContinue:
$index = LJCCommon::StrRPos("This here is here.", "Here");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $index = -1
LJCComments.SetComment isContinue:
// $index = -1
LJCComments.GetComment include:
///$index = LJCCommon::StrRPos("This here is here.", "Here", exact: true);
LJCComments.SetComment isContinue:
$index = LJCCommon::StrRPos("This here is here.", "Here", exact: true);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Returns a text value as boolean.
LJCComments.GetComment include:
/// <summary>Gets the Debug file name.</summary>
LJCComments.SetComment comment:
Gets the Debug file name.
LJCComments.GetComment include:
///     <param name="$folder">The folder name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$fileName">The file name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Debug file spec.</returns>
LJCComments.SetComment comment:
The Debug file spec.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// This function takes a folder name and a file name. It makes sure the
LJCComments.SetComment isContinue:
 This function takes a folder name and a file name. It makes sure the
LJCComments.GetComment include:
/// folder exists and returns the text "folder/fileName" with the extension
LJCComments.SetComment isContinue:
 folder exists and returns the text "folder/fileName" with the extension
LJCComments.GetComment include:
/// "txt".
LJCComments.SetComment isContinue:
 "txt".
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
/// require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.SetComment isContinue:
 require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// // $debugFileSpec = "Debug\SourceFile.txt"
LJCComments.SetComment isContinue:
 // $debugFileSpec = "Debug\SourceFile.txt"
LJCComments.GetComment include:
/// $debugFileSpec = LJCCommon::GetDebugFileName("Debug", "SourceFile.php");
LJCComments.SetComment isContinue:
 $debugFileSpec = LJCCommon::GetDebugFileName("Debug", "SourceFile.php");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Gets the string between the delimiters.</summary>
LJCComments.SetComment comment:
Gets the string between the delimiters.
LJCComments.GetComment include:
///     <param name="$text">The text to be parsed.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$beginDelimiter">The beginning delimiter.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$endDelimiter">The ending delimiter.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$lTrim">Indicates if the parsed value is to be left trimmed.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$rTrim">Indicates if the parsed value is to be right trimmed.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The parsed value.</returns>
LJCComments.SetComment comment:
The parsed value.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Returns null if the begin delimiter is not found.
LJCComments.SetComment isContinue:
 Returns null if the begin delimiter is not found.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// Includes to the end of the string if the end delimiter is null
LJCComments.SetComment isContinue:
 Includes to the end of the string if the end delimiter is null
LJCComments.GetComment include:
/// or not found.
LJCComments.SetComment isContinue:
 or not found.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $text = "here"
LJCComments.SetComment isContinue:
// $text = "here"
LJCComments.GetComment include:
///$text = LJCCommon::GetDelimitedString("This | here |.", "|", "|");
LJCComments.SetComment isContinue:
$text = LJCCommon::GetDelimitedString("This | here |.", "|", "|");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Gets the FileName from the file spec.</summary>
LJCComments.SetComment comment:
Gets the FileName from the file spec.
LJCComments.GetComment include:
///     <param name="$fileSpec">The file specification.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The file name.</returns>
LJCComments.SetComment comment:
The file name.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Parses from the last "/" to the following ".".
LJCComments.SetComment isContinue:
 Parses from the last "/" to the following ".".
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// Includes to the end of the string if the "." is not found.
LJCComments.SetComment isContinue:
 Includes to the end of the string if the "." is not found.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $text = "File"
LJCComments.SetComment isContinue:
// $text = "File"
LJCComments.GetComment include:
///$text = LJCCommon::GetFileName("../Folder/File.txt");
LJCComments.SetComment isContinue:
$text = LJCCommon::GetFileName("../Folder/File.txt");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Gets the Path from the file spec.</summary>
LJCComments.SetComment comment:
Gets the Path from the file spec.
LJCComments.GetComment include:
///     <param name="$fileSpec">The file specification.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The file path.</returns>
LJCComments.SetComment comment:
The file path.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Parses to the last "/".
LJCComments.SetComment isContinue:
 Parses to the last "/".
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $text = "../Folder"
LJCComments.SetComment isContinue:
// $text = "../Folder"
LJCComments.GetComment include:
///$text = LJCCommon::GetFileSpecPath("../Folder/File.txt");
LJCComments.SetComment isContinue:
$text = LJCCommon::GetFileSpecPath("../Folder/File.txt");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Gets the indexed Debug file name.</summary>
LJCComments.SetComment comment:
Gets the indexed Debug file name.
LJCComments.GetComment include:
///     <param name="$folder">The folder name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$fileName">The file name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The indexed Debug file spec.</returns>
LJCComments.SetComment comment:
The indexed Debug file spec.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// This function takes a folder name and a file name. It makes sure the
LJCComments.SetComment isContinue:
 This function takes a folder name and a file name. It makes sure the
LJCComments.GetComment include:
/// folder exists and returns the text "folder/fileName$index" with the
LJCComments.SetComment isContinue:
 folder exists and returns the text "folder/fileName$index" with the
LJCComments.GetComment include:
/// extension "txt".
LJCComments.SetComment isContinue:
 extension "txt".
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// The variable $index in the example file name indicates a unique index
LJCComments.SetComment isContinue:
 The variable $index in the example file name indicates a unique index
LJCComments.GetComment include:
/// value that does not already exist on disk. It begins checking with an
LJCComments.SetComment isContinue:
 value that does not already exist on disk. It begins checking with an
LJCComments.GetComment include:
/// index value of 1.
LJCComments.SetComment isContinue:
 index value of 1.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $debugFileSpec = "Debug\SourceFile1.txt"
LJCComments.SetComment isContinue:
// $debugFileSpec = "Debug\SourceFile1.txt"
LJCComments.GetComment include:
///$debugFileSpec = LJCCommon::GetIndexedDebugFileName("Debug"
LJCComments.SetComment isContinue:
$debugFileSpec = LJCCommon::GetIndexedDebugFileName("Debug"
LJCComments.GetComment include:
///  , "SourceFile.php");
LJCComments.SetComment isContinue:
  , "SourceFile.php");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Get string tokens.
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates the specified folder if it does not already exist.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Returns a scrubbed external value.</summary>
LJCComments.SetComment comment:
Returns a scrubbed external value.
LJCComments.GetComment include:
///     <param name="$text">The text to be scrubbed.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The scrubbed value.</returns>
LJCComments.SetComment comment:
The scrubbed value.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Trims the text, strips slashes and converts HTML characters to HTML
LJCComments.SetComment isContinue:
 Trims the text, strips slashes and converts HTML characters to HTML
LJCComments.GetComment include:
/// entities.
LJCComments.SetComment isContinue:
 entities.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $text = "&amp;amp;lt;tag&amp;amp;gt;"
LJCComments.SetComment isContinue:
// $text = "&amp;amp;lt;tag&amp;amp;gt;"
LJCComments.GetComment include:
///$text = LJCCommon::Scrub(" &amp;lt;/tag&amp;gt; ");
LJCComments.SetComment isContinue:
$text = LJCCommon::Scrub(" &amp;lt;/tag&amp;gt; ");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Assigns a session value and returns the value.</summary>
LJCComments.SetComment comment:
Assigns a session value and returns the value.
LJCComments.GetComment include:
///     <param name="$name">The session value name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$value">The session value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The session value.</returns>
LJCComments.SetComment comment:
The session value.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCCommonLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $dbServer = "localhost"
LJCComments.SetComment isContinue:
// $dbServer = "localhost"
LJCComments.GetComment include:
///$dbServer = LJCCommon::SetSessionValue("dbServer", "localhost");
LJCComments.SetComment isContinue:
$dbServer = LJCCommon::SetSessionValue("dbServer", "localhost");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The PDO Data Manager Library
LJCComments.GetComment include:
/// <summary>Provides Standard DB Table methods.</summary>
LJCComments.SetComment comment:
Provides Standard DB Table methods.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The DataManager class provides a higher level of abstraction on top of the
LJCComments.SetComment isContinue:
 The DataManager class provides a higher level of abstraction on top of the
LJCComments.GetComment include:
/// DataAccess class.
LJCComments.SetComment isContinue:
 DataAccess class.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// It does not require the developer to create SQL statements. Instead the
LJCComments.SetComment isContinue:
 It does not require the developer to create SQL statements. Instead the
LJCComments.GetComment include:
/// developer can use strongly typed DataObjects, KeyColumn definitions, Join
LJCComments.SetComment isContinue:
 developer can use strongly typed DataObjects, KeyColumn definitions, Join
LJCComments.GetComment include:
/// definitions and Included PropertyNames arrays to interact with the
LJCComments.SetComment isContinue:
 definitions and Included PropertyNames arrays to interact with the
LJCComments.GetComment include:
/// database.
LJCComments.SetComment isContinue:
 database.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The DataManager retrieves the Table SchemaColumn Definitions from the
LJCComments.SetComment isContinue:
 The DataManager retrieves the Table SchemaColumn Definitions from the
LJCComments.GetComment include:
/// database. It uses these definitions to create the SQL statements and
LJCComments.SetComment isContinue:
 database. It uses these definitions to create the SQL statements and
LJCComments.GetComment include:
/// modifies them based on KeyColumn definitions, Join definitions and
LJCComments.SetComment isContinue:
 modifies them based on KeyColumn definitions, Join definitions and
LJCComments.GetComment include:
/// PropertyNames arrays.
LJCComments.SetComment isContinue:
 PropertyNames arrays.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// The retrieved data can be mapped into strongly typed DataObjects using the
LJCComments.SetComment isContinue:
 The retrieved data can be mapped into strongly typed DataObjects using the
LJCComments.GetComment include:
/// methods CreateDataCollection() and CreateDataObject().
LJCComments.SetComment isContinue:
 methods CreateDataCollection() and CreateDataObject().
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Initializes a class instance with the provided values.</summary>
LJCComments.SetComment comment:
Initializes a class instance with the provided values.
LJCComments.GetComment include:
///     <param name="$connectionValues">The DB Connection values.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$tableName">The table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$database = "DatabaseName";
LJCComments.SetComment isContinue:
$database = "DatabaseName";
LJCComments.GetComment include:
///$userID = "UserID";
LJCComments.SetComment isContinue:
$userID = "UserID";
LJCComments.GetComment include:
///$password = "Password":
LJCComments.SetComment isContinue:
$password = "Password":
LJCComments.GetComment include:
///$connectionValues = new LJCConnectionValues("localhost", $database, $userID
LJCComments.SetComment isContinue:
$connectionValues = new LJCConnectionValues("localhost", $database, $userID
LJCComments.GetComment include:
///  , $password);
LJCComments.SetComment isContinue:
  , $password);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.SetComment isContinue:
$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Adds the record for the provided values.</summary>
LJCComments.SetComment comment:
Adds the record for the provided values.
LJCComments.GetComment include:
///     <param name="$dataColumns">The data columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The count of affected records.</returns>
LJCComments.SetComment comment:
The count of affected records.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The Add() method uses the values from the $dataColumns collection
LJCComments.SetComment isContinue:
 The Add() method uses the values from the $dataColumns collection
LJCComments.GetComment include:
/// parameter to insert a record into the database.
LJCComments.SetComment isContinue:
 parameter to insert a record into the database.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.SetComment isContinue:
$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dataColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$dataColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$dataColumns->Add("Name", value:"NameValue");
LJCComments.SetComment isContinue:
$dataColumns->Add("Name", value:"NameValue");
LJCComments.GetComment include:
///$affectedCount = $manager->Add($dataColumns);
LJCComments.SetComment isContinue:
$affectedCount = $manager->Add($dataColumns);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $manager->SQL =
LJCComments.SetComment isContinue:
// $manager->SQL =
LJCComments.GetComment include:
///// insert into TableName
LJCComments.SetComment isContinue:
// insert into TableName
LJCComments.GetComment include:
/////  (
LJCComments.SetComment isContinue:
//  (
LJCComments.GetComment include:
/////   Name
LJCComments.SetComment isContinue:
//   Name
LJCComments.GetComment include:
/////  )
LJCComments.SetComment isContinue:
//  )
LJCComments.GetComment include:
/////  values
LJCComments.SetComment isContinue:
//  values
LJCComments.GetComment include:
/////  (
LJCComments.SetComment isContinue:
//  (
LJCComments.GetComment include:
/////   Name = 'NameValue'
LJCComments.SetComment isContinue:
//   Name = 'NameValue'
LJCComments.GetComment include:
/////  )
LJCComments.SetComment isContinue:
//  )
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Deletes the records for the provided values.</summary>
LJCComments.SetComment comment:
Deletes the records for the provided values.
LJCComments.GetComment include:
///     <param name="$keyColumns">The where clause key columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The count of affected records.</returns>
LJCComments.SetComment comment:
The count of affected records.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The Delete() method deletes records in the database.
LJCComments.SetComment isContinue:
 The Delete() method deletes records in the database.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The $keyColumns collection parameter contains the data for the where
LJCComments.SetComment isContinue:
 The $keyColumns collection parameter contains the data for the where
LJCComments.GetComment include:
/// clause.
LJCComments.SetComment isContinue:
 clause.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// The $keyColumns parameter is required and must have collection elements
LJCComments.SetComment isContinue:
 The $keyColumns parameter is required and must have collection elements
LJCComments.GetComment include:
/// or the Delete will not be executed.
LJCComments.SetComment isContinue:
 or the Delete will not be executed.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.SetComment isContinue:
$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$keyColumns = new DbColumns();
LJCComments.SetComment isContinue:
$keyColumns = new DbColumns();
LJCComments.GetComment include:
///$keyColumns->Add("ID", value:1);
LJCComments.SetComment isContinue:
$keyColumns->Add("ID", value:1);
LJCComments.GetComment include:
///$affectedCount = $manager->Delete($keyColumns);
LJCComments.SetComment isContinue:
$affectedCount = $manager->Delete($keyColumns);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $manager->SQL =
LJCComments.SetComment isContinue:
// $manager->SQL =
LJCComments.GetComment include:
///// delete from TableName
LJCComments.SetComment isContinue:
// delete from TableName
LJCComments.GetComment include:
///// where TableName.ID = 1;
LJCComments.SetComment isContinue:
// where TableName.ID = 1;
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Loads the records for the provided values.</summary>
LJCComments.SetComment comment:
Loads the records for the provided values.
LJCComments.GetComment include:
///     <param name="$keyColumns">The where clause key columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$propertyNames">The included column property names.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>An array of data records.</returns>
LJCComments.SetComment comment:
An array of data records.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Loads records from the database.
LJCComments.SetComment isContinue:
 Loads records from the database.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The $keyColumns collection parameter contains the data for the where
LJCComments.SetComment isContinue:
 The $keyColumns collection parameter contains the data for the where
LJCComments.GetComment include:
/// clause.
LJCComments.SetComment isContinue:
 clause.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// The optional $propertyNames array parameter contains the names of the
LJCComments.SetComment isContinue:
 The optional $propertyNames array parameter contains the names of the
LJCComments.GetComment include:
/// properties that will be retrieved. All columns are retrieved if it is
LJCComments.SetComment isContinue:
 properties that will be retrieved. All columns are retrieved if it is
LJCComments.GetComment include:
/// null.
LJCComments.SetComment isContinue:
 null.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.SetComment isContinue:
$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$propertyNames = [];
LJCComments.SetComment isContinue:
$propertyNames = [];
LJCComments.GetComment include:
///$propertyNames[] = "ID";
LJCComments.SetComment isContinue:
$propertyNames[] = "ID";
LJCComments.GetComment include:
///$propertyNames[] = "Name";
LJCComments.SetComment isContinue:
$propertyNames[] = "Name";
LJCComments.GetComment include:
///$affectedCount = $manager->Load(null, $propertyNames);
LJCComments.SetComment isContinue:
$affectedCount = $manager->Load(null, $propertyNames);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $manager->SQL =
LJCComments.SetComment isContinue:
// $manager->SQL =
LJCComments.GetComment include:
///// select
LJCComments.SetComment isContinue:
// select
LJCComments.GetComment include:
/////   TableName.ID,
LJCComments.SetComment isContinue:
//   TableName.ID,
LJCComments.GetComment include:
/////   TableName.Name
LJCComments.SetComment isContinue:
//   TableName.Name
LJCComments.GetComment include:
///// from TableName;
LJCComments.SetComment isContinue:
// from TableName;
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Retrieves the record for the provided values.</summary>
LJCComments.SetComment comment:
Retrieves the record for the provided values.
LJCComments.GetComment include:
///     <param name="$keyColumns">The where clause key columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$propertyNames">The included column property names.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>An array of record columns.</returns>
LJCComments.SetComment comment:
An array of record columns.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Retrieves a single record from the database.
LJCComments.SetComment isContinue:
 Retrieves a single record from the database.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The $keyColumns collection parameter contains the data for the where
LJCComments.SetComment isContinue:
 The $keyColumns collection parameter contains the data for the where
LJCComments.GetComment include:
/// clause.
LJCComments.SetComment isContinue:
 clause.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// The optional $propertyNames array parameter contains the names of the
LJCComments.SetComment isContinue:
 The optional $propertyNames array parameter contains the names of the
LJCComments.GetComment include:
/// properties that will be retrieved. All columns are retrieved if it is
LJCComments.SetComment isContinue:
 properties that will be retrieved. All columns are retrieved if it is
LJCComments.GetComment include:
/// null.
LJCComments.SetComment isContinue:
 null.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.SetComment isContinue:
$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$keyColumns = new DbColumns();
LJCComments.SetComment isContinue:
$keyColumns = new DbColumns();
LJCComments.GetComment include:
///$keyColumns->Add("ID", value:1);
LJCComments.SetComment isContinue:
$keyColumns->Add("ID", value:1);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$propertyNames = [];
LJCComments.SetComment isContinue:
$propertyNames = [];
LJCComments.GetComment include:
///$propertyNames[] = "ID";
LJCComments.SetComment isContinue:
$propertyNames[] = "ID";
LJCComments.GetComment include:
///$propertyNames[] = "Name";
LJCComments.SetComment isContinue:
$propertyNames[] = "Name";
LJCComments.GetComment include:
///$row = $manager->Retrieve($keyColumns, $propertyNames);
LJCComments.SetComment isContinue:
$row = $manager->Retrieve($keyColumns, $propertyNames);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $manager->SQL =
LJCComments.SetComment isContinue:
// $manager->SQL =
LJCComments.GetComment include:
///// select
LJCComments.SetComment isContinue:
// select
LJCComments.GetComment include:
/////   TableName.ID,
LJCComments.SetComment isContinue:
//   TableName.ID,
LJCComments.GetComment include:
/////   TableName.Name
LJCComments.SetComment isContinue:
//   TableName.Name
LJCComments.GetComment include:
///// from TableName
LJCComments.SetComment isContinue:
// from TableName
LJCComments.GetComment include:
///// where TableName.ID = 1;
LJCComments.SetComment isContinue:
// where TableName.ID = 1;
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Updates the records for the provided values.</summary>
LJCComments.SetComment comment:
Updates the records for the provided values.
LJCComments.GetComment include:
///     <param name="$keyColumns">The where clause key columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$dataColumns">The data columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The count of affected records.</returns>
LJCComments.SetComment comment:
The count of affected records.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The Update() method updates records in the database using the values
LJCComments.SetComment isContinue:
 The Update() method updates records in the database using the values
LJCComments.GetComment include:
/// from the $dataColumns collection parameter.
LJCComments.SetComment isContinue:
 from the $dataColumns collection parameter.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The $keyColumns collection parameter contains the data for the where
LJCComments.SetComment isContinue:
 The $keyColumns collection parameter contains the data for the where
LJCComments.GetComment include:
/// clause.
LJCComments.SetComment isContinue:
 clause.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// The $keyColumns parameter is required and must have collection elements
LJCComments.SetComment isContinue:
 The $keyColumns parameter is required and must have collection elements
LJCComments.GetComment include:
/// or the Update will not be executed.
LJCComments.SetComment isContinue:
 or the Update will not be executed.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.SetComment isContinue:
$manager = new LJCDataManager($connectionValues, $tableName);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$keyColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$keyColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$keyColumns->Add("ID", value:1);
LJCComments.SetComment isContinue:
$keyColumns->Add("ID", value:1);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dataColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$dataColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$dataColumns->Add("Name", value:"NameValue");
LJCComments.SetComment isContinue:
$dataColumns->Add("Name", value:"NameValue");
LJCComments.GetComment include:
///$affectedCount = $manager->Update($keyColumns, $dataColumns);
LJCComments.SetComment isContinue:
$affectedCount = $manager->Update($keyColumns, $dataColumns);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $manager->SQL =
LJCComments.SetComment isContinue:
// $manager->SQL =
LJCComments.GetComment include:
///// update TableName
LJCComments.SetComment isContinue:
// update TableName
LJCComments.GetComment include:
/////   set Name = 'NameValue'
LJCComments.SetComment isContinue:
//   set Name = 'NameValue'
LJCComments.GetComment include:
///// where TableName.ID = 1;
LJCComments.SetComment isContinue:
// where TableName.ID = 1;
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Executes an Add, Delete or Update SQL statement.</summary>
LJCComments.SetComment comment:
Executes an Add, Delete or Update SQL statement.
LJCComments.GetComment include:
///     <param name="$sql">The SQL statement.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The count of affected records.</returns>
LJCComments.SetComment comment:
The count of affected records.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Executes a Select SQL statement.</summary>
LJCComments.SetComment comment:
Executes a Select SQL statement.
LJCComments.GetComment include:
///     <param name="$sql">The SQL statement.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>An array of data records.</returns>
LJCComments.SetComment comment:
An array of data records.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Executes a Select SQL statement.</summary>
LJCComments.SetComment comment:
Executes a Select SQL statement.
LJCComments.GetComment include:
///     <param name="$sql">The SQL statement.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>An array of record columns.</returns>
LJCComments.SetComment comment:
An array of record columns.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Creates an array of typed Data Objects from a DB rows array.
LJCComments.SetComment isContinue:
 Creates an array of typed Data Objects from a DB rows array.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///     <param name="$collection">A Collection Object to use as a template.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$dataObject">A Data Object to use as a template.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$rows">An array of data records.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>An array of Data object records or null if there are no rows.</returns>
LJCComments.SetComment comment:
An array of Data object records or null if there are no rows.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// This method provides Object to Relational Mapping (ORM) as it maps an
LJCComments.SetComment isContinue:
 This method provides Object to Relational Mapping (ORM) as it maps an
LJCComments.GetComment include:
/// array  of data records into a collection of strongly  typed data objects.
LJCComments.SetComment isContinue:
 array  of data records into a collection of strongly  typed data objects.
LJCComments.GetComment include:
/// It calls the CreateDataObject() method for each data record and adds the
LJCComments.SetComment isContinue:
 It calls the CreateDataObject() method for each data record and adds the
LJCComments.GetComment include:
/// resulting typed object to the strongly typed collection.
LJCComments.SetComment isContinue:
 resulting typed object to the strongly typed collection.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The collection must be an object that extends (inherits from)
LJCComments.SetComment isContinue:
 The collection must be an object that extends (inherits from)
LJCComments.GetComment include:
/// LJCCollectionLib.php class LJCCollectionBase and provides an AddObject
LJCComments.SetComment isContinue:
 LJCCollectionLib.php class LJCCollectionBase and provides an AddObject
LJCComments.GetComment include:
/// method with the signature  AddObject(DataObject $item, $key = null); Where
LJCComments.SetComment isContinue:
 method with the signature  AddObject(DataObject $item, $key = null); Where
LJCComments.GetComment include:
/// DataObject is a strongly typed Data Object. See LJCDbAccessLib.php class
LJCComments.SetComment isContinue:
 DataObject is a strongly typed Data Object. See LJCDbAccessLib.php class
LJCComments.GetComment include:
/// LJCDbColumns and LJCDbColumn for examples.
LJCComments.SetComment isContinue:
 LJCDbColumns and LJCDbColumn for examples.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The AddObject() method should supply a default key value or the method can
LJCComments.SetComment isContinue:
 The AddObject() method should supply a default key value or the method can
LJCComments.GetComment include:
/// be changed to require the programmer to enter it by removing the "= null"
LJCComments.SetComment isContinue:
 be changed to require the programmer to enter it by removing the "= null"
LJCComments.GetComment include:
/// from the method signature.
LJCComments.SetComment isContinue:
 from the method signature.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// The DataObject must supply a Clone() method.
LJCComments.SetComment isContinue:
 The DataObject must supply a Clone() method.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$manager = new LJCDataManager($connectionValues, "TableName");
LJCComments.SetComment isContinue:
$manager = new LJCDataManager($connectionValues, "TableName");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///class Person
LJCComments.SetComment isContinue:
class Person
LJCComments.GetComment include:
///{
LJCComments.SetComment isContinue:
{
LJCComments.GetComment include:
///  public int $ID;
LJCComments.SetComment isContinue:
  public int $ID;
LJCComments.GetComment include:
///  public string $Name;
LJCComments.SetComment isContinue:
  public string $Name;
LJCComments.GetComment include:
///}
LJCComments.SetComment isContinue:
}
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$rows = $manager->Load(null);
LJCComments.SetComment isContinue:
$rows = $manager->Load(null);
LJCComments.GetComment include:
///$persons = $manager->CreateDataCollection(new Persons(), new Person()
LJCComments.SetComment isContinue:
$persons = $manager->CreateDataCollection(new Persons(), new Person()
LJCComments.GetComment include:
///  , $rows);
LJCComments.SetComment isContinue:
  , $rows);
LJCComments.GetComment include:
///foreach ($persons as $person)
LJCComments.SetComment isContinue:
foreach ($persons as $person)
LJCComments.GetComment include:
///{
LJCComments.SetComment isContinue:
{
LJCComments.GetComment include:
///  echo $person->ID;
LJCComments.SetComment isContinue:
  echo $person->ID;
LJCComments.GetComment include:
///  echo $person->Name;
LJCComments.SetComment isContinue:
  echo $person->Name;
LJCComments.GetComment include:
///}
LJCComments.SetComment isContinue:
}
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Populates a typed Data Object with values from a DB row.</summary>
LJCComments.SetComment comment:
Populates a typed Data Object with values from a DB row.
LJCComments.GetComment include:
///     <param name="$dataObject">A Data Object to use as a template.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$row">An array of data columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>A data object record.</returns>
LJCComments.SetComment comment:
A data object record.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// This method provides Object to Relational Mapping (ORM) as it maps the
LJCComments.SetComment isContinue:
 This method provides Object to Relational Mapping (ORM) as it maps the
LJCComments.GetComment include:
/// data columns to properties in the DataObject and copies the matching
LJCComments.SetComment isContinue:
 data columns to properties in the DataObject and copies the matching
LJCComments.GetComment include:
/// values.
LJCComments.SetComment isContinue:
 values.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// The data column keys which are the result set column names must match
LJCComments.SetComment isContinue:
 The data column keys which are the result set column names must match
LJCComments.GetComment include:
/// property names in the DataObject.
LJCComments.SetComment isContinue:
 property names in the DataObject.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$manager = new LJCDataManager($connectionValues, "TableName");
LJCComments.SetComment isContinue:
$manager = new LJCDataManager($connectionValues, "TableName");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///class Person
LJCComments.SetComment isContinue:
class Person
LJCComments.GetComment include:
///{
LJCComments.SetComment isContinue:
{
LJCComments.GetComment include:
///  public int $ID;
LJCComments.SetComment isContinue:
  public int $ID;
LJCComments.GetComment include:
///  public ?string $Name;
LJCComments.SetComment isContinue:
  public ?string $Name;
LJCComments.GetComment include:
///}
LJCComments.SetComment isContinue:
}
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$keyColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$keyColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$keyColumns->Add("ID", value: 1);
LJCComments.SetComment isContinue:
$keyColumns->Add("ID", value: 1);
LJCComments.GetComment include:
///$row = $manager->Retrieve($keyColumns);
LJCComments.SetComment isContinue:
$row = $manager->Retrieve($keyColumns);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dataObject = new Person();
LJCComments.SetComment isContinue:
$dataObject = new Person();
LJCComments.GetComment include:
///$person = $manager->CreateDataObject($dataObject, $row);
LJCComments.SetComment isContinue:
$person = $manager->CreateDataObject($dataObject, $row);
LJCComments.GetComment include:
///echo $person->ID;
LJCComments.SetComment isContinue:
echo $person->ID;
LJCComments.GetComment include:
///echo $person->Name;
LJCComments.SetComment isContinue:
echo $person->Name;
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The DbAccess object.
LJCComments.SetComment comment:
The Join definitions.
LJCComments.SetComment comment:
The OrderBy names.
LJCComments.SetComment comment:
The column definitions.
LJCComments.SetComment comment:
The last SQL statement.
LJCComments.SetComment comment:
The table name.
LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Provides static functions for creating SQL statements.
LJCComments.SetComment isContinue:
 Provides static functions for creating SQL statements.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates a Delete SQL statement.</summary>
LJCComments.SetComment comment:
Creates a Delete SQL statement.
LJCComments.GetComment include:
///     <param name="$tableName">The table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$keyColumns">The where clause key columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Update SQL statement.</returns>
LJCComments.SetComment comment:
The Update SQL statement.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$keyColumns = new DbColumns();
LJCComments.SetComment isContinue:
$keyColumns = new DbColumns();
LJCComments.GetComment include:
///$keyColumns->Add("ID", value:1);
LJCComments.SetComment isContinue:
$keyColumns->Add("ID", value:1);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$sql = LJCSQLBuilder::CreateDelete("TableName", $keyColumns);
LJCComments.SetComment isContinue:
$sql = LJCSQLBuilder::CreateDelete("TableName", $keyColumns);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $sql =
LJCComments.SetComment isContinue:
// $sql =
LJCComments.GetComment include:
///// delete from TableName
LJCComments.SetComment isContinue:
// delete from TableName
LJCComments.GetComment include:
///// where TableName.ID = 1
LJCComments.SetComment isContinue:
// where TableName.ID = 1
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates an Insert SQL statement.</summary>
LJCComments.SetComment comment:
Creates an Insert SQL statement.
LJCComments.GetComment include:
///     <param name="$tableName">The table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$dataColumns">The Data columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Update SQL statement.</returns>
LJCComments.SetComment comment:
The Update SQL statement.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dataColumns = new DbColumns();
LJCComments.SetComment isContinue:
$dataColumns = new DbColumns();
LJCComments.GetComment include:
///$dataColumns->Add("FirstName", value: "First");
LJCComments.SetComment isContinue:
$dataColumns->Add("FirstName", value: "First");
LJCComments.GetComment include:
///$dataColumns->Add("LastName", value: "Last");
LJCComments.SetComment isContinue:
$dataColumns->Add("LastName", value: "Last");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$sql = LJCSQLBuilder::CreateInsert("TableName", $dataColumns);
LJCComments.SetComment isContinue:
$sql = LJCSQLBuilder::CreateInsert("TableName", $dataColumns);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $sql =
LJCComments.SetComment isContinue:
// $sql =
LJCComments.GetComment include:
///// update TableName set
LJCComments.SetComment isContinue:
// update TableName set
LJCComments.GetComment include:
/////   FirstName = 'First',
LJCComments.SetComment isContinue:
//   FirstName = 'First',
LJCComments.GetComment include:
/////   LastName = 'Last'
LJCComments.SetComment isContinue:
//   LastName = 'Last'
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates a Select SQL statement.</summary>
LJCComments.SetComment comment:
Creates a Select SQL statement.
LJCComments.GetComment include:
///     <param name="$tableName">The table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$schemaColumns">The table schema definition columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$keyColumns">The where clause key columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$propertyNames">The included column property names.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$joins">The Collection of Join objects.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Select SQL statement.</returns>
LJCComments.SetComment comment:
The Select SQL statement.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$schemaColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$schemaColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$schemaColumns->Add("ID", null, "int");
LJCComments.SetComment isContinue:
$schemaColumns->Add("ID", null, "int");
LJCComments.GetComment include:
///$schemaColumns->Add("Name");
LJCComments.SetComment isContinue:
$schemaColumns->Add("Name");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$keyColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$keyColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$keyColumns->Add("ID", value:1);
LJCComments.SetComment isContinue:
$keyColumns->Add("ID", value:1);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///array $propertyNames = [];
LJCComments.SetComment isContinue:
array $propertyNames = [];
LJCComments.GetComment include:
///$propertyNames[] = "ID";
LJCComments.SetComment isContinue:
$propertyNames[] = "ID";
LJCComments.GetComment include:
///$propertyNames[] = "Name";
LJCComments.SetComment isContinue:
$propertyNames[] = "Name";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$joins = new LJCJoins();
LJCComments.SetComment isContinue:
$joins = new LJCJoins();
LJCComments.GetComment include:
///$join = $joins->Add("JoinTableName");
LJCComments.SetComment isContinue:
$join = $joins->Add("JoinTableName");
LJCComments.GetComment include:
///$join->JoinOns->Add("FromColumnName", "ToColumnName");
LJCComments.SetComment isContinue:
$join->JoinOns->Add("FromColumnName", "ToColumnName");
LJCComments.GetComment include:
///$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");
LJCComments.SetComment isContinue:
$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$sql = LJCSQLBuilder::CreateSelect("TableName", $schemaColumns
LJCComments.SetComment isContinue:
$sql = LJCSQLBuilder::CreateSelect("TableName", $schemaColumns
LJCComments.GetComment include:
///  , $keyColumns, $propertyNames, $joins);
LJCComments.SetComment isContinue:
  , $keyColumns, $propertyNames, $joins);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $sql =
LJCComments.SetComment isContinue:
// $sql =
LJCComments.GetComment include:
///// select
LJCComments.SetComment isContinue:
// select
LJCComments.GetComment include:
/////   TableName.ID,
LJCComments.SetComment isContinue:
//   TableName.ID,
LJCComments.GetComment include:
/////   TableName.Name
LJCComments.SetComment isContinue:
//   TableName.Name
LJCComments.GetComment include:
/////   JoinTableName.JoinColumnName as ResultName
LJCComments.SetComment isContinue:
//   JoinTableName.JoinColumnName as ResultName
LJCComments.GetComment include:
///// from TableName;
LJCComments.SetComment isContinue:
// from TableName;
LJCComments.GetComment include:
///// left join JoinTableName
LJCComments.SetComment isContinue:
// left join JoinTableName
LJCComments.GetComment include:
/////   on ((TableName.FromColumnName = JoinTableName.ToColumnName))
LJCComments.SetComment isContinue:
//   on ((TableName.FromColumnName = JoinTableName.ToColumnName))
LJCComments.GetComment include:
///// where TableName.ID = 1
LJCComments.SetComment isContinue:
// where TableName.ID = 1
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates an Update SQL statement.</summary>
LJCComments.SetComment comment:
Creates an Update SQL statement.
LJCComments.GetComment include:
///     <param name="$tableName">The table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$keyColumns">The where clause key columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$dataColumns">The Data columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Update SQL statement.</returns>
LJCComments.SetComment comment:
The Update SQL statement.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$keyColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$keyColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$keyColumns->Add("ID", value:1);
LJCComments.SetComment isContinue:
$keyColumns->Add("ID", value:1);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dataColumns = new DbColumns();
LJCComments.SetComment isContinue:
$dataColumns = new DbColumns();
LJCComments.GetComment include:
///$dataColumns->Add("FirstName", value: "First");
LJCComments.SetComment isContinue:
$dataColumns->Add("FirstName", value: "First");
LJCComments.GetComment include:
///$dataColumns->Add("LastName", value: "Last");
LJCComments.SetComment isContinue:
$dataColumns->Add("LastName", value: "Last");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$sql = LJCSQLBuilder::CreateUpdate("TableName", $keyColumns
LJCComments.SetComment isContinue:
$sql = LJCSQLBuilder::CreateUpdate("TableName", $keyColumns
LJCComments.GetComment include:
///  , $dataColumns);
LJCComments.SetComment isContinue:
  , $dataColumns);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $sql =
LJCComments.SetComment isContinue:
// $sql =
LJCComments.GetComment include:
///// update TableName set
LJCComments.SetComment isContinue:
// update TableName set
LJCComments.GetComment include:
/////   FirstName = 'First',
LJCComments.SetComment isContinue:
//   FirstName = 'First',
LJCComments.GetComment include:
/////   LastName = 'Last'
LJCComments.SetComment isContinue:
//   LastName = 'Last'
LJCComments.GetComment include:
///// where TableName.ID = 1
LJCComments.SetComment isContinue:
// where TableName.ID = 1
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Get the JoinOn statements.</summary>
LJCComments.SetComment comment:
Get the JoinOn statements.
LJCComments.GetComment include:
///     <param name="$tableName">The request table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$join">The Join object.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$recursive">Indicates if it is a recursive call.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The JoinOn statements.</returns>
LJCComments.SetComment comment:
The JoinOn statements.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$joins = new LJCJoins();
LJCComments.SetComment isContinue:
$joins = new LJCJoins();
LJCComments.GetComment include:
///$join = $joins->Add("JoinTableName");
LJCComments.SetComment isContinue:
$join = $joins->Add("JoinTableName");
LJCComments.GetComment include:
///$join->JoinOns->Add("FromColumnName", "ToColumnName");
LJCComments.SetComment isContinue:
$join->JoinOns->Add("FromColumnName", "ToColumnName");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates the join statement.
LJCComments.GetComment include:
/// <summary>Creates the join statement.</summary>
LJCComments.SetComment comment:
Creates the join statement.
LJCComments.GetComment include:
///     <param name="$tableName">The request table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$joins">The Collection of Join objects.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Join clause.</returns>
LJCComments.SetComment comment:
The Join clause.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$joins = new LJCJoins();
LJCComments.SetComment isContinue:
$joins = new LJCJoins();
LJCComments.GetComment include:
///$join = $joins->Add("JoinTableName");
LJCComments.SetComment isContinue:
$join = $joins->Add("JoinTableName");
LJCComments.GetComment include:
///$join->JoinOns->Add("FromColumnName", "ToColumnName");
LJCComments.SetComment isContinue:
$join->JoinOns->Add("FromColumnName", "ToColumnName");
LJCComments.GetComment include:
///$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");
LJCComments.SetComment isContinue:
$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$schemaColumns = $dataManager->SchemaColumns;
LJCComments.SetComment isContinue:
$schemaColumns = $dataManager->SchemaColumns;
LJCComments.GetComment include:
///$sql = "select\r\n";
LJCComments.SetComment isContinue:
$sql = "select\r\n";
LJCComments.GetComment include:
///$sql .= LJCSQLBuilder::SQLColumns($tableName, $schemaColumns
LJCComments.SetComment isContinue:
$sql .= LJCSQLBuilder::SQLColumns($tableName, $schemaColumns
LJCComments.GetComment include:
///  , joins: $joins);
LJCComments.SetComment isContinue:
  , joins: $joins);
LJCComments.GetComment include:
///$sql .= "from $tableName \r\n";
LJCComments.SetComment isContinue:
$sql .= "from $tableName \r\n";
LJCComments.GetComment include:
///$sql .= LJCSQLBuilder::GetJoinStatement($tableName, $joins);
LJCComments.SetComment isContinue:
$sql .= LJCSQLBuilder::GetJoinStatement($tableName, $joins);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Get the full join table string.</summary>
LJCComments.SetComment comment:
Get the full join table string.
LJCComments.GetComment include:
///     <param name="$join">The Join object.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Join table string.</returns>
LJCComments.SetComment comment:
The Join table string.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates an OrderBy clause.</summary>
LJCComments.SetComment comment:
Creates an OrderBy clause.
LJCComments.GetComment include:
///     <param name="$orderByNames">The OrderBy names array.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The OrderBy clause.</returns>
LJCComments.SetComment comment:
The OrderBy clause.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the columns for a Select SQL statement.</summary>
LJCComments.SetComment comment:
Creates the columns for a Select SQL statement.
LJCComments.GetComment include:
///     <param name="$tableName">The request Table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$sqlColumns">The included columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$includeParens">Includes the statement parenthesis.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$joins">The Join definitions.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Select columns.</returns>
LJCComments.SetComment comment:
The Select columns.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$joins = new LJCJoins();
LJCComments.SetComment isContinue:
$joins = new LJCJoins();
LJCComments.GetComment include:
///$join = $joins->Add("JoinTableName");
LJCComments.SetComment isContinue:
$join = $joins->Add("JoinTableName");
LJCComments.GetComment include:
///$join->JoinOns->Add("FromColumnName", "ToColumnName");
LJCComments.SetComment isContinue:
$join->JoinOns->Add("FromColumnName", "ToColumnName");
LJCComments.GetComment include:
///$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");
LJCComments.SetComment isContinue:
$join->Columns->Add("JoinColumnName", "PropertyName", "ResultName");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$dbColumns = new DbColumns();
LJCComments.SetComment isContinue:
$dbColumns = new DbColumns();
LJCComments.GetComment include:
///$dbColumns->Add("ID", dataTypeName: "int");
LJCComments.SetComment isContinue:
$dbColumns->Add("ID", dataTypeName: "int");
LJCComments.GetComment include:
///$dbColumns->Add("Name");
LJCComments.SetComment isContinue:
$dbColumns->Add("Name");
LJCComments.GetComment include:
///$columns = LJCSQLBuilder::SQLColumns($tableName, $dbColumns, $joins);
LJCComments.SetComment isContinue:
$columns = LJCSQLBuilder::SQLColumns($tableName, $dbColumns, $joins);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $columns =
LJCComments.SetComment isContinue:
// $columns =
LJCComments.GetComment include:
/////  TableName.ID,
LJCComments.SetComment isContinue:
//  TableName.ID,
LJCComments.GetComment include:
/////  TableName.Name,
LJCComments.SetComment isContinue:
//  TableName.Name,
LJCComments.GetComment include:
/////  JoinTableName.JoinColumnName as ResultName
LJCComments.SetComment isContinue:
//  JoinTableName.JoinColumnName as ResultName
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the Join columns for a Select SQL statement.</summary>
LJCComments.SetComment comment:
Creates the Join columns for a Select SQL statement.
LJCComments.GetComment include:
///     <param name="$joins">The Join definitions.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Join columns.</returns>
LJCComments.SetComment comment:
The Join columns.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the value columns for an Update SQL statement.</summary>
LJCComments.SetComment comment:
Creates the value columns for an Update SQL statement.
LJCComments.GetComment include:
///     <param name="$dataColumns">The Data columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$isUpdate">Indicates if the values are for an Update.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$includeParens">Includes the statement parenthesis.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Add and Update value columns.</returns>
LJCComments.SetComment comment:
The Add and Update value columns.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDataManagerLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dbColumns = new DbColumns();
LJCComments.SetComment isContinue:
$dbColumns = new DbColumns();
LJCComments.GetComment include:
///$dbColumns->Add("FirstName", value: "First");
LJCComments.SetComment isContinue:
$dbColumns->Add("FirstName", value: "First");
LJCComments.GetComment include:
///$dbColumns->Add("LastName", value: "Last");
LJCComments.SetComment isContinue:
$dbColumns->Add("LastName", value: "Last");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// For an Update "set" statement.
LJCComments.SetComment isContinue:
// For an Update "set" statement.
LJCComments.GetComment include:
///$columns = $LJCSQLBuilder::SQLValueColumns($dbColumns, true);
LJCComments.SetComment isContinue:
$columns = $LJCSQLBuilder::SQLValueColumns($dbColumns, true);
LJCComments.GetComment include:
///// $columns =
LJCComments.SetComment isContinue:
// $columns =
LJCComments.GetComment include:
/////  FirstName = 'First',
LJCComments.SetComment isContinue:
//  FirstName = 'First',
LJCComments.GetComment include:
/////  LastName = 'Last'
LJCComments.SetComment isContinue:
//  LastName = 'Last'
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// For an Insert "values" statement.
LJCComments.SetComment isContinue:
// For an Insert "values" statement.
LJCComments.GetComment include:
///$columns = LJCSQLBuilder::SQLValueColumns($dbColumns, false, true);
LJCComments.SetComment isContinue:
$columns = LJCSQLBuilder::SQLValueColumns($dbColumns, false, true);
LJCComments.GetComment include:
///// $columns =
LJCComments.SetComment isContinue:
// $columns =
LJCComments.GetComment include:
/////  (
LJCComments.SetComment isContinue:
//  (
LJCComments.GetComment include:
/////   'First',
LJCComments.SetComment isContinue:
//   'First',
LJCComments.GetComment include:
/////   'Last'
LJCComments.SetComment isContinue:
//   'Last'
LJCComments.GetComment include:
/////  )
LJCComments.SetComment isContinue:
//  )
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The PDO Data Access Library
LJCComments.SetComment comment:
Contains the Connection values.
LJCComments.GetComment include:
/// <summary>Initializes a class instance with the provided values.</summary>
LJCComments.SetComment comment:
Initializes a class instance with the provided values.
LJCComments.GetComment include:
///     <param name="$dbServer">The DB Server name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$dbName">The Database name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$userID">The user name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$password">The user Password.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$database = "DatabaseName";
LJCComments.SetComment isContinue:
$database = "DatabaseName";
LJCComments.GetComment include:
///$userID = "UserID";
LJCComments.SetComment isContinue:
$userID = "UserID";
LJCComments.GetComment include:
///$password = "Password":
LJCComments.SetComment isContinue:
$password = "Password":
LJCComments.GetComment include:
///$connectionValues = new LJCConnectionValues("localhost", $database, $userID
LJCComments.SetComment isContinue:
$connectionValues = new LJCConnectionValues("localhost", $database, $userID
LJCComments.GetComment include:
///  , $password);
LJCComments.SetComment isContinue:
  , $password);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Database name.
LJCComments.SetComment comment:
The DB Server name.
LJCComments.SetComment comment:
The user Password.
LJCComments.SetComment comment:
The User ID.
LJCComments.GetComment include:
/// <summary>Provides standard PDO Data Access.</summary>
LJCComments.SetComment comment:
Provides standard PDO Data Access.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The Data Access class encapsulates the repetitive code required to
LJCComments.SetComment isContinue:
 The Data Access class encapsulates the repetitive code required to
LJCComments.GetComment include:
/// perform common database functions using PDO. This reduces the amount of
LJCComments.SetComment isContinue:
 perform common database functions using PDO. This reduces the amount of
LJCComments.GetComment include:
/// application code required to access this functionality and provides a
LJCComments.SetComment isContinue:
 application code required to access this functionality and provides a
LJCComments.GetComment include:
/// standard location for implementing common best practices.
LJCComments.SetComment isContinue:
 standard location for implementing common best practices.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Returns a data value if the element exists, otherwise returns null.</summary>
LJCComments.SetComment isContinue:
 Returns a data value if the element exists, otherwise returns null.
LJCComments.GetComment include:
///     <param name="$row">The data row columns.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$columnName">The column name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The data value.</returns>
LJCComments.SetComment comment:
The data value.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Returns null if the element does not exist.
LJCComments.SetComment isContinue:
 Returns null if the element does not exist.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.SetComment isContinue:
$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$sql = "select ID, Name from $tableName where ID = 1";
LJCComments.SetComment isContinue:
$sql = "select ID, Name from $tableName where ID = 1";
LJCComments.GetComment include:
///$row = $dbAccess->Retrieve($sql);
LJCComments.SetComment isContinue:
$row = $dbAccess->Retrieve($sql);
LJCComments.GetComment include:
///$id = LJCDbAccess::GetValue($row, "ID");
LJCComments.SetComment isContinue:
$id = LJCDbAccess::GetValue($row, "ID");
LJCComments.GetComment include:
///$name = LJCDbAccess::GetValue($row, "Name");
LJCComments.SetComment isContinue:
$name = LJCDbAccess::GetValue($row, "Name");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Initializes a class instance.</summary>
LJCComments.SetComment comment:
Initializes a class instance.
LJCComments.GetComment include:
///     <param name="$connectionValues">The Connection values.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$database = "DatabaseName";
LJCComments.SetComment isContinue:
$database = "DatabaseName";
LJCComments.GetComment include:
///$userID = "UserID";
LJCComments.SetComment isContinue:
$userID = "UserID";
LJCComments.GetComment include:
///$password = "Password":
LJCComments.SetComment isContinue:
$password = "Password":
LJCComments.GetComment include:
///$connectionValues = new LJCConnectionValues("localhost", $database, $userID
LJCComments.SetComment isContinue:
$connectionValues = new LJCConnectionValues("localhost", $database, $userID
LJCComments.GetComment include:
///  , $password);
LJCComments.SetComment isContinue:
  , $password);
LJCComments.GetComment include:
///$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.SetComment isContinue:
$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Executes a non-query sql statement.</summary>
LJCComments.SetComment comment:
Executes a non-query sql statement.
LJCComments.GetComment include:
///     <param name="$sql">The SQL statement.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The count of affected records.</returns>
LJCComments.SetComment comment:
The count of affected records.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.SetComment isContinue:
$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$sql = "delete from $tableName where ID = 1";
LJCComments.SetComment isContinue:
$sql = "delete from $tableName where ID = 1";
LJCComments.GetComment include:
///$affectedCount = $dbAccess->Execute($sql);
LJCComments.SetComment isContinue:
$affectedCount = $dbAccess->Execute($sql);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Loads the records for the provided SQL statement.</summary>
LJCComments.SetComment comment:
Loads the records for the provided SQL statement.
LJCComments.GetComment include:
///     <param name="$sql">The SQL statement.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>An array of data records.</returns>
LJCComments.SetComment comment:
An array of data records.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.SetComment isContinue:
$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$sql = "select * from $tableName";
LJCComments.SetComment isContinue:
$sql = "select * from $tableName";
LJCComments.GetComment include:
///$rows = $dbAccess->Load($sql);
LJCComments.SetComment isContinue:
$rows = $dbAccess->Load($sql);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Retrieves a record for the provided SQL statement.</summary>
LJCComments.SetComment comment:
Retrieves a record for the provided SQL statement.
LJCComments.GetComment include:
///     <param name="$sql">The SQL statement.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>An array of record columns.</returns>
LJCComments.SetComment comment:
An array of record columns.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.SetComment isContinue:
$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$sql = "select * from $tableName where ID = 1";
LJCComments.SetComment isContinue:
$sql = "select * from $tableName where ID = 1";
LJCComments.GetComment include:
///$row = $dbAccess->Retrieve($sql);
LJCComments.SetComment isContinue:
$row = $dbAccess->Retrieve($sql);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the PDO connection.</summary>
LJCComments.SetComment comment:
Creates the PDO connection.
LJCComments.GetComment include:
/// <returns>The PDO connection object.</returns>
LJCComments.SetComment comment:
The PDO connection object.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.SetComment isContinue:
$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$connection = $dbAccess->GetConnection();
LJCComments.SetComment isContinue:
$connection = $dbAccess->GetConnection();
LJCComments.GetComment include:
///if ($connection != null)
LJCComments.SetComment isContinue:
if ($connection != null)
LJCComments.GetComment include:
///{
LJCComments.SetComment isContinue:
{
LJCComments.GetComment include:
///  // Use connection to perform low level data access.
LJCComments.SetComment isContinue:
  // Use connection to perform low level data access.
LJCComments.GetComment include:
///}
LJCComments.SetComment isContinue:
}
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Returns the Table Schema DbColumns collection.</summary>
LJCComments.SetComment comment:
Returns the Table Schema DbColumns collection.
LJCComments.GetComment include:
///     <param name="$dbName">The Database name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$tableName">The Table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>A DbColumns collection of column definitions.</returns>
LJCComments.SetComment comment:
A DbColumns collection of column definitions.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.SetComment isContinue:
$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$dbColumns = $dbAccess->LoadTableSchema($database, $tableName);
LJCComments.SetComment isContinue:
$dbColumns = $dbAccess->LoadTableSchema($database, $tableName);
LJCComments.GetComment include:
///if (count($dbColumns) > 0)
LJCComments.SetComment isContinue:
if (count($dbColumns) > 0)
LJCComments.GetComment include:
///{
LJCComments.SetComment isContinue:
{
LJCComments.GetComment include:
///  // Use DbColumns data definitions.
LJCComments.SetComment isContinue:
  // Use DbColumns data definitions.
LJCComments.GetComment include:
///}
LJCComments.SetComment isContinue:
}
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Sets the $ConnectionValues property.</summary>
LJCComments.SetComment comment:
Sets the $ConnectionValues property.
LJCComments.GetComment include:
///     <param name="$dbServer">The DB Server name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$dbName">The Database name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$userID">The user name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$password">The user Password.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// See constructor for how to create $connectionValues.
LJCComments.SetComment isContinue:
// See constructor for how to create $connectionValues.
LJCComments.GetComment include:
///$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.SetComment isContinue:
$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// Change some of the object properties.
LJCComments.SetComment isContinue:
// Change some of the object properties.
LJCComments.GetComment include:
///$tableName = "NewTableName";
LJCComments.SetComment isContinue:
$tableName = "NewTableName";
LJCComments.GetComment include:
///$dbAccess->SetConnectionValues($database, $tableName);
LJCComments.SetComment isContinue:
$dbAccess->SetConnectionValues($database, $tableName);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Database Connection values.
LJCComments.GetComment include:
/// <summary>Represents a DB Column definition.</summary>
LJCComments.SetComment comment:
Represents a DB Column definition.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The LJCDbColumn object is used extensively throughout the LJC PHP files,
LJCComments.SetComment isContinue:
 The LJCDbColumn object is used extensively throughout the LJC PHP files,
LJCComments.GetComment include:
/// utilities and applications; wherever data elements need to be  dynamically
LJCComments.SetComment isContinue:
 utilities and applications; wherever data elements need to be  dynamically
LJCComments.GetComment include:
/// defined or manipulated. It is commonly used to define  database table
LJCComments.SetComment isContinue:
 defined or manipulated. It is commonly used to define  database table
LJCComments.GetComment include:
/// columns.
LJCComments.SetComment isContinue:
 columns.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The LJCDbColumn object is often used to facilitate moving data between a
LJCComments.SetComment isContinue:
 The LJCDbColumn object is often used to facilitate moving data between a
LJCComments.GetComment include:
/// database table column and a data object.
LJCComments.SetComment isContinue:
 database table column and a data object.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// A Data Object is an instance of a class that contains properties for each
LJCComments.SetComment isContinue:
 A Data Object is an instance of a class that contains properties for each
LJCComments.GetComment include:
/// data element in a data source row. It is a strongly typed, object
LJCComments.SetComment isContinue:
 data element in a data source row. It is a strongly typed, object
LJCComments.GetComment include:
/// oriented representation of the data source row for use in code. It may
LJCComments.SetComment isContinue:
 oriented representation of the data source row for use in code. It may
LJCComments.GetComment include:
/// contain common methods to assist with cloning and other Data Object
LJCComments.SetComment isContinue:
 contain common methods to assist with cloning and other Data Object
LJCComments.GetComment include:
/// functions.
LJCComments.SetComment isContinue:
 functions.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Coverts MySQL type names to PHP type names.</summary>
LJCComments.SetComment comment:
Coverts MySQL type names to PHP type names.
LJCComments.GetComment include:
///     <param name="$mySQLTypeName">The MySQL data type name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The PHP data type name.</returns>
LJCComments.SetComment comment:
The PHP data type name.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dbColumn = new LJCDbColumn("ID", dadtaTypeName: "int");
LJCComments.SetComment isContinue:
$dbColumn = new LJCDbColumn("ID", dadtaTypeName: "int");
LJCComments.GetComment include:
///$phpType = $dbColumn->GetDataType("bit");
LJCComments.SetComment isContinue:
$phpType = $dbColumn->GetDataType("bit");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Initializes a class instance.</summary>
LJCComments.SetComment comment:
Initializes a class instance.
LJCComments.GetComment include:
///     <param name="$columnName">The Column name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$propertyName">The Property name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$dataTypeName">The DataType name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$value">The Column value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dbColumn = new LJCDbColumn("Name");
LJCComments.SetComment isContinue:
$dbColumn = new LJCDbColumn("Name");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates an object clone.
LJCComments.SetComment comment:
Indicates if the Column allows nulls.
LJCComments.SetComment comment:
The AutoIncrement flag.
LJCComments.SetComment comment:
The Column name.
LJCComments.SetComment comment:
The DataType name.
LJCComments.SetComment comment:
The Default value.
LJCComments.SetComment comment:
The MaxLength value.
LJCComments.SetComment comment:
The MySQL Type name.
LJCComments.SetComment comment:
The Property name.
LJCComments.SetComment comment:
The RenameAs value.
LJCComments.SetComment comment:
The Column value.
LJCComments.SetComment comment:
The Where clause boolean operator.
LJCComments.SetComment comment:
The Where clause comparison operator.
LJCComments.GetComment include:
/// <summary>Represents a typed Collection of LJCDbColumn objects.</summary>
LJCComments.SetComment comment:
Represents a typed Collection of LJCDbColumn objects.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// It extends (inherits) from class LJCCollectionLib-LJCCollectionBase which
LJCComments.SetComment isContinue:
 It extends (inherits) from class LJCCollectionLib-LJCCollectionBase which
LJCComments.GetComment include:
/// provides the "foreach" and "count" functionality.
LJCComments.SetComment isContinue:
 provides the "foreach" and "count" functionality.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// It includes an AddObject() method that requires the strongly typed
LJCComments.SetComment isContinue:
 It includes an AddObject() method that requires the strongly typed
LJCComments.GetComment include:
/// LJCDbColumn object collection element. This is what makes the collection
LJCComments.SetComment isContinue:
 LJCDbColumn object collection element. This is what makes the collection
LJCComments.GetComment include:
/// strongly typed.
LJCComments.SetComment isContinue:
 strongly typed.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// The Get() method retrieves the internal array element by key.
LJCComments.SetComment isContinue:
 The Get() method retrieves the internal array element by key.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates an object and adds it to the collection.</summary>
LJCComments.SetComment comment:
Creates an object and adds it to the collection.
LJCComments.GetComment include:
///     <param name="$columnName">The Column name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$propertyName">The Property name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$dataTypeName">The DataType name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$value">The Column value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$key">The collection array key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dbColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$dbColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$dbColumns->Add("ID", dataTypeName: "int");
LJCComments.SetComment isContinue:
$dbColumns->Add("ID", dataTypeName: "int");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Adds an object and key value.</summary>
LJCComments.SetComment comment:
Adds an object and key value.
LJCComments.GetComment include:
///     <param name="$item">The DbColumn definition.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$key">The collection array key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dbColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$dbColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$dbColumn = new LJCDbColumn("Name");
LJCComments.SetComment isContinue:
$dbColumn = new LJCDbColumn("Name");
LJCComments.GetComment include:
///$dbColumns->AddObject($dbColumn);
LJCComments.SetComment isContinue:
$dbColumns->AddObject($dbColumn);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates an object clone.
LJCComments.GetComment include:
/// <summary>Get the item by Key value.</summary>
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
///     <param name="$key">The collection array key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The collection item.</returns>
LJCComments.SetComment comment:
The collection item.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dbColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$dbColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$dbColumns->Add("Name");
LJCComments.SetComment isContinue:
$dbColumns->Add("Name");
LJCComments.GetComment include:
///$dbColumn = $dbColumns->Get("Name");
LJCComments.SetComment isContinue:
$dbColumn = $dbColumns->Get("Name");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Get the column definitions that match the property names.
LJCComments.SetComment isContinue:
 Get the column definitions that match the property names.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///     <param name="$propertyNames">The collection of property names.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The definitions for the specified properties.</returns>
LJCComments.SetComment comment:
The definitions for the specified properties.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dbColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$dbColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$dbColumns->Add"FirstName");
LJCComments.SetComment isContinue:
$dbColumns->Add"FirstName");
LJCComments.GetComment include:
///$dbColumns->Add("MiddleName");
LJCComments.SetComment isContinue:
$dbColumns->Add("MiddleName");
LJCComments.GetComment include:
///$dbColumns->Add("LastName");
LJCComments.SetComment isContinue:
$dbColumns->Add("LastName");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$propertyNames = [];
LJCComments.SetComment isContinue:
$propertyNames = [];
LJCComments.GetComment include:
///$propertyNames[] = "FirstName";
LJCComments.SetComment isContinue:
$propertyNames[] = "FirstName";
LJCComments.GetComment include:
///$propertyNames[] = "LastName";
LJCComments.SetComment isContinue:
$propertyNames[] = "LastName";
LJCComments.GetComment include:
///$specificColumns = $dbColumns->GetColumns($propertyNames);
LJCComments.SetComment isContinue:
$specificColumns = $dbColumns->GetColumns($propertyNames);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Sets the PropertyName, RenameAs and Caption values for a column.
LJCComments.SetComment isContinue:
 Sets the PropertyName, RenameAs and Caption values for a column.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///     <param name="$columnName">The Column name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$propertyName">The Property name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$renameAs">The RenameAs name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$caption">The Caption value.</param>
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Sets the Where Clause operators.</summary>
LJCComments.SetComment comment:
Sets the Where Clause operators.
LJCComments.GetComment include:
///     <param name="$key">The collection array key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$compareOperator">The comparison operator.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$boolOperator">The boolean operator.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dbColumns = new LJCDbColumns();
LJCComments.SetComment isContinue:
$dbColumns = new LJCDbColumns();
LJCComments.GetComment include:
///$dbColumns->Add("Name", value: "%C%");
LJCComments.SetComment isContinue:
$dbColumns->Add("Name", value: "%C%");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $compareOperator - Any valid comparison operator; defaults to "=".
LJCComments.SetComment isContinue:
// $compareOperator - Any valid comparison operator; defaults to "=".
LJCComments.GetComment include:
///// $boolOperator - "and" or "or"; defaults to "and".
LJCComments.SetComment isContinue:
// $boolOperator - "and" or "or"; defaults to "and".
LJCComments.GetComment include:
///$dbColumns->SetWhereOperators("Name", "like", "or");
LJCComments.SetComment isContinue:
$dbColumns->SetWhereOperators("Name", "like", "or");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Represents a SQL Join.
LJCComments.GetComment include:
/// <summary>Initializes a class instance.</summary>
LJCComments.SetComment comment:
Initializes a class instance.
LJCComments.GetComment include:
///     <param name="$tableName">The Join table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$tableAlias">The Join table alias.</param>
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates an object clone.
LJCComments.SetComment comment:
The JoinOn definintions.
LJCComments.SetComment comment:
The Join type.
LJCComments.SetComment comment:
The Schema name.
LJCComments.SetComment comment:
The table alias.
LJCComments.SetComment comment:
The table name.
LJCComments.SetComment comment:
Represents a collection of LJCJoin objects.
LJCComments.SetComment comment:
Creates an object and adds it to the collection.
LJCComments.GetComment include:
/// <summary>Creates an object and adds it to the collection.</summary>
LJCComments.SetComment comment:
Creates an object and adds it to the collection.
LJCComments.GetComment include:
///     <param name="$tableName">The Join table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$tableAlias">The Join table alias.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$key">The optional key value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment isContinue:
 $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
/// require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
 require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $joins = new LJCJoins();
LJCComments.SetComment isContinue:
 $joins = new LJCJoins();
LJCComments.GetComment include:
/// $joins->Add("TableName", "alias");
LJCComments.SetComment isContinue:
 $joins->Add("TableName", "alias");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Adds an object and key value.
LJCComments.GetComment include:
/// <summary>Adds an object and key value.</summary>
LJCComments.SetComment comment:
Adds an object and key value.
LJCComments.GetComment include:
///     <param name="$item">The item to add to the collection.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$key">The optional key value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment isContinue:
 $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
/// require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
 require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $joins = new LJCJoins();
LJCComments.SetComment isContinue:
 $joins = new LJCJoins();
LJCComments.GetComment include:
/// $join = new LJCJoin("TableName");
LJCComments.SetComment isContinue:
 $join = new LJCJoin("TableName");
LJCComments.GetComment include:
/// $joins->AddObject($join);
LJCComments.SetComment isContinue:
 $joins->AddObject($join);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates an object clone.
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
/// <summary>Get the item by Key value.</summary>
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
///     <param name="$key">The key value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$throwError">The optional throw error flag.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment isContinue:
 $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
/// require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
 require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $joins = new LJCJoins();
LJCComments.SetComment isContinue:
 $joins = new LJCJoins();
LJCComments.GetComment include:
/// $joins->Add("TableName");
LJCComments.SetComment isContinue:
 $joins->Add("TableName");
LJCComments.GetComment include:
/// $join = $joins->Get("TableName");
LJCComments.SetComment isContinue:
 $join = $joins->Get("TableName");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Represents a SQL JoinOn.
LJCComments.SetComment comment:
Initializes a class instance.
LJCComments.GetComment include:
/// <summary>Initializes a class instance.</summary>
LJCComments.SetComment comment:
Initializes a class instance.
LJCComments.GetComment include:
///     <param name="$fromColumnName">The 'from' column name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$toColumnName">The 'to' column name.</param>
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates an object clone.
LJCComments.SetComment comment:
The Boolean Operator value.
LJCComments.SetComment comment:
The 'From' column name.
LJCComments.SetComment comment:
The Join On Operator.
LJCComments.SetComment comment:
The contained JoinOns.
LJCComments.SetComment comment:
The 'To' column name.
LJCComments.SetComment comment:
Represents a collection of LJCJoin objects.
LJCComments.GetComment include:
/// <summary>Creates an object and adds it to the collection.</summary>
LJCComments.SetComment comment:
Creates an object and adds it to the collection.
LJCComments.GetComment include:
///     <param name="$fromColumnName">The 'from' column name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$toColumnName">The 'to' column name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$key">The optional key value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment isContinue:
 $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
/// require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
 require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $joinOns = new LJCJoinOns();
LJCComments.SetComment isContinue:
 $joinOns = new LJCJoinOns();
LJCComments.GetComment include:
/// $joinOns->Add("FromColumnName", "ToColumnName");
LJCComments.SetComment isContinue:
 $joinOns->Add("FromColumnName", "ToColumnName");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Adds an object and key value.</summary>
LJCComments.SetComment comment:
Adds an object and key value.
LJCComments.GetComment include:
///     <param name="$item">The item to add to the collection.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$key">The optional key value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment isContinue:
 $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
/// require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
 require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $joinOns = new LJCJoinOns();
LJCComments.SetComment isContinue:
 $joinOns = new LJCJoinOns();
LJCComments.GetComment include:
/// $joinOn = new LJCJoinOn("FromColumnName", "ToColumnName");
LJCComments.SetComment isContinue:
 $joinOn = new LJCJoinOn("FromColumnName", "ToColumnName");
LJCComments.GetComment include:
/// $joinOns->AddObject($joinOn);
LJCComments.SetComment isContinue:
 $joinOns->AddObject($joinOn);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates an object clone.
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
/// <summary>Get the item by Key value.</summary>
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
///     <param name="$key">The key value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$throwError">The optional throw error flag.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment isContinue:
 $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
/// require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
 require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $joinOns = new LJCJoins();
LJCComments.SetComment isContinue:
 $joinOns = new LJCJoins();
LJCComments.GetComment include:
/// $joinOns->Add("FromColumnName", "ToColumnName");
LJCComments.SetComment isContinue:
 $joinOns->Add("FromColumnName", "ToColumnName");
LJCComments.GetComment include:
/// $joinOn = $joinOns->Get("FromColumnName");
LJCComments.SetComment isContinue:
 $joinOn = $joinOns->Get("FromColumnName");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Common Text Output Class Library
LJCComments.SetComment comment:
Represents a built string value.
LJCComments.SetComment comment:
Initializes a class instance.
LJCComments.GetComment include:
/// <summary>Appends text with indents.</summary>
LJCComments.SetComment comment:
Appends text with indents.
LJCComments.GetComment include:
///     <param name="$text">The text value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$indent">The number of tabs to add to the line beginning.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$addBreak">Adds an HTML break before the cr/lf.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCTextLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCTextLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$builder = new StringBuilder();
LJCComments.SetComment isContinue:
$builder = new StringBuilder();
LJCComments.GetComment include:
///$builder->Append("First ");
LJCComments.SetComment isContinue:
$builder->Append("First ");
LJCComments.GetComment include:
///$builder->Append("Name");
LJCComments.SetComment isContinue:
$builder->Append("Name");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $text = "First Name"
LJCComments.SetComment isContinue:
// $text = "First Name"
LJCComments.GetComment include:
///$text = $builder->ToString();
LJCComments.SetComment isContinue:
$text = $builder->ToString();
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Appends a text line with indents.</summary>
LJCComments.SetComment comment:
Appends a text line with indents.
LJCComments.GetComment include:
///     <param name="$text">The text value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$indent">The number of tabs to add to the line beginning.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$addBreak">Adds an HTML break before the cr/lf.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCTextLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCTextLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$builder = new StringBuilder();
LJCComments.SetComment isContinue:
$builder = new StringBuilder();
LJCComments.GetComment include:
///$builder->AppendLine("First");
LJCComments.SetComment isContinue:
$builder->AppendLine("First");
LJCComments.GetComment include:
///$builder->AppendLine("Second", 1);
LJCComments.SetComment isContinue:
$builder->AppendLine("Second", 1);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $text =
LJCComments.SetComment isContinue:
// $text =
LJCComments.GetComment include:
///// First
LJCComments.SetComment isContinue:
// First
LJCComments.GetComment include:
/////   Second
LJCComments.SetComment isContinue:
//   Second
LJCComments.GetComment include:
///$text = $builder->ToString();
LJCComments.SetComment isContinue:
$text = $builder->ToString();
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Appends a text line with begin tag, end tag and indents.</summary>
LJCComments.SetComment comment:
Appends a text line with begin tag, end tag and indents.
LJCComments.GetComment include:
///     <param name="$tag">The tag value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$text">The text value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$indent">The number of tabs to add to the line beginning.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$addBreak">Adds an HTML break before the cr/lf.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCTextLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCTextLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$builder = new StringBuilder();
LJCComments.SetComment isContinue:
$builder = new StringBuilder();
LJCComments.GetComment include:
///$builder->AppendTags("First", "FirstValue", 0, true);
LJCComments.SetComment isContinue:
$builder->AppendTags("First", "FirstValue", 0, true);
LJCComments.GetComment include:
///$builder->AppendTags("Second", "SecondValue", 1, true);
LJCComments.SetComment isContinue:
$builder->AppendTags("Second", "SecondValue", 1, true);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $text =
LJCComments.SetComment isContinue:
// $text =
LJCComments.GetComment include:
///// &amp;lt;First&amp;gt;FirstValue&amp;lt;/First&amp;gt;&amp;lt;br /&amp;gt;
LJCComments.SetComment isContinue:
// &amp;lt;First&amp;gt;FirstValue&amp;lt;/First&amp;gt;&amp;lt;br /&amp;gt;
LJCComments.GetComment include:
/////   &amp;lt;Second&amp;gt;SecondValue&amp;lt;/Second&amp;gt;&amp;lt;br /&amp;gt;
LJCComments.SetComment isContinue:
//   &amp;lt;Second&amp;gt;SecondValue&amp;lt;/Second&amp;gt;&amp;lt;br /&amp;gt;
LJCComments.GetComment include:
///$text = $builder->ToString();
LJCComments.SetComment isContinue:
$text = $builder->ToString();
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Gets the current builder string length.
LJCComments.SetComment comment:
Gets the built string.
LJCComments.SetComment comment:
The HTML table column definition.
LJCComments.GetComment include:
/// <summary>Initializes an object instance.</summary>
LJCComments.SetComment comment:
Initializes an object instance.
LJCComments.GetComment include:
///     <param name="$columnName">The column name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$headingName">The heading name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$style">The style value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$width">The column width.</param>
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Column name.
LJCComments.SetComment comment:
The Column Heading name.
LJCComments.SetComment comment:
The Style value.
LJCComments.SetComment comment:
The Column width.
LJCComments.SetComment comment:
Contains HTML output methods.
LJCComments.GetComment include:
/// <summary>Writes an HTML table header row.</summary>
LJCComments.SetComment comment:
Writes an HTML table header row.
LJCComments.GetComment include:
///     <param name="$columns">The column definitions.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$width">The column width.</param>
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Writes an HTML table data row.</summary>
LJCComments.SetComment comment:
Writes an HTML table data row.
LJCComments.GetComment include:
///     <param name="$dataObject">The data object.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$columns">The column definitions.</param>
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Contains console and file output methods.</summary>
LJCComments.SetComment comment:
Contains console and file output methods.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The Write() and WriteLine() static functions are used to write to stdout.
LJCComments.SetComment isContinue:
 The Write() and WriteLine() static functions are used to write to stdout.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// The FWrite() and FWriteLine() methods that write to the file stream
LJCComments.SetComment isContinue:
 The FWrite() and FWriteLine() methods that write to the file stream
LJCComments.GetComment include:
/// passed to the LJCWriter constructor.
LJCComments.SetComment isContinue:
 passed to the LJCWriter constructor.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Writes text with indents.</summary>
LJCComments.SetComment comment:
Writes text with indents.
LJCComments.GetComment include:
///     <param name="$text">The text value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$indentCount">The number of tabs to add to the line beginning.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$addBreak">Adds an HTML break before the cr/lf.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The text is sent to stdout using the echo php function.
LJCComments.SetComment isContinue:
 The text is sent to stdout using the echo php function.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// It is often used for Debug output.
LJCComments.SetComment isContinue:
 It is often used for Debug output.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///  require_once "$webCommonPath/LJCTextLib.php";
LJCComments.SetComment isContinue:
  require_once "$webCommonPath/LJCTextLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///  $text = "This value";
LJCComments.SetComment isContinue:
  $text = "This value";
LJCComments.GetComment include:
///  LJCWriter::Write("SomeMethod() text: $text");
LJCComments.SetComment isContinue:
  LJCWriter::Write("SomeMethod() text: $text");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Writes a text file.</summary>
LJCComments.SetComment comment:
Writes a text file.
LJCComments.GetComment include:
///     <param name="$text">The text value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$fileSpec">The file specification.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///  require_once "$webCommonPath/LJCTextLib.php";
LJCComments.SetComment isContinue:
  require_once "$webCommonPath/LJCTextLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///  $text = "This is some text.";
LJCComments.SetComment isContinue:
  $text = "This is some text.";
LJCComments.GetComment include:
///  LJCWriter::WriteFile($text, "Output.txt");
LJCComments.SetComment isContinue:
  LJCWriter::WriteFile($text, "Output.txt");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Writes a text line with indents.</summary>
LJCComments.SetComment comment:
Writes a text line with indents.
LJCComments.GetComment include:
///     <param name="$text">The text value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$indentCount">The number of tabs to add to the line beginning.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$addBreak">Adds an HTML break before the cr/lf.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The text is sent to stdout using the echo php function.
LJCComments.SetComment isContinue:
 The text is sent to stdout using the echo php function.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// It is often used for Debug output.
LJCComments.SetComment isContinue:
 It is often used for Debug output.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///  require_once "$webCommonPath/LJCTextLib.php";
LJCComments.SetComment isContinue:
  require_once "$webCommonPath/LJCTextLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///  $text = "This value";
LJCComments.SetComment isContinue:
  $text = "This value";
LJCComments.GetComment include:
///  LJCWriter::WriteLine("SomeMethod() text: $text");
LJCComments.SetComment isContinue:
  LJCWriter::WriteLine("SomeMethod() text: $text");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Initializes an object instance.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Writes file text with indents.</summary>
LJCComments.SetComment comment:
Writes file text with indents.
LJCComments.GetComment include:
///     <param name="$text">The text value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$indentCount">The number of tabs to add to the line beginning.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///  require_once "$webCommonPath/LJCTextLib.php";
LJCComments.SetComment isContinue:
  require_once "$webCommonPath/LJCTextLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///  $stream = fopen($fileName, "w");
LJCComments.SetComment isContinue:
  $stream = fopen($fileName, "w");
LJCComments.GetComment include:
///  $writer = new LJCWriter($stream);
LJCComments.SetComment isContinue:
  $writer = new LJCWriter($stream);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///  $writer->FWrite("This is some text.");
LJCComments.SetComment isContinue:
  $writer->FWrite("This is some text.");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Writes a file text line with indents.</summary>
LJCComments.SetComment comment:
Writes a file text line with indents.
LJCComments.GetComment include:
///     <param name="$text">The text value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$indentCount">The number of tabs to add to the line beginning.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///  require_once "$webCommonPath/LJCTextLib.php";
LJCComments.SetComment isContinue:
  require_once "$webCommonPath/LJCTextLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///  $stream = fopen($fileName, "w");
LJCComments.SetComment isContinue:
  $stream = fopen($fileName, "w");
LJCComments.GetComment include:
///  $writer = new LJCWriter($stream);
LJCComments.SetComment isContinue:
  $writer = new LJCWriter($stream);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///  $writer->FWriteLine("This is some text.");
LJCComments.SetComment isContinue:
  $writer->FWriteLine("This is some text.");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The utility to generate text from a template and custom data.
LJCComments.SetComment isContinue:
 The utility to generate text from a template and custom data.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The GenText text generator class.
LJCComments.SetComment comment:
Main Function: ProcessTemplate()
LJCComments.SetComment comment:
Initializes an object instance.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Processes the Template and Data to produce the output string.</summary>
LJCComments.SetComment comment:
Processes the Template and Data to produce the output string.
LJCComments.GetComment include:
///     <param name="$templateFileSpec">The template file.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$sections">The data sections.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $sections is an LJCSections object.
LJCComments.SetComment isContinue:
// $sections is an LJCSections object.
LJCComments.GetComment include:
///$sections = LJCSections::Deserialize("Sections.xml");
LJCComments.SetComment isContinue:
$sections = LJCSections::Deserialize("Sections.xml");
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$genText = new LJCGenText();
LJCComments.SetComment isContinue:
$genText = new LJCGenText();
LJCComments.GetComment include:
///$templateFileSpec = "GenDataLib\Templates\ClassTemplate.html";
LJCComments.SetComment isContinue:
$templateFileSpec = "GenDataLib\Templates\ClassTemplate.html";
LJCComments.GetComment include:
///$outputString = $genText->ProcessTemplate($templateFileSpec, $sections);
LJCComments.SetComment isContinue:
$outputString = $genText->ProcessTemplate($templateFileSpec, $sections);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>The GenText Section Library</summary>
LJCComments.SetComment comment:
The GenText Section Library
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains the GenData classes used in the text generation process. These
LJCComments.SetComment isContinue:
 Contains the GenData classes used in the text generation process. These
LJCComments.GetComment include:
/// classes are also used to Serialize and Deserialize the GenData XML that
LJCComments.SetComment isContinue:
 classes are also used to Serialize and Deserialize the GenData XML that
LJCComments.GetComment include:
/// defines the text Sections, Items and Replacement values.
LJCComments.SetComment isContinue:
 defines the text Sections, Items and Replacement values.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// GenData is the XML data format for the data that is merged with a text
LJCComments.SetComment isContinue:
 GenData is the XML data format for the data that is merged with a text
LJCComments.GetComment include:
/// template file  to generate a customized output file.
LJCComments.SetComment isContinue:
 template file  to generate a customized output file.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// See: &lt;a href="LJCSections/LJCSectionsDeserialize.html"&gt;LJCSections Deserialize()&lt;/a&gt; method
LJCComments.SetComment isContinue:
 See: &lt;a href="LJCSections/LJCSectionsDeserialize.html"&gt;LJCSections Deserialize()&lt;/a&gt; method
LJCComments.GetComment include:
/// for the layout of the GenData XML.
LJCComments.SetComment isContinue:
 for the layout of the GenData XML.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Represents a template Directive.</summary>
LJCComments.SetComment comment:
Represents a template Directive.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Template Directives are include in a valid comment line for whatever
LJCComments.SetComment isContinue:
 Template Directives are include in a valid comment line for whatever
LJCComments.GetComment include:
/// text type or language is being generated. A line which contains a
LJCComments.SetComment isContinue:
 text type or language is being generated. A line which contains a
LJCComments.GetComment include:
/// Directive will not appear in the generated text.
LJCComments.SetComment isContinue:
 Directive will not appear in the generated text.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The valid Directives are:
LJCComments.SetComment isContinue:
 The valid Directives are:
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// &amp;lt;!-- #SectionBegin Name --&gt;
LJCComments.SetComment isContinue:
 &amp;lt;!-- #SectionBegin Name --&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// Indicates the beginning of a Section.  The Directive includes the Section
LJCComments.SetComment isContinue:
 Indicates the beginning of a Section.  The Directive includes the Section
LJCComments.GetComment include:
/// name. The Section name is used in the  XMLData to indicate to which Section
LJCComments.SetComment isContinue:
 name. The Section name is used in the  XMLData to indicate to which Section
LJCComments.GetComment include:
/// the Items and Replacements apply.
LJCComments.SetComment isContinue:
 the Items and Replacements apply.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// &amp;lt;!-- #SectionEnd Name --&gt;
LJCComments.SetComment isContinue:
 &amp;lt;!-- #SectionEnd Name --&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// Indicates the end of a Section. The  section name is optional and simply
LJCComments.SetComment isContinue:
 Indicates the end of a Section. The  section name is optional and simply
LJCComments.GetComment include:
/// helps to identify what section is  ending.
LJCComments.SetComment isContinue:
 helps to identify what section is  ending.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// &amp;lt;!-- #Value _ReplacementValue_ --&gt;
LJCComments.SetComment isContinue:
 &amp;lt;!-- #Value _ReplacementValue_ --&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// A value Directive is currently informational only.  It identifies a
LJCComments.SetComment isContinue:
 A value Directive is currently informational only.  It identifies a
LJCComments.GetComment include:
/// Replacement value that appears in Items within that  Section.
LJCComments.SetComment isContinue:
 Replacement value that appears in Items within that  Section.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// &amp;lt;!-- #IfBegin _ReplacementValue_ ComparisonValue --&gt;
LJCComments.SetComment isContinue:
 &amp;lt;!-- #IfBegin _ReplacementValue_ ComparisonValue --&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// This Directive indicates the beginning of conditional text. If the
LJCComments.SetComment isContinue:
 This Directive indicates the beginning of conditional text. If the
LJCComments.GetComment include:
/// _ReplacementValue_ is  equal to the ComparisonValue, then the next text
LJCComments.SetComment isContinue:
 _ReplacementValue_ is  equal to the ComparisonValue, then the next text
LJCComments.GetComment include:
/// lines are generated up to  the #IfElse or #IfEnd directive.
LJCComments.SetComment isContinue:
 lines are generated up to  the #IfElse or #IfEnd directive.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// The ComparisonValue can be "NotNull". The #IfBegin will be true if the
LJCComments.SetComment isContinue:
 The ComparisonValue can be "NotNull". The #IfBegin will be true if the
LJCComments.GetComment include:
/// _ReplacementValue_ is not null.
LJCComments.SetComment isContinue:
 _ReplacementValue_ is not null.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// &amp;lt;!-- #IfElse --&gt;
LJCComments.SetComment isContinue:
 &amp;lt;!-- #IfElse --&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// The next text lines are generated  up to the #IfEnd Directive if the
LJCComments.SetComment isContinue:
 The next text lines are generated  up to the #IfEnd Directive if the
LJCComments.GetComment include:
/// #IfBegin Directive was false.
LJCComments.SetComment isContinue:
 #IfBegin Directive was false.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// &amp;lt;!-- #IfEnd _ReplacementValue_ comparisonValue --&gt;
LJCComments.SetComment isContinue:
 &amp;lt;!-- #IfEnd _ReplacementValue_ comparisonValue --&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// The end of the #IfBegin text. The _ReplacementValue_ and ComparisonValue
LJCComments.SetComment isContinue:
 The end of the #IfBegin text. The _ReplacementValue_ and ComparisonValue
LJCComments.GetComment include:
/// are optional and help to identify which #IfBegin is ending.
LJCComments.SetComment isContinue:
 are optional and help to identify which #IfBegin is ending.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Find any Directives in a line.</summary>
LJCComments.SetComment comment:
Find any Directives in a line.
LJCComments.GetComment include:
///     <param name="$line">The text line.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Directive object or null.</returns>
LJCComments.SetComment comment:
The Directive object or null.
LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment isContinue:
 $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
/// require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
 require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $line = "  // #SectionBegin Class
LJCComments.SetComment isContinue:
 $line = "  // #SectionBegin Class
LJCComments.GetComment include:
/// $directive = LJCDirective::Find($line);
LJCComments.SetComment isContinue:
 $directive = LJCDirective::Find($line);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary> Initializes an object instance.</summary>
LJCComments.SetComment comment:
 Initializes an object instance.
LJCComments.GetComment include:
///     <param name="$type">The Directive Type.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$name">The Directive name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment isContinue:
 $webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
/// require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
 require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $directive = new LJCDirective("SectionBegin", "Class");
LJCComments.SetComment isContinue:
 $directive = new LJCDirective("SectionBegin", "Class");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Directive Name.
LJCComments.SetComment comment:
The Directive Type.
LJCComments.SetComment comment:
The compare value.
LJCComments.GetComment include:
/// <summary>Represents a template Section.</summary>
LJCComments.SetComment comment:
Represents a template Section.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// A Section identifies a section of text for which there can be one or more
LJCComments.SetComment isContinue:
 A Section identifies a section of text for which there can be one or more
LJCComments.GetComment include:
/// items.
LJCComments.SetComment isContinue:
 items.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The text within the Section will be generated once for each Item identified
LJCComments.SetComment isContinue:
 The text within the Section will be generated once for each Item identified
LJCComments.GetComment include:
/// in the XMLData file. The Replacements for the current Item are applied to
LJCComments.SetComment isContinue:
 in the XMLData file. The Replacements for the current Item are applied to
LJCComments.GetComment include:
/// the text.
LJCComments.SetComment isContinue:
 the text.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// A Section can appear within another Section but must not cross Section
LJCComments.SetComment isContinue:
 A Section can appear within another Section but must not cross Section
LJCComments.GetComment include:
/// borders. The active Replacements will be for the current Item and the
LJCComments.SetComment isContinue:
 borders. The active Replacements will be for the current Item and the
LJCComments.GetComment include:
/// parent tree current Items. That is for all current Items in which the
LJCComments.SetComment isContinue:
 parent tree current Items. That is for all current Items in which the
LJCComments.GetComment include:
/// current section is enclosed.
LJCComments.SetComment isContinue:
 current section is enclosed.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Initializes an object instance.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates a copy of the current object.
LJCComments.SetComment comment:
The Section begin stream offset.
LJCComments.SetComment comment:
The Current Item object.
LJCComments.SetComment comment:
The Section Items.
LJCComments.SetComment comment:
The Section name.
LJCComments.GetComment include:
/// <summary>Represents a collection of Section objects.</summary>
LJCComments.SetComment comment:
Represents a collection of Section objects.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The LJCSections is the top level class for the GenData object tree.
LJCComments.SetComment isContinue:
 The LJCSections is the top level class for the GenData object tree.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// GenData is the XML data format for the data that is merged with a text
LJCComments.SetComment isContinue:
 GenData is the XML data format for the data that is merged with a text
LJCComments.GetComment include:
/// template file  to generate a customized output file.
LJCComments.SetComment isContinue:
 template file  to generate a customized output file.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;pre&gt;
LJCComments.SetComment isContinue:
 &lt;pre&gt;
LJCComments.GetComment include:
///   LJCSections&lt;br /&gt;
LJCComments.SetComment isContinue:
   LJCSections&lt;br /&gt;
LJCComments.GetComment include:
///     LJCSection&lt;br /&gt;
LJCComments.SetComment isContinue:
     LJCSection&lt;br /&gt;
LJCComments.GetComment include:
///       LJCItems&lt;br /&gt;
LJCComments.SetComment isContinue:
       LJCItems&lt;br /&gt;
LJCComments.GetComment include:
///         LJCItem&lt;br /&gt;
LJCComments.SetComment isContinue:
         LJCItem&lt;br /&gt;
LJCComments.GetComment include:
///           LJCReplacements&lt;br /&gt;
LJCComments.SetComment isContinue:
           LJCReplacements&lt;br /&gt;
LJCComments.GetComment include:
///             LJCReplacement
LJCComments.SetComment isContinue:
             LJCReplacement
LJCComments.GetComment include:
/// &lt;/pre&gt;
LJCComments.SetComment isContinue:
 &lt;/pre&gt;
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the data from a table definition.</summary>
LJCComments.SetComment comment:
Creates the data from a table definition.
LJCComments.GetComment include:
///     <param name="$dbColumns">The table columns definition.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$tableName">The Table name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$className">The Class name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The sections array.</returns>
LJCComments.SetComment comment:
The sections array.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCDBAccessLib.php";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.SetComment isContinue:
$dbAccess = new LJCDbAccess($connectionValues);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$tableName = "TableName";
LJCComments.SetComment isContinue:
$tableName = "TableName";
LJCComments.GetComment include:
///$dbColumns = $dbAccess->LoadTableSchema($database, $tableName);
LJCComments.SetComment isContinue:
$dbColumns = $dbAccess->LoadTableSchema($database, $tableName);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $sections is an LJCSections object.
LJCComments.SetComment isContinue:
// $sections is an LJCSections object.
LJCComments.GetComment include:
///$sections = LJCSections::CreateColumnData($dbColumns, $tableName
LJCComments.SetComment isContinue:
$sections = LJCSections::CreateColumnData($dbColumns, $tableName
LJCComments.GetComment include:
/// , "ClassName");
LJCComments.SetComment isContinue:
 , "ClassName");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary> Adds a Replacement to an Item.</summary>
LJCComments.SetComment comment:
 Adds a Replacement to an Item.
LJCComments.GetComment include:
///     <param name="$item">The Item object.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$name">The Replacement name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$value">The Replacement value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$sections = new LJCSections();
LJCComments.SetComment isContinue:
$sections = new LJCSections();
LJCComments.GetComment include:
///$section = new LJCSection("SectionName");
LJCComments.SetComment isContinue:
$section = new LJCSection("SectionName");
LJCComments.GetComment include:
///$sections->Add($section, $section->Name);
LJCComments.SetComment isContinue:
$sections->Add($section, $section->Name);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$item = new LJCItem("ItemName");
LJCComments.SetComment isContinue:
$item = new LJCItem("ItemName");
LJCComments.GetComment include:
///$section->Items[] = $item;
LJCComments.SetComment isContinue:
$section->Items[] = $item;
LJCComments.GetComment include:
///$sections::AddReplacement($item, "_ClassName_", "ClassName");
LJCComments.SetComment isContinue:
$sections::AddReplacement($item, "_ClassName_", "ClassName");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Deserializes the data from a Sections XML file.</summary>
LJCComments.SetComment comment:
Deserializes the data from a Sections XML file.
LJCComments.GetComment include:
///     <param name="$xmlFileSpec">The source XML file specification.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Sections object.</returns>
LJCComments.SetComment comment:
The Sections object.
LJCComments.GetComment include:
/// <code>&amp;lt;Data xmlns:xsd='http://www.w3.org/2001/XMLSchema'
LJCComments.SetComment comment:
&amp;lt;Data xmlns:xsd='http://www.w3.org/2001/XMLSchema'
LJCComments.GetComment include:
/// xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'&amp;gt;
LJCComments.SetComment isContinue:
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'&amp;gt;
LJCComments.GetComment include:
///  &amp;lt;Sections&amp;gt;
LJCComments.SetComment isContinue:
  &amp;lt;Sections&amp;gt;
LJCComments.GetComment include:
///    &amp;lt;Section&amp;gt;
LJCComments.SetComment isContinue:
    &amp;lt;Section&amp;gt;
LJCComments.GetComment include:
///      &amp;lt;Begin/&amp;gt;
LJCComments.SetComment isContinue:
      &amp;lt;Begin/&amp;gt;
LJCComments.GetComment include:
///      &amp;lt;Name&amp;gt;Main&amp;lt;/Name&amp;gt;
LJCComments.SetComment isContinue:
      &amp;lt;Name&amp;gt;Main&amp;lt;/Name&amp;gt;
LJCComments.GetComment include:
///      &amp;lt;Items&amp;gt;
LJCComments.SetComment isContinue:
      &amp;lt;Items&amp;gt;
LJCComments.GetComment include:
///        &amp;lt;Item&amp;gt;
LJCComments.SetComment isContinue:
        &amp;lt;Item&amp;gt;
LJCComments.GetComment include:
///          &amp;lt;Replacements&amp;gt;
LJCComments.SetComment isContinue:
          &amp;lt;Replacements&amp;gt;
LJCComments.GetComment include:
///            &amp;lt;Replacement&amp;gt;
LJCComments.SetComment isContinue:
            &amp;lt;Replacement&amp;gt;
LJCComments.GetComment include:
///              &amp;lt;Name&amp;gt;_FileSummary_&amp;lt;/Name&amp;gt;
LJCComments.SetComment isContinue:
              &amp;lt;Name&amp;gt;_FileSummary_&amp;lt;/Name&amp;gt;
LJCComments.GetComment include:
///              &amp;lt;Value&amp;gt;This is the file summary text.&amp;lt;/Value&amp;gt;
LJCComments.SetComment isContinue:
              &amp;lt;Value&amp;gt;This is the file summary text.&amp;lt;/Value&amp;gt;
LJCComments.GetComment include:
///            &amp;lt;/Replacement&amp;gt;
LJCComments.SetComment isContinue:
            &amp;lt;/Replacement&amp;gt;
LJCComments.GetComment include:
///            &amp;lt;Replacement&amp;gt;
LJCComments.SetComment isContinue:
            &amp;lt;Replacement&amp;gt;
LJCComments.GetComment include:
///              &amp;lt;Name&amp;gt;_FileName_&amp;lt;/Name&amp;gt;
LJCComments.SetComment isContinue:
              &amp;lt;Name&amp;gt;_FileName_&amp;lt;/Name&amp;gt;
LJCComments.GetComment include:
///              &amp;lt;Value&amp;gt;LJCLib&amp;lt;/Value&amp;gt;
LJCComments.SetComment isContinue:
              &amp;lt;Value&amp;gt;LJCLib&amp;lt;/Value&amp;gt;
LJCComments.GetComment include:
///            &amp;lt;/Replacement&amp;gt;
LJCComments.SetComment isContinue:
            &amp;lt;/Replacement&amp;gt;
LJCComments.GetComment include:
///          &amp;lt;/Replacements&amp;gt;
LJCComments.SetComment isContinue:
          &amp;lt;/Replacements&amp;gt;
LJCComments.GetComment include:
///        &amp;lt;/Item&amp;gt;
LJCComments.SetComment isContinue:
        &amp;lt;/Item&amp;gt;
LJCComments.GetComment include:
///      &amp;lt;/Items&amp;gt;
LJCComments.SetComment isContinue:
      &amp;lt;/Items&amp;gt;
LJCComments.GetComment include:
///    &amp;lt;/Section&amp;gt;
LJCComments.SetComment isContinue:
    &amp;lt;/Section&amp;gt;
LJCComments.GetComment include:
///  &amp;lt;/Sections&amp;gt;
LJCComments.SetComment isContinue:
  &amp;lt;/Sections&amp;gt;
LJCComments.GetComment include:
///&amp;lt;/Data&amp;gt;
LJCComments.SetComment isContinue:
&amp;lt;/Data&amp;gt;
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment isContinue:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///// $sections is an LJCSections object.
LJCComments.SetComment isContinue:
// $sections is an LJCSections object.
LJCComments.GetComment include:
///$sections = LJCSections::Deserialize("Sections.xml");
LJCComments.SetComment isContinue:
$sections = LJCSections::Deserialize("Sections.xml");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Deserializes the data from a Sections XML string.</summary>
LJCComments.SetComment comment:
Deserializes the data from a Sections XML string.
LJCComments.GetComment include:
///     <param name="$xmlString">The XMLDoc node.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Sections object.</returns>
LJCComments.SetComment comment:
The Sections object.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$sections = LJCSections::DeserializeString($xmlstring);
LJCComments.SetComment isContinue:
$sections = LJCSections::DeserializeString($xmlstring);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the Section data from an XMLDoc node.</summary>
LJCComments.SetComment comment:
Creates the Section data from an XMLDoc node.
LJCComments.GetComment include:
///     <param name="$xmlElement">The root Element.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The sections array.</returns>
LJCComments.SetComment comment:
The sections array.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$xmlElement = simplexml_load_file("Sections.xml");
LJCComments.SetComment isContinue:
$xmlElement = simplexml_load_file("Sections.xml");
LJCComments.GetComment include:
///$sections = LJCSections::CreateSections($xmlElement);
LJCComments.SetComment isContinue:
$sections = LJCSections::CreateSections($xmlElement);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Serializes the data to an XML file.</summary>
LJCComments.SetComment comment:
Serializes the data to an XML file.
LJCComments.GetComment include:
///     <param name="$xmlFile">The target XML file.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$sections">The sections array.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$rootName">The XML root name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///LJCSections::Serialize("Sections.xml", $sections);
LJCComments.SetComment isContinue:
LJCSections::Serialize("Sections.xml", $sections);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Adds an object and key value.</summary>
LJCComments.SetComment comment:
Adds an object and key value.
LJCComments.GetComment include:
///     <param name="$item">The object to be added to the collection.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The added item.</returns>
LJCComments.SetComment comment:
The added item.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$sections = new LJCSections();
LJCComments.SetComment isContinue:
$sections = new LJCSections();
LJCComments.GetComment include:
///$section = new LJCSection("SectionName");
LJCComments.SetComment isContinue:
$section = new LJCSection("SectionName");
LJCComments.GetComment include:
///$sections->Add($section, $section->Name);
LJCComments.SetComment isContinue:
$sections->Add($section, $section->Name);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates an object clone.
LJCComments.GetComment include:
/// <summary>Get the item by Key value.</summary>
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The object with the matching key value.</returns>
LJCComments.SetComment comment:
The object with the matching key value.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$sections = new LJCSections();
LJCComments.SetComment isContinue:
$sections = new LJCSections();
LJCComments.GetComment include:
///$section = new LJCSection("SectionName");
LJCComments.SetComment isContinue:
$section = new LJCSection("SectionName");
LJCComments.GetComment include:
///$sections->Add($section, $section->Name);
LJCComments.SetComment isContinue:
$sections->Add($section, $section->Name);
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$section = LJCSections->Get("SectionName");
LJCComments.SetComment isContinue:
$section = LJCSections->Get("SectionName");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Gets an indexed array of keys.
LJCComments.SetComment comment:
The indexed keys array.
LJCComments.SetComment comment:
Gets an indexed array of objects.
LJCComments.SetComment comment:
The indexed values array.
LJCComments.GetComment include:
/// <summary>Indicates if a key already exists.</summary>
LJCComments.SetComment comment:
Indicates if a key already exists.
LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>True if the key already exists, otherwise false.</returns>
LJCComments.SetComment comment:
True if the key already exists, otherwise false.
LJCComments.GetComment include:
/// <code>$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.SetComment comment:
$webCommonPath = "c:/inetpub/wwwroot/LJCPHPCommon";
LJCComments.GetComment include:
///require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.SetComment isContinue:
require_once "$webCommonPath/LJCGenTextSectionLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
///$sections = new LJCSections();
LJCComments.SetComment isContinue:
$sections = new LJCSections();
LJCComments.GetComment include:
///$key = "SectionName";
LJCComments.SetComment isContinue:
$key = "SectionName";
LJCComments.GetComment include:
///if ($sections->HasKey($key))
LJCComments.SetComment isContinue:
if ($sections->HasKey($key))
LJCComments.GetComment include:
///{
LJCComments.SetComment isContinue:
{
LJCComments.GetComment include:
///  throw new Exception("Key: {$key} already in use.");
LJCComments.SetComment isContinue:
  throw new Exception("Key: {$key} already in use.");
LJCComments.GetComment include:
///}
LJCComments.SetComment isContinue:
}
LJCComments.GetComment include:
///else
LJCComments.SetComment isContinue:
else
LJCComments.GetComment include:
///{
LJCComments.SetComment isContinue:
{
LJCComments.GetComment include:
///  $section = new LJCSection($key);
LJCComments.SetComment isContinue:
  $section = new LJCSection($key);
LJCComments.GetComment include:
///}
LJCComments.SetComment isContinue:
}
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Remove the item by Key value.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
Allows foreach()
LJCComments.SetComment comment:
Allows Count(object).
LJCComments.SetComment comment:
Represents a Section Item.
LJCComments.SetComment comment:
Initializes an object instance.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates a copy of the current object.
LJCComments.SetComment comment:
The Item name.
LJCComments.SetComment comment:
The Item replacements.
LJCComments.SetComment comment:
The XML Root Name value.
LJCComments.SetComment comment:
Represents Item Replacements.
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates a copy of the current object.
LJCComments.SetComment comment:
The Replacement name.
LJCComments.SetComment comment:
The Replacement value.
LJCComments.SetComment comment:
The XML Root Name value.
LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains Classes to parse code XML comments.
LJCComments.SetComment isContinue:
 Contains Classes to parse code XML comments.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Holds the XML Comments for the next generation point. A generation point
LJCComments.SetComment isContinue:
 Holds the XML Comments for the next generation point. A generation point
LJCComments.GetComment include:
/// is the start of a File, Class, Method or Property.
LJCComments.SetComment isContinue:
 is the start of a File, Class, Method or Property.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Provides methods to parse code XML comment values.</summary>
LJCComments.SetComment comment:
Provides methods to parse code XML comment values.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Parses the code XML comments and holds them until the next generation
LJCComments.SetComment isContinue:
 Parses the code XML comments and holds them until the next generation
LJCComments.GetComment include:
/// point. A generation point is the start of a File, Class, Method or
LJCComments.SetComment isContinue:
 point. A generation point is the start of a File, Class, Method or
LJCComments.GetComment include:
/// Property.
LJCComments.SetComment isContinue:
 Property.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Initializes an object instance.
LJCComments.SetComment comment:
Clears the XML comments.
LJCComments.GetComment include:
/// <summary>Sets the XML comment value.</summary>
LJCComments.SetComment comment:
Sets the XML comment value.
LJCComments.GetComment include:
///     <param name="$line">The code line.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$codeFileSpec">The code file spec.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// require_once "LJCCommentsLib.php";
LJCComments.SetComment isContinue:
 require_once "LJCCommentsLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $line = "/// &amp;lt;summary&amp;gt;A summary comment.&amp;lt;/summary&amp;gt;";
LJCComments.SetComment isContinue:
 $line = "/// &amp;lt;summary&amp;gt;A summary comment.&amp;lt;/summary&amp;gt;";
LJCComments.GetComment include:
/// $comments = new LJCComments();
LJCComments.SetComment isContinue:
 $comments = new LJCComments();
LJCComments.GetComment include:
/// $comments->SetComment($line, "SourceFile.php");
LJCComments.SetComment isContinue:
 $comments->SetComment($line, "SourceFile.php");
LJCComments.GetComment include:
/// $summary = $comments->Summary;
LJCComments.SetComment isContinue:
 $summary = $comments->Summary;
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The example Code.
LJCComments.SetComment comment:
The current tag name.
LJCComments.SetComment comment:
The Param comments.
LJCComments.SetComment comment:
The Remark comment.
LJCComments.SetComment comment:
The Returns comment.
LJCComments.SetComment comment:
The Summary comment.
LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains Classes to create DocData from a PHP source file.
LJCComments.SetComment isContinue:
 Contains Classes to create DocData from a PHP source file.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains classes for these functions:&lt;br /&gt;
LJCComments.SetComment isContinue:
 Contains classes for these functions:&lt;br /&gt;
LJCComments.GetComment include:
/// - Extract XML Comments from a PHP File&lt;br /&gt;
LJCComments.SetComment isContinue:
 - Extract XML Comments from a PHP File&lt;br /&gt;
LJCComments.GetComment include:
/// - Extract XML Comments from Include XML files
LJCComments.SetComment isContinue:
 - Extract XML Comments from Include XML files
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.SetComment isContinue:
		Provides methods to generate DocData XML files from a code file.
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment isContinue:
		Initializes a class instance.
LJCComments.SetComment isContinue:
		And More.
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <summary>Creates and optionally writes the DocData XML.</summary>
LJCComments.SetComment comment:
Creates and optionally writes the DocData XML.
LJCComments.GetComment include:
///     <param name="$codeFileSpec">The code file specification.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$writeXML">Indicates if the XML file is to be written.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$outputPath">The output path.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The DocData XML string.</returns>
LJCComments.SetComment comment:
The DocData XML string.
LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// require_once "LJCDocDataGenLib.php";
LJCComments.SetComment isContinue:
 require_once "LJCDocDataGenLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $docDataGen = new LJCDocDataGen();
LJCComments.SetComment isContinue:
 $docDataGen = new LJCDocDataGen();
LJCComments.GetComment include:
/// $xmlString = $docDataGen->CreateDocXMLString("SourceFile.php");
LJCComments.SetComment isContinue:
 $xmlString = $docDataGen->CreateDocXMLString("SourceFile.php");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Generates the Doc data for the file.</summary>
LJCComments.SetComment comment:
Generates the Doc data for the file.
LJCComments.GetComment include:
///     <param name="$codeFileSpec">The code file spec.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The DocData XML string.</returns>
LJCComments.SetComment comment:
The DocData XML string.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains classes to represent and generate DocData XML.
LJCComments.SetComment isContinue:
 Contains classes to represent and generate DocData XML.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// DocData XML data is generated from the PHP source files.
LJCComments.SetComment isContinue:
 DocData XML data is generated from the PHP source files.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// Contains classes for these functions:&lt;br /&gt;
LJCComments.SetComment isContinue:
 Contains classes for these functions:&lt;br /&gt;
LJCComments.GetComment include:
/// - Represent a DocData Object Tree&lt;br /&gt;
LJCComments.SetComment isContinue:
 - Represent a DocData Object Tree&lt;br /&gt;
LJCComments.GetComment include:
/// - Serialize and Deserialize DocData XML
LJCComments.SetComment isContinue:
 - Serialize and Deserialize DocData XML
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;pre&gt;DocData Object Graph:&lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;pre&gt;DocData Object Graph:&lt;br /&gt;
LJCComments.GetComment include:
/// LJCDocDataFile&lt;br /&gt;
LJCComments.SetComment isContinue:
 LJCDocDataFile&lt;br /&gt;
LJCComments.GetComment include:
///   Classes - LJCDocDataClasses&lt;br /&gt;
LJCComments.SetComment isContinue:
   Classes - LJCDocDataClasses&lt;br /&gt;
LJCComments.GetComment include:
///     LJCDocDataClass&lt;br /&gt;
LJCComments.SetComment isContinue:
     LJCDocDataClass&lt;br /&gt;
LJCComments.GetComment include:
///       Methods - LJCDocDataMethods&lt;br /&gt;
LJCComments.SetComment isContinue:
       Methods - LJCDocDataMethods&lt;br /&gt;
LJCComments.GetComment include:
///         LJCDocDataMethod&lt;br /&gt;
LJCComments.SetComment isContinue:
         LJCDocDataMethod&lt;br /&gt;
LJCComments.GetComment include:
///           Params - LJCDocDataParams&lt;br /&gt;
LJCComments.SetComment isContinue:
           Params - LJCDocDataParams&lt;br /&gt;
LJCComments.GetComment include:
///             LJCDocDataParam&lt;br /&gt;
LJCComments.SetComment isContinue:
             LJCDocDataParam&lt;br /&gt;
LJCComments.GetComment include:
///       Properties - LJCDocDataProperties&lt;br /&gt;
LJCComments.SetComment isContinue:
       Properties - LJCDocDataProperties&lt;br /&gt;
LJCComments.GetComment include:
///         LJCDocDataProperty&lt;br /&gt;
LJCComments.SetComment isContinue:
         LJCDocDataProperty&lt;br /&gt;
LJCComments.GetComment include:
///   Functions - LJCDocDataMethods&lt;/pre&gt;
LJCComments.SetComment isContinue:
   Functions - LJCDocDataMethods&lt;/pre&gt;
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Represents a DocData Class.
LJCComments.GetComment include:
/// <summary>Initializes a class instance.</summary>
LJCComments.SetComment comment:
Initializes a class instance.
LJCComments.GetComment include:
///     <param name="$name">The Name value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$summary">The Summary value.</param>
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates a Clone of the current object.</summary>
LJCComments.SetComment comment:
Creates a Clone of the current object.
LJCComments.GetComment include:
/// <returns>The cloned object.</returns>
LJCComments.SetComment comment:
The cloned object.
LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// require_once "LJCDocDataLib.php";
LJCComments.SetComment isContinue:
 require_once "LJCDocDataLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $docDataClass = new LJCDocDataClass("ClassName", "Summary Text");
LJCComments.SetComment isContinue:
 $docDataClass = new LJCDocDataClass("ClassName", "Summary Text");
LJCComments.GetComment include:
/// $newDocDataClass = $docDataClass->Clone();
LJCComments.SetComment isContinue:
 $newDocDataClass = $docDataClass->Clone();
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Code value.
LJCComments.SetComment comment:
The Method array.
LJCComments.SetComment comment:
The Name value.
LJCComments.SetComment comment:
The Property array.
LJCComments.SetComment comment:
The Remarks value.
LJCComments.SetComment comment:
The Summary value.
LJCComments.SetComment comment:
Represents a collection of objects.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates an object clone.
LJCComments.GetComment include:
/// <summary>Get the item by Key value.</summary>
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The object with the matching key value.</returns>
LJCComments.SetComment comment:
The object with the matching key value.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Represents DocData Lib File XML Comments.
LJCComments.SetComment isContinue:
 Represents DocData Lib File XML Comments.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The DocData XML is intended to contain the XML Comments based on the PHP
LJCComments.SetComment isContinue:
 The DocData XML is intended to contain the XML Comments based on the PHP
LJCComments.GetComment include:
/// file structure of Classes, Methods and Properties.
LJCComments.SetComment isContinue:
 file structure of Classes, Methods and Properties.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;pre&gt; &amp;lt;LJCDocDataFile&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;pre&gt; &amp;lt;LJCDocDataFile&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///   &amp;lt;Name/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
   &amp;lt;Name/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///   &amp;lt;Summary/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
   &amp;lt;Summary/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///   &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
   &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///   &amp;lt;Classes&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
   &amp;lt;Classes&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///     &amp;lt;Class&gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
     &amp;lt;Class&gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;Name/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;Name/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;Summary/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;Summary/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;Methods&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;Methods&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///         &amp;lt;Method&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
         &amp;lt;Method&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Name/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Name/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Summary/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Summary/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Params&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Params&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///             &amp;lt;Param&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
             &amp;lt;Param&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///               &amp;lt;Name/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
               &amp;lt;Name/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///               &amp;lt;Summary/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
               &amp;lt;Summary/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///             &amp;lt;/Param&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
             &amp;lt;/Param&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;/Params&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;/Params&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Remarks/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Returns/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Returns/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Syntax/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Syntax/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Code/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Code/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///         &amp;lt;/Method&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
         &amp;lt;/Method&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;/Methods&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;/Methods&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;Properties&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;Properties&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///         &amp;lt;Property&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
         &amp;lt;Property&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Name/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Name/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Summary/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Summary/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Syntax/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Syntax/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///         &amp;lt;/Property&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
         &amp;lt;/Property&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;/Properties&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;/Properties&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///     &amp;lt;/Class&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
     &amp;lt;/Class&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///   &amp;lt;/Classes&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
   &amp;lt;/Classes&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
/// &amp;lt;/LJCDocDataFile&amp;gt;&lt;/pre&gt;
LJCComments.SetComment isContinue:
 &amp;lt;/LJCDocDataFile&amp;gt;&lt;/pre&gt;
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Deserializes the data from an LJCDocDataFile XML file.</summary>
LJCComments.SetComment comment:
Deserializes the data from an LJCDocDataFile XML file.
LJCComments.GetComment include:
///     <param name="$xmlFileSpec">The source XML file specification.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The LJCDocDataFile object.</returns>
LJCComments.SetComment comment:
The LJCDocDataFile object.
LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// require_once "LJCDocDataLib.php";
LJCComments.SetComment isContinue:
 require_once "LJCDocDataLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");
LJCComments.SetComment isContinue:
 $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Deserializes the data from an LJCDocDataFile XML string.</summary>
LJCComments.SetComment comment:
Deserializes the data from an LJCDocDataFile XML string.
LJCComments.GetComment include:
///     <param name="$xmlString">The XML string.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The LJCDocDataFile object.</returns>
LJCComments.SetComment comment:
The LJCDocDataFile object.
LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// require_once "LJCDocDataLib.php";
LJCComments.SetComment isContinue:
 require_once "LJCDocDataLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $xmlString = readfile("DocData.xml");
LJCComments.SetComment isContinue:
 $xmlString = readfile("DocData.xml");
LJCComments.GetComment include:
/// $docDataFile = LJCDocDataFile::DeserializeString($xmlString);
LJCComments.SetComment isContinue:
 $docDataFile = LJCDocDataFile::DeserializeString($xmlString);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Deserialize Properties from the Class node.</summary>
LJCComments.SetComment comment:
Deserialize Properties from the Class node.
LJCComments.GetComment include:
///     <param name="$classNode"></param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The LJCDocDataProperties object.</returns>
LJCComments.SetComment comment:
The LJCDocDataProperties object.
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates a Clone of the current object.</summary>
LJCComments.SetComment comment:
Creates a Clone of the current object.
LJCComments.GetComment include:
/// <returns>The cloned object.</returns>
LJCComments.SetComment comment:
The cloned object.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Writes the serialized XML.</summary>
LJCComments.SetComment comment:
Writes the serialized XML.
LJCComments.GetComment include:
///     <param name="$xmlFileSpec">The source XML file specification.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// require_once "LJCDocDataLib.php";
LJCComments.SetComment isContinue:
 require_once "LJCDocDataLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");
LJCComments.SetComment isContinue:
 $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");
LJCComments.GetComment include:
/// $docDataFile->Serialize("NewDocData.xml");
LJCComments.SetComment isContinue:
 $docDataFile->Serialize("NewDocData.xml");
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// require_once "LJCDocDataLib.php";
LJCComments.SetComment isContinue:
 require_once "LJCDocDataLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");
LJCComments.SetComment isContinue:
 $docDataFile = LJCDocDataFile::Deserialize("DocData.xml");
LJCComments.GetComment include:
/// $xmlString = $docDataFile->SerializeToString();
LJCComments.SetComment isContinue:
 $xmlString = $docDataFile->SerializeToString();
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Class collection.
LJCComments.SetComment comment:
The Function array.
LJCComments.SetComment comment:
The Name value.
LJCComments.SetComment comment:
The Name value.
LJCComments.SetComment comment:
The Summary value.
LJCComments.SetComment comment:
Represents a DocData Function.
LJCComments.GetComment include:
/// <summary>Initializes a class instance.</summary>
LJCComments.SetComment comment:
Initializes a class instance.
LJCComments.GetComment include:
///     <param name="$name">The Name value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$summary">The Summary value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$returns">The Returns value.</param>
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates a Clone of the current object.</summary>
LJCComments.SetComment comment:
Creates a Clone of the current object.
LJCComments.GetComment include:
/// <returns>The cloned object.</returns>
LJCComments.SetComment comment:
The cloned object.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Code value.
LJCComments.SetComment comment:
The Name value.
LJCComments.SetComment comment:
The Param array.
LJCComments.SetComment comment:
The Remarks value.
LJCComments.SetComment comment:
The Returns value.
LJCComments.SetComment comment:
The Summary value.
LJCComments.SetComment comment:
The Syntax value.
LJCComments.SetComment comment:
Represents a collection of objects.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates an object clone.
LJCComments.GetComment include:
/// <summary>Get the item by Key value.</summary>
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The object with the matching key value.</returns>
LJCComments.SetComment comment:
The object with the matching key value.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
Represents a DocData Parameter.
LJCComments.GetComment include:
/// <summary>Initializes a class instance.</summary>
LJCComments.SetComment comment:
Initializes a class instance.
LJCComments.GetComment include:
///     <param name="$name">The Name value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$summary">The Summary value.</param>
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates a Clone of the current object.</summary>
LJCComments.SetComment comment:
Creates a Clone of the current object.
LJCComments.GetComment include:
/// <returns>The cloned object.</returns>
LJCComments.SetComment comment:
The cloned object.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Name value.
LJCComments.SetComment comment:
The Summary value.
LJCComments.SetComment comment:
Represents a collection of objects.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates an object clone.
LJCComments.GetComment include:
/// <summary>Get the item by Key value.</summary>
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The object with the matching key value.</returns>
LJCComments.SetComment comment:
The object with the matching key value.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
Represents a DocData Property.
LJCComments.GetComment include:
/// <summary>Initializes a class instance.</summary>
LJCComments.SetComment comment:
Initializes a class instance.
LJCComments.GetComment include:
///     <param name="$name">The Name value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$summary">The Summary value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$returns">The Returns value.</param>
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates a Clone of the current object.</summary>
LJCComments.SetComment comment:
Creates a Clone of the current object.
LJCComments.GetComment include:
/// <returns>The cloned object.</returns>
LJCComments.SetComment comment:
The cloned object.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Name value.
LJCComments.SetComment comment:
The Remarks value.
LJCComments.SetComment comment:
The Returns value.
LJCComments.SetComment comment:
The Summary value.
LJCComments.SetComment comment:
The Syntax value.
LJCComments.SetComment comment:
Represents a collection of objects.
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Get the item by Key value.</summary>
LJCComments.SetComment comment:
Get the item by Key value.
LJCComments.GetComment include:
///     <param name="$key">The element key.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$throwError">Indicates if an error should be thrown if the key is not found.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The object with the matching key value.</returns>
LJCComments.SetComment comment:
The object with the matching key value.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains Classes to retrieve XML Comments from include XML files.
LJCComments.SetComment isContinue:
 Contains Classes to retrieve XML Comments from include XML files.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Handles Include file XML comment values.</summary>
LJCComments.SetComment comment:
Handles Include file XML comment values.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Parses the include XML Comments from a referenced Include XML
LJCComments.SetComment isContinue:
 Parses the include XML Comments from a referenced Include XML
LJCComments.GetComment include:
/// documentation file.
LJCComments.SetComment isContinue:
 documentation file.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// After the  XML Comments are parsed  for that
LJCComments.SetComment isContinue:
 After the  XML Comments are parsed  for that
LJCComments.GetComment include:
/// generation point, they are copied to the LJCComments object.
LJCComments.SetComment isContinue:
 generation point, they are copied to the LJCComments object.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Initializes an object instance.
LJCComments.GetComment include:
/// <summary>Sets the comments from the specified include file.</summary>
LJCComments.SetComment comment:
Sets the comments from the specified include file.
LJCComments.GetComment include:
///     <param name="$line">The code line.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$codeFileSpec">The Code File spec.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// require_once "LJCIncludeLib.php";
LJCComments.SetComment isContinue:
 require_once "LJCIncludeLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $includeFile = new LJCInclude();
LJCComments.SetComment isContinue:
 $includeFile = new LJCInclude();
LJCComments.GetComment include:
/// $line = "/// &amp;lt;include path='items/SetComment/*' file='Doc/LJCComments.xml'/&amp;gt;"
LJCComments.SetComment isContinue:
 $line = "/// &amp;lt;include path='items/SetComment/*' file='Doc/LJCComments.xml'/&amp;gt;"
LJCComments.GetComment include:
/// $includeFile->SetComments($line, "SourceFile.php");
LJCComments.SetComment isContinue:
 $includeFile->SetComments($line, "SourceFile.php");
LJCComments.GetComment include:
/// foreach ($includeFile->Comments as $comment)
LJCComments.SetComment isContinue:
 foreach ($includeFile->Comments as $comment)
LJCComments.GetComment include:
/// {
LJCComments.SetComment isContinue:
 {
LJCComments.GetComment include:
///   // Process each XML comment.
LJCComments.SetComment isContinue:
   // Process each XML comment.
LJCComments.GetComment include:
///   // This code is included in the LJCComments->SetComment() method.
LJCComments.SetComment isContinue:
   // This code is included in the LJCComments->SetComment() method.
LJCComments.GetComment include:
/// }
LJCComments.SetComment isContinue:
 }
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Incude comments.
LJCComments.SetComment comment:
The Include file spec.
LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains Classes to manage param XML Comments.
LJCComments.SetComment isContinue:
 Contains Classes to manage param XML Comments.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Handles param comments.
LJCComments.SetComment comment:
Creates a Param object from a param XML comment.
LJCComments.SetComment comment:

LJCComments.SetComment comment:
The Param object.
LJCComments.SetComment comment:
Initializes an object instance.
LJCComments.SetComment comment:
Creates CodeDoc pages from source file list.
LJCComments.SetComment comment:
Create the HTML files.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains classes to create GenData from DocData.
LJCComments.SetComment isContinue:
 Contains classes to create GenData from DocData.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains classes for these functions:&lt;br /&gt;
LJCComments.SetComment isContinue:
 Contains classes for these functions:&lt;br /&gt;
LJCComments.GetComment include:
/// - Create GenData XML from DocData XML&lt;br /&gt;
LJCComments.SetComment isContinue:
 - Create GenData XML from DocData XML&lt;br /&gt;
LJCComments.GetComment include:
/// - Serialize GenData XML&lt;br /&gt;
LJCComments.SetComment isContinue:
 - Serialize GenData XML&lt;br /&gt;
LJCComments.GetComment include:
/// - Create CodeDoc HTML Files
LJCComments.SetComment isContinue:
 - Create CodeDoc HTML Files
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// Uses the LJCGenTextLib class GenTextLib to create the CodeDoc HTML files
LJCComments.SetComment isContinue:
 Uses the LJCGenTextLib class GenTextLib to create the CodeDoc HTML files
LJCComments.GetComment include:
/// by combining the GenData and an HTML Text Template.&lt;br /&gt;
LJCComments.SetComment isContinue:
 by combining the GenData and an HTML Text Template.&lt;br /&gt;
LJCComments.GetComment include:
/// In this implementation there is a GenData XML file created for each PHP
LJCComments.SetComment isContinue:
 In this implementation there is a GenData XML file created for each PHP
LJCComments.GetComment include:
/// file,  Class, Method/Function and Property.
LJCComments.SetComment isContinue:
 file,  Class, Method/Function and Property.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// An HTML page is generated for each GenData XML file and the corresponding HTML
LJCComments.SetComment isContinue:
 An HTML page is generated for each GenData XML file and the corresponding HTML
LJCComments.GetComment include:
/// Text Template.&lt;br /&gt;
LJCComments.SetComment isContinue:
 Text Template.&lt;br /&gt;
LJCComments.GetComment include:
/// The templates are in the Templates subfolder.
LJCComments.SetComment isContinue:
 The templates are in the Templates subfolder.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// PHP File - LibTemplate.html&lt;br /&gt;
LJCComments.SetComment isContinue:
 PHP File - LibTemplate.html&lt;br /&gt;
LJCComments.GetComment include:
/// Class - ClassTemplate.html&lt;br /&gt;
LJCComments.SetComment isContinue:
 Class - ClassTemplate.html&lt;br /&gt;
LJCComments.GetComment include:
/// Method - FunctionTemplate.html&lt;br /&gt;
LJCComments.SetComment isContinue:
 Method - FunctionTemplate.html&lt;br /&gt;
LJCComments.GetComment include:
/// Property - PropertyTemplate.html
LJCComments.SetComment isContinue:
 Property - PropertyTemplate.html
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The PHP HTML files are output to the folder specified in the LJCGenDataGen
LJCComments.SetComment isContinue:
 The PHP HTML files are output to the folder specified in the LJCGenDataGen
LJCComments.GetComment include:
/// constructor.
LJCComments.SetComment isContinue:
 constructor.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// A subfolder is created for each class. This folder contains the Class HTML,
LJCComments.SetComment isContinue:
 A subfolder is created for each class. This folder contains the Class HTML,
LJCComments.GetComment include:
/// Methods HTML and Properties HTML files.&lt;br /&gt;
LJCComments.SetComment isContinue:
 Methods HTML and Properties HTML files.&lt;br /&gt;
LJCComments.GetComment include:
/// The Methods and Properties HTML names  are prefixed with the Class name to
LJCComments.SetComment isContinue:
 The Methods and Properties HTML names  are prefixed with the Class name to
LJCComments.GetComment include:
/// prevent overwriting items with the same  name.
LJCComments.SetComment isContinue:
 prevent overwriting items with the same  name.
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// &lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;br /&gt;
LJCComments.GetComment include:
/// See: &lt;a href="LJCGenTextSectionLib.html"&gt;Gen Sections&lt;/a&gt; for
LJCComments.SetComment isContinue:
 See: &lt;a href="LJCGenTextSectionLib.html"&gt;Gen Sections&lt;/a&gt; for
LJCComments.GetComment include:
/// more information about GenData XML.
LJCComments.SetComment isContinue:
 more information about GenData XML.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Provides methods to generate GenData XML files.
LJCComments.SetComment isContinue:
 Provides methods to generate GenData XML files.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// The GenData XML files  provide the  data for GenTextLib-LJCGenText to
LJCComments.SetComment isContinue:
 The GenData XML files  provide the  data for GenTextLib-LJCGenText to
LJCComments.GetComment include:
/// generate CodeDoc HTML  files.
LJCComments.SetComment isContinue:
 generate CodeDoc HTML  files.
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The GenData XML is intended to display the XML Comments based on the Text
LJCComments.SetComment isContinue:
 The GenData XML is intended to display the XML Comments based on the Text
LJCComments.GetComment include:
/// Template that will be used.
LJCComments.SetComment isContinue:
 Template that will be used.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The Text Section and Replacement names must
LJCComments.SetComment isContinue:
 The Text Section and Replacement names must
LJCComments.GetComment include:
/// match  those expected by the Template.
LJCComments.SetComment isContinue:
 match  those expected by the Template.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// &lt;p&gt;
LJCComments.SetComment isContinue:
 &lt;p&gt;
LJCComments.GetComment include:
/// The number and names of sections, items and replacements depends on the GenData
LJCComments.SetComment isContinue:
 The number and names of sections, items and replacements depends on the GenData
LJCComments.GetComment include:
/// from the PHP files and the requirements of the HTML Template.
LJCComments.SetComment isContinue:
 from the PHP files and the requirements of the HTML Template.
LJCComments.GetComment include:
/// &lt;/p&gt;
LJCComments.SetComment isContinue:
 &lt;/p&gt;
LJCComments.GetComment include:
/// This is the standard layout for the GenData XML files.
LJCComments.SetComment isContinue:
 This is the standard layout for the GenData XML files.
LJCComments.GetComment include:
/// &lt;pre&gt; &amp;lt;Data xmlns:xsd="http://www.w3.org/2001/XMLSchema"&lt;br /&gt;
LJCComments.SetComment isContinue:
 &lt;pre&gt; &amp;lt;Data xmlns:xsd="http://www.w3.org/2001/XMLSchema"&lt;br /&gt;
LJCComments.GetComment include:
///  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///   &amp;lt;Sections&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
   &amp;lt;Sections&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///     &amp;lt;Section&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
     &amp;lt;Section&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;Begin/&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;Begin/&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;Name&amp;gt;Main&amp;lt;/Name&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;Name&amp;gt;Main&amp;lt;/Name&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;Items&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;Items&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///         &amp;lt;Item&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
         &amp;lt;Item&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Replacements&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Replacements&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///             &amp;lt;Replacement&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
             &amp;lt;Replacement&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///               &amp;lt;Name&amp;gt;&amp;lt;/Name&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
               &amp;lt;Name&amp;gt;&amp;lt;/Name&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///               &amp;lt;Value&amp;gt;&amp;lt;/Value&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
               &amp;lt;Value&amp;gt;&amp;lt;/Value&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///             &amp;lt;Replacement&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
             &amp;lt;Replacement&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///           &amp;lt;Replacements&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
           &amp;lt;Replacements&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///         &amp;lt;Item&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
         &amp;lt;Item&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///       &amp;lt;Items&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
       &amp;lt;Items&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///     &amp;lt;Section&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
     &amp;lt;Section&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
///   &amp;lt;Sections&amp;gt;&lt;br /&gt;
LJCComments.SetComment isContinue:
   &amp;lt;Sections&amp;gt;&lt;br /&gt;
LJCComments.GetComment include:
/// &amp;lt;/Data&amp;gt;&lt;/pre&gt;
LJCComments.SetComment isContinue:
 &amp;lt;/Data&amp;gt;&lt;/pre&gt;
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Initializes an object instance.
LJCComments.GetComment include:
/// <summary>Creates a Lib GenData XML string and optional file.</summary>
LJCComments.SetComment comment:
Creates a Lib GenData XML string and optional file.
LJCComments.GetComment include:
///     <param name="$docXMLString">The DocData XML string.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$codeFileSpec">The code file specification.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$writeXML">Indicates if the XML file is to be written.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$outputPath">The output path.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <code>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// $devPath = "c:/Users/Les/Documents/Visual Studio 2022/LJCPHPProjects";
LJCComments.SetComment isContinue:
 $devPath = "c:/Users/Les/Documents/Visual Studio 2022/LJCPHPProjects";
LJCComments.GetComment include:
/// require_once "$devPath/GenDoc/GenDataLib/LJCGenDataGenLib.php";
LJCComments.SetComment isContinue:
 require_once "$devPath/GenDoc/GenDataLib/LJCGenDataGenLib.php";
LJCComments.GetComment include:
/// require_once "$devPath/GenDoc/GenDataLib/LJCGenDataGenLib.php";
LJCComments.SetComment isContinue:
 require_once "$devPath/GenDoc/GenDataLib/LJCGenDataGenLib.php";
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $docDataGen = new LJCDocDataGen();
LJCComments.SetComment isContinue:
 $docDataGen = new LJCDocDataGen();
LJCComments.GetComment include:
/// $genDataGen = new LJCGenDAtaGen();
LJCComments.SetComment isContinue:
 $genDataGen = new LJCGenDAtaGen();
LJCComments.GetComment include:
/// 
LJCComments.SetComment isContinue:

LJCComments.GetComment include:
/// $fileSpec = "SourceFile.php";
LJCComments.SetComment isContinue:
 $fileSpec = "SourceFile.php";
LJCComments.GetComment include:
/// $docXMLString = $this->DocDataGen->CreateDocXMLString($fileSpec);
LJCComments.SetComment isContinue:
 $docXMLString = $this->DocDataGen->CreateDocXMLString($fileSpec);
LJCComments.GetComment include:
/// $genXMLString = $this->GenDataGen->CreateLibXMLString($docXMLString
LJCComments.SetComment isContinue:
 $genXMLString = $this->GenDataGen->CreateLibXMLString($docXMLString
LJCComments.GetComment include:
///   , $fileSpec);
LJCComments.SetComment isContinue:
   , $fileSpec);
LJCComments.GetComment include:
/// </code>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
Creates a Method Params section GenData XML string.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains Classes to generate supporting GenData XML text.
LJCComments.SetComment isContinue:
 Contains Classes to generate supporting GenData XML text.
LJCComments.GetComment include:
/// </summary>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Provides methods for creating GenData XML text.</summary>
LJCComments.SetComment comment:
Provides methods for creating GenData XML text.
LJCComments.GetComment include:
/// <remarks>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// Contains static methods for  generating supporting GenData XML text.
LJCComments.SetComment isContinue:
 Contains static methods for  generating supporting GenData XML text.
LJCComments.GetComment include:
/// </remarks>
LJCComments.SetComment isContinue:

LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the Item begin string.</summary>
LJCComments.SetComment comment:
Creates the Item begin string.
LJCComments.GetComment include:
///     <param name="$name">The Item name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$indent">The indent count.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Item Begin XML string.</returns>
LJCComments.SetComment comment:
The Item Begin XML string.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the Item end string.</summary>
LJCComments.SetComment comment:
Creates the Item end string.
LJCComments.GetComment include:
///     <param name="$indent">The indent count.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Item End XML string.</returns>
LJCComments.SetComment comment:
The Item End XML string.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the Replacement string.</summary>
LJCComments.SetComment comment:
Creates the Replacement string.
LJCComments.GetComment include:
///     <param name="$name">The Replacement name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$value">The Replacement value.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$indent">The indent count.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Replacement XML string.</returns>
LJCComments.SetComment comment:
The Replacement XML string.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the Section begin string.</summary>
LJCComments.SetComment comment:
Creates the Section begin string.
LJCComments.GetComment include:
///     <param name="$name">The Section name.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
///     <param name="$indent">The indent count.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Section Begin XML string.</returns>
LJCComments.SetComment comment:
The Section Begin XML string.
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <summary>Creates the Section end string.</summary>
LJCComments.SetComment comment:
Creates the Section end string.
LJCComments.GetComment include:
///     <param name="$indent">The indent count.</param>
LJCComments.SetComment comment:

LJCComments.GetComment include:
/// <returns>The Section End XML string.</returns>
LJCComments.SetComment comment:
The Section End XML string.
LJCComments.SetComment comment:

LJCComments.SetComment comment:

LJCComments.SetComment comment:
The head XML string.
